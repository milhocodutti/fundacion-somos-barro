<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MicrosoftKustoServiceLayer</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Kusto.ServiceLayer.Admin.AdminService">
            <summary>
            Admin task service class
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Admin.AdminService.Instance">
            <summary>
            Gets the singleton instance object
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Admin.AdminService.InitializeService(Microsoft.SqlTools.Hosting.Protocol.IProtocolEndpoint,Microsoft.Kusto.ServiceLayer.Connection.IConnectionManager)">
            <summary>
            Initializes the service instance
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Admin.AdminService.HandleGetDatabaseInfoRequest(Microsoft.Kusto.ServiceLayer.Admin.Contracts.GetDatabaseInfoParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.Admin.Contracts.GetDatabaseInfoResponse})">
            <summary>
            Handle get database info request
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Admin.AdminService.GetDatabaseInfo(Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo)">
            <summary>
            Return database info for a specific database
            </summary>
            <param name="connInfo"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Admin.Contracts.DatabaseInfo.Options">
            <summary>
            Gets or sets the options
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Microsoft.Kusto.ServiceLayer.Admin.Contracts.GetDatabaseInfoParams" -->
        <member name="P:Microsoft.Kusto.ServiceLayer.Admin.Contracts.GetDatabaseInfoParams.OwnerUri">
            <summary>
            Uri identifier for the connection to get the database info for
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Admin.Contracts.GetDatabaseInfoResponse">
            <summary>
            Response object for get database info
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Admin.Contracts.GetDatabaseInfoResponse.DatabaseInfo">
            <summary>
            The object containing the database info
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Admin.Contracts.GetDatabaseInfoRequest">
            <summary>
            Get database info request mapping
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.CancelTokenKey">
            <summary>
            Used to uniquely identify a CancellationTokenSource associated with both
            a string URI and a string connection type.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo">
            <summary>
            Information pertaining to a unique connection instance.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.#ctor(Microsoft.Kusto.ServiceLayer.Connection.IDataSourceConnectionFactory,System.String,Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.ConnectionId">
            <summary>
            Unique Id, helpful to identify a connection info object
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.OwnerUri">
            <summary>
            URI identifying the owner/user of the connection. Could be a file, service, resource, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.Factory">
            <summary>
            Factory used for creating the SQL connection associated with the connection info.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.ConnectionDetails">
            <summary>
            Properties used for creating/opening the SQL connection.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo._connectionTypeToConnectionMap">
            <summary>
            A map containing all connections to the database that are associated with 
            this ConnectionInfo's OwnerUri.
            This is internal for testing access only
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.IntellisenseMetrics">
            <summary>
            Intellisense Metrics
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.IsCloud">
            <summary>
            Returns true if the db connection is to any cloud instance
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.MajorVersion">
            <summary>
            Returns the major version number of the db we are connected to 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.AllConnections">
            <summary>
            All DbConnection instances held by this ConnectionInfo
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.AllConnectionTypes">
            <summary>
            All connection type strings held by this ConnectionInfo
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.CountConnections">
            <summary>
            The count of DbConnectioninstances held by this ConnectionInfo 
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.TryGetConnection(System.String,Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection@)">
            <summary>
            Try to get the DbConnection associated with the given connection type string. 
            </summary>
            <returns>true if a connection with type connectionType was located and out connection was set, 
            false otherwise </returns>
            <exception cref="T:System.ArgumentException">Thrown when connectionType is null or empty</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.AddConnection(System.String,Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection)">
            <summary>
            Adds a DbConnection to this object and associates it with the given 
            connection type string. If a connection already exists with an identical 
            connection type string, it is not overwritten. Ignores calls where connectionType = null
            </summary>
            <exception cref="T:System.ArgumentException">Thrown when connectionType is null or empty</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.RemoveConnection(System.String)">
            <summary>
            Removes the single DbConnection instance associated with string connectionType
            </summary>
            <exception cref="T:System.ArgumentException">Thrown when connectionType is null or empty</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo.RemoveAllConnections">
            <summary>
            Removes all DbConnection instances held by this object
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Connection.ConnectionManager._ownerToConnectionMap">
            <summary>
            Map from script URIs to ConnectionInfo objects
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.ConnectionProviderOptionsHelper">
            <summary>
            Helper class for providing metadata about connection options
            </summary>         
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService">
            <summary>
            Main class for the Connection Management services
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService._instance">
            <summary>
            Singleton service instance
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.Instance">
            <summary>
            Gets the singleton service instance
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.cancelTupleToCancellationTokenSourceMap">
            <summary>
            A map containing all CancellationTokenSource objects that are associated with a given URI/ConnectionType pair. 
            Entries in this map correspond to ReliableDataSourceClient instances that are in the process of connecting. 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.LockedDatabaseManager">
            <summary>
            Database Lock manager instance
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService._serviceHost">
            <summary>
            Service host object for sending/receiving requests/events.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.RegisterConnectedQueue(System.String,Microsoft.Kusto.ServiceLayer.LanguageServices.IConnectedBindingQueue)">
            <summary>
            Register a new connection queue if not already registered
            </summary>
            <param name="type"></param>
            <param name="connectedQueue"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.OnConnectionHandler">
            <summary>
            Callback for onconnection handler
            </summary>
            <param name="sqlConnection"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.OnDisconnectHandler">
            <summary>
            Callback for ondisconnect handler
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.onConnectionActivities">
            <summary>
            List of onconnection handlers
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.onDisconnectActivities">
            <summary>
            List of ondisconnect handlers
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService._dataSourceConnectionFactory">
            <summary>
            Gets the SQL connection factory instance
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.ValidateConnectParams(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams)">
            <summary>
            Validates the given ConnectParams object. 
            </summary>
            <param name="connectionParams">The params to validate</param>
            <returns>A ConnectionCompleteParams object upon validation error, 
            null upon validation success</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.Connect(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams)">
            <summary>
            Open a connection with the specified ConnectParams
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.GetConnectionCompleteParams(System.String,Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo)">
            <summary>
            Creates a ConnectionCompleteParams as a response to a successful connection. 
            Also sets the DatabaseName and IsAzure properties of ConnectionInfo.
            </summary>
            <returns>A ConnectionCompleteParams in response to the successful connection</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.TryOpenConnection(Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo,Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams)">
            <summary>
            Tries to create and open a connection with the given ConnectParams.
            </summary>
            <returns>null upon success, a ConnectionCompleteParams detailing the error upon failure</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.GetOrOpenConnection(System.String,System.String,System.Boolean)">
            <summary>
            Gets the existing connection with the given URI and connection type string. If none exists, 
            creates a new connection. This cannot be used to create a default connection or to create a 
            connection if a default connection does not exist.
            </summary>
            <param name="ownerUri">URI identifying the resource mapped to this connection</param>
            <param name="connectionType">
            What the purpose for this connection is. A single resource
            such as a SQL file may have multiple connections - one for Intellisense, another for query execution
            </param>
            <param name="alwaysPersistSecurity">
            Workaround for .Net Core clone connection issues: should persist security be used so that
            when SMO clones connections it can do so without breaking on SQL Password connections.
            This should be removed once the core issue is resolved and clone works as expected
            </param>
            <returns>A DB connection for the connection type requested</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.CancelConnect(Microsoft.Kusto.ServiceLayer.Connection.Contracts.CancelConnectParams)">
            <summary>
            Cancel a connection that is in the process of opening.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.Disconnect(Microsoft.Kusto.ServiceLayer.Connection.Contracts.DisconnectParams)">
            <summary>
            Close a connection with the specified connection details.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.CancelConnections(System.String,System.String)">
            <summary>
            Cancel connections associated with the given ownerUri.
            If connectionType is not null, cancel the connection with the given connectionType
            If connectionType is null, cancel all pending connections associated with ownerUri.
            </summary>
            <returns>true if a single pending connection associated with the non-null connectionType was 
            found and cancelled, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.CloseConnections(Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo,System.String)">
            <summary>
            Closes DbConnections associated with the given ConnectionInfo. 
            If connectionType is not null, closes the ReliableDataSourceClient with the type given by connectionType.
            If connectionType is null, closes all DbConnections.
            </summary>
            <returns>true if connections were found and attempted to be closed,
            false if no connections were found</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.ListDatabases(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesParams)">
            <summary>
            List all databases on the server specified
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.RegisterOnConnectionTask(Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.OnConnectionHandler)">
            <summary> 
            Add a new method to be called when the onconnection request is submitted 
            </summary> 
            <param name="activity"></param> 
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.RegisterOnDisconnectTask(Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.OnDisconnectHandler)">
            <summary>
            Add a new method to be called when the ondisconnect request is submitted
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.HandleConnectRequest(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.Boolean})">
            <summary>
            Handle new connection requests
            </summary>
            <param name="connectParams"></param>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.HandleCancelConnectRequest(Microsoft.Kusto.ServiceLayer.Connection.Contracts.CancelConnectParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.Boolean})">
            <summary>
            Handle cancel connect requests
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.HandleDisconnectRequest(Microsoft.Kusto.ServiceLayer.Connection.Contracts.DisconnectParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.Boolean})">
            <summary>
            Handle disconnect requests
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.HandleListDatabasesRequest(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesResponse})">
            <summary>
            Handle requests to list databases on the current server
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.HandleGetConnectionStringRequest(Microsoft.Kusto.ServiceLayer.Connection.Contracts.GetConnectionStringParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.String})">
            <summary>
            Handles a request to get a connection string for the provided connection
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.HandleBuildConnectionInfoRequest(System.String,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails})">
            <summary>
            Handles a request to serialize a connection string
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.HandleChangeDatabaseRequest(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ChangeDatabaseParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.Boolean})">
            <summary>
            Handles a request to change the database for a connection
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.ChangeConnectionDatabaseContext(System.String,System.String,System.Boolean)">
            <summary>
            Change the database context of a connection.
            </summary>
            <param name="ownerUri">URI of the owner of the connection</param>
            <param name="newDatabaseName">Name of the database to change the connection to</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.InvokeOnConnectionActivities(Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo,Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams)">
            <summary>
            Invokes the initial on-connect activities if the provided ConnectParams represents the default
            connection.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.InvokeOnDisconnectionActivities(Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo)">
            <summary>
            Invokes the final on-disconnect activities if the provided DisconnectParams represents the default
            connection or is null - representing that all connections are being disconnected.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.HandleDisconnectTelemetry(Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo)">
            <summary>
            Handles the Telemetry events that occur upon disconnect.
            </summary>
            <param name="info"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.ConnectionType">
            <summary>
            String constants that represent connection types. 
            
            Default: Connection used by the editor. Opened by the editor upon the initial connection. 
            Query: Connection used for executing queries. Opened when the first query is executed.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.BuildConnectionInfoRequest">
            <summary>
            Serialize Connection String request 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.CancelConnectParams">
            <summary>
            Parameters for the Cancel Connect Request.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.CancelConnectParams.OwnerUri">
            <summary>
            A URI identifying the owner of the connection. This will most commonly be a file in the workspace
            or a virtual file representing an object in a database.         
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.CancelConnectParams.Type">
            <summary>
            The type of connection we are trying to cancel
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.CancelConnectRequest">
            <summary>
            Cancel connect request mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ChangeDatabaseParams">
            <summary>
            Parameters for the List Databases Request.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ChangeDatabaseParams.OwnerUri">
            <summary>
            URI of the owner of the connection requesting the list of databases.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ChangeDatabaseParams.NewDatabase">
            <summary>
            The database to change to
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ChangeDatabaseRequest">
            <summary>
            List databases request mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionChangedNotification">
            <summary>
            ConnectionChanged notification mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionChangedParams">
            <summary>
            Parameters for the ConnectionChanged Notification.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionChangedParams.OwnerUri">
            <summary>
            A URI identifying the owner of the connection. This will most commonly be a file in the workspace
            or a virtual file representing an object in a database.         
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionChangedParams.Connection">
            <summary>
            Contains the high-level properties about the connection, for display to the user.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams">
            <summary>
            Parameters to be sent back with a connection complete event
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams.OwnerUri">
            <summary>
            A URI identifying the owner of the connection. This will most commonly be a file in the workspace
            or a virtual file representing an object in a database.         
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams.ConnectionId">
            <summary>
            A GUID representing a unique connection ID
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams.Messages">
            <summary>
            Gets or sets any detailed connection error messages.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams.ErrorMessage">
            <summary>
            Error message returned from the engine for a connection failure reason, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams.ErrorNumber">
            <summary>
            Error number returned from the engine for connection failure reason, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams.ServerInfo">
            <summary>
            Information about the connected server.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams.ConnectionSummary">
            <summary>
            Gets or sets the actual Connection established, including Database Name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteParams.Type">
            <summary>
            The type of connection that this notification is for
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionCompleteNotification">
            <summary>
            ConnectionComplete notification mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails">
            <summary>
            Message format for the initial connection request
            </summary>
            <remarks>
            If this contract is ever changed, be sure to update ConnectionDetailsExtensions methods.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.Password">
            <summary>
            Gets or sets the connection password
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.ServerName">
            <summary>
            Gets or sets the connection server name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.DatabaseName">
            <summary>
            Gets or sets the connection database name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.UserName">
            <summary>
            Gets or sets the connection user name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.AuthenticationType">
            <summary>
            Gets or sets the authentication to use.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.Encrypt">
            <summary>
            Gets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.TrustServerCertificate">
            <summary>
            Gets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.PersistSecurityInfo">
            <summary>
            Gets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectTimeout">
            <summary>
            Gets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryCount">
            <summary>
            The number of reconnections attempted after identifying that there was an idle connection failure.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectRetryInterval">
            <summary>
            Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationName">
            <summary>
            Gets or sets the name of the application associated with the connection string.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.WorkstationId">
            <summary>
            Gets or sets the name of the workstation connecting to SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.ApplicationIntent">
            <summary>
            Declares the application workload type when connecting to a database in an SQL Server Availability Group.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.CurrentLanguage">
            <summary>
            Gets or sets the SQL Server Language record name.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.Pooling">
            <summary>
            Gets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.MaxPoolSize">
            <summary>
            Gets or sets the maximum number of connections allowed in the connection pool for this specific connection string.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.MinPoolSize">
            <summary>
            Gets or sets the minimum number of connections allowed in the connection pool for this specific connection string.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.LoadBalanceTimeout">
            <summary>
            Gets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.Replication">
            <summary>
            Gets or sets a Boolean value that indicates whether replication is supported using the connection.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.AttachDbFilename">
            <summary>
            Gets or sets a string that contains the name of the primary data file. This includes the full path name of an attachable database.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.FailoverPartner">
            <summary>
            Gets or sets the name or address of the partner server to connect to if the primary server is down.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.MultiSubnetFailover">
            <summary>
            If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.MultipleActiveResultSets">
            <summary>
            When true, an application can maintain multiple active result sets (MARS).
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.PacketSize">
            <summary>
            Gets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.Port">
            <summary>
            Gets or sets the port to use for the TCP/IP connection
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.TypeSystemVersion">
            <summary>
            Gets or sets a string value that indicates the type system the application expects.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.ConnectionString">
            <summary>
            Gets or sets a string value to be used as the connection string. If given, all other options will be ignored.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.GroupId">
            <summary>
            Gets or sets the group ID
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails.DatabaseDisplayName">
            <summary>
            Gets or sets the database display name
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions">
            <summary>
            Extension methods for the ConnectionDetails contract class
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetailsExtensions.Clone(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails)">
            <summary>
            Create a copy of a connection details object.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionRequest">
            <summary>
            Connect request mapping entry 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.IConnectionSummary.ServerName">
            <summary>
            Gets or sets the connection server name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.IConnectionSummary.DatabaseName">
            <summary>
            Gets or sets the connection database name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.IConnectionSummary.UserName">
            <summary>
            Gets or sets the connection user name
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionSummary">
            <summary>
            Provides high level information about a connection.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionSummary.ServerName">
            <summary>
            Gets or sets the connection server name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionSummary.DatabaseName">
            <summary>
            Gets or sets the connection database name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionSummary.UserName">
            <summary>
            Gets or sets the connection user name
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionSummaryComparer">
            <summary>
            Treats connections as the same if their server, db and usernames all match
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions">
            <summary>
            Extension methods to ConnectionSummary
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionSummaryExtensions.Clone(Microsoft.Kusto.ServiceLayer.Connection.Contracts.IConnectionSummary)">
            <summary>
            Create a copy of a ConnectionSummary object
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams">
            <summary>
            Parameters for the Connect Request.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams.OwnerUri">
            <summary>
            A URI identifying the owner of the connection. This will most commonly be a file in the workspace
            or a virtual file representing an object in a database.         
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams.Connection">
            <summary>
            Contains the required parameters to initialize a connection to a database.
            A connection will identified by its server name, database name and user name.
            This may be changed in the future to support multiple connections with different 
            connection properties to the same database.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams.Type">
            <summary>
            The type of this connection. By default, this is set to ConnectionType.Default.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams.Purpose">
            <summary>
            The porpose of the connection to keep track of open connections
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParamsExtensions">
            <summary>
            Extension methods to ConnectParams
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParamsExtensions.IsValid(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams,System.String@)">
            <summary>
            Check that the fields in ConnectParams are all valid
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.DisconnectParams">
            <summary>
            Parameters for the Disconnect Request.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.DisconnectParams.OwnerUri">
            <summary>
            A URI identifying the owner of the connection. This will most commonly be a file in the workspace
            or a virtual file representing an object in a database.         
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.DisconnectParams.Type">
            <summary>
            The type of connection we are disconnecting. If null, we will disconnect all connections.
            connections. 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.DisconnectRequest">
            <summary>
            Disconnect request mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.GetConnectionStringParams">
            <summary>
            Parameters for the Get Connection String Request.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.GetConnectionStringParams.OwnerUri">
            <summary>
            URI of the owner of the connection
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.GetConnectionStringParams.IncludePassword">
            <summary>
            Indicates whether the password should be return in the connection string
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.GetConnectionStringRequest">
            <summary>
            Get Connection String request
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.LanguageFlavorChangeParams">
            <summary>
            Parameters for the Language Flavor Change notification.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.LanguageFlavorChangeParams.Uri">
            <summary>
            A URI identifying the affected resource         
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.LanguageFlavorChangeParams.Language">
            <summary>
            The primary language
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.LanguageFlavorChangeParams.Flavor">
            <summary>
            The specific language flavor that is being set
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.LanguageFlavorChangeNotification">
            <summary>
            Defines an event that is sent from the client to notify that
            the client is exiting and the server should as well.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesParams">
            <summary>
            Parameters for the List Databases Request.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesParams.OwnerUri">
            <summary>
            URI of the owner of the connection requesting the list of databases.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesParams.IncludeDetails">
            <summary>
            whether to include the details of the databases. Called by manage dashboard
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesRequest">
            <summary>
            List databases request mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesResponse">
            <summary>
            Message format for the list databases response
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesResponse.DatabaseNames">
            <summary>
            Gets or sets the list of database names.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ListDatabasesResponse.Databases">
            <summary>
            Gets or sets the databases details.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.RequestSecurityTokenParams.Authority">
            <summary>
            Gets or sets the address of the authority to issue token.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.RequestSecurityTokenParams.Provider">
            <summary>
            Gets or sets the provider that indicates the type of linked account to query.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.RequestSecurityTokenParams.Resource">
            <summary>
            Gets or sets the identifier of the target resource that is the recipient of the requested token.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.RequestSecurityTokenResponse.AccountKey">
            <summary>
            Gets or sets the key that uniquely identifies a particular linked account.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.RequestSecurityTokenResponse.Token">
            <summary>
            Gets or sets the access token.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.SecurityTokenRequest">
            <summary>
            SecurityToken Request mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo">
            <summary>
            Contract for information on the connected SQL Server instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.ServerMajorVersion">
            <summary>
            The major version of the SQL Server instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.ServerMinorVersion">
            <summary>
            The minor version of the SQL Server instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.ServerReleaseVersion">
            <summary>
            The build of the SQL Server instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.EngineEditionId">
            <summary>
            The ID of the engine edition of the SQL Server instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.ServerVersion">
            <summary>
            String containing the full server version text.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.ServerLevel">
            <summary>
            String describing the product level of the server.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.ServerEdition">
            <summary>
            The edition of the SQL Server instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.IsCloud">
            <summary>
            Whether the SQL Server instance is running in the cloud (Azure) or not.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.AzureVersion">
            <summary>
            The version of Azure that the SQL Server instance is running on, if applicable.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.OsVersion">
            <summary>
            The Operating System version string of the machine running the SQL Server instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.MachineName">
            <summary>
            The Operating System version string of the machine running the SQL Server instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.Contracts.ServerInfo.Options">
            <summary>
            Server options
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.DataSourceConnectionFactory">
            <summary>
            Factory class to create SqlClientConnections
            The purpose of the factory is to make it easier to mock out the database
            in 'offline' unit test scenarios.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.DataSourceConnectionFactory.CreateDataSourceConnection(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails,System.String)">
            <summary>
            Creates a new SqlConnection object
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.RegisterConnectedQueue(System.String,Microsoft.Kusto.ServiceLayer.LanguageServices.IConnectedBindingQueue)">
            <summary>
            Register a new connection queue if not already registered
            </summary>
            <param name="type"></param>
            <param name="connectedQueue"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.Connect(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectParams)">
            <summary>
            Open a connection with the specified ConnectParams
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.GetOrOpenConnection(System.String,System.String,System.Boolean)">
            <summary>
            Gets the existing connection with the given URI and connection type string. If none exists, 
            creates a new connection. This cannot be used to create a default connection or to create a 
            connection if a default connection does not exist.
            </summary>
            <param name="ownerUri">URI identifying the resource mapped to this connection</param>
            <param name="connectionType">
            What the purpose for this connection is. A single resource
            such as a SQL file may have multiple connections - one for Intellisense, another for query execution
            </param>
            <param name="alwaysPersistSecurity">
            Workaround for .Net Core clone connection issues: should persist security be used so that
            when SMO clones connections it can do so without breaking on SQL Password connections.
            This should be removed once the core issue is resolved and clone works as expected
            </param>
            <returns>A DB connection for the connection type requested</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.CancelConnect(Microsoft.Kusto.ServiceLayer.Connection.Contracts.CancelConnectParams)">
            <summary>
            Cancel a connection that is in the process of opening.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.Disconnect(Microsoft.Kusto.ServiceLayer.Connection.Contracts.DisconnectParams)">
            <summary>
            Close a connection with the specified connection details.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.RegisterOnConnectionTask(Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.OnConnectionHandler)">
            <summary> 
            Add a new method to be called when the onconnection request is submitted 
            </summary> 
            <param name="activity"></param> 
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.RegisterOnDisconnectTask(Microsoft.Kusto.ServiceLayer.Connection.ConnectionService.OnDisconnectHandler)">
            <summary>
            Add a new method to be called when the ondisconnect request is submitted
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.HandleGetConnectionStringRequest(Microsoft.Kusto.ServiceLayer.Connection.Contracts.GetConnectionStringParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.String})">
            <summary>
            Handles a request to get a connection string for the provided connection
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IConnectionService.HandleBuildConnectionInfoRequest(System.String,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails})">
            <summary>
            Handles a request to serialize a connection string
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.IDataSourceConnectionFactory">
            <summary>
            Interface for the SQL Connection factory
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.IDataSourceConnectionFactory.CreateDataSourceConnection(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails,System.String)">
            <summary>
            Create a new SQL Connection object
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.ReliableConnection.RetryCallbackEventArgs">
            <summary>
            Defines a arguments for event handler which will be invoked whenever a retry condition is encountered.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection">
            <summary>
            Provides a reliable way of opening connections to and executing commands
            taking into account potential network unreliability and a requirement for connection retry.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.#ctor(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails,Microsoft.SqlTools.ServiceLayer.Connection.ReliableConnection.RetryPolicy,Microsoft.SqlTools.ServiceLayer.Connection.ReliableConnection.RetryPolicy,Microsoft.Kusto.ServiceLayer.DataSource.IDataSourceFactory,System.String)">
            <summary>
            Initializes a new instance of the ReliableKustoClient class with a given connection string
            and a policy defining whether to retry a request if the connection fails to be opened or a command
            fails to be successfully executed.
            </summary>
            <param name="connectionDetails"></param>
            <param name="connectionRetryPolicy">The retry policy defining whether to retry a request if a connection fails to be established.</param>
            <param name="commandRetryPolicy">The retry policy defining whether to retry a request if a command fails to be executed.</param>
            <param name="dataSourceFactory"></param>
            <param name="ownerUri"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.Dispose">
            <summary>
            Disposes resources.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or
             resetting managed and unmanaged resources.
            </summary>
            <param name="disposing">A flag indicating that managed resources must be released.</param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.ConnectionString">
            <summary>
            Gets or sets the connection string for opening a connection to the SQL Azure database.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.ConnectionRetryPolicy">
            <summary>	
            Gets the policy which decides whether to retry a connection request, based on how many	
            times the request has been made and the reason for the last failure. 	
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.CommandRetryPolicy">
            <summary>	
            Gets the policy which decides whether to retry a command, based on how many	
            times the request has been made and the reason for the last failure. 	
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.ClusterName">
            <summary>	
            Gets the server name from the underlying connection.	
            </summary>	
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.GetUnderlyingConnection">
            <summary>
            If the underlying SqlConnection absolutely has to be accessed, for instance
            to pass to external APIs that require this type of connection, then this
            can be used.  
            </summary>
            <returns><see cref="T:System.Data.SqlClient.SqlConnection"/></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.ChangeDatabase(System.String)">
            <summary>
            Changes the current database for an open Connection object.
            </summary>
            <param name="databaseName">The name of the database to use in place of the current database.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.Open">
            <summary>
            Opens a database connection with the settings specified by the ConnectionString
            property of the provider-specific Connection object.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.OpenAsync(System.Threading.CancellationToken)">
            <summary>
            Opens a database connection with the settings specified by the ConnectionString
            property of the provider-specific Connection object.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.Close">
            <summary>
            Closes the connection to the database.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.ConnectionTimeout">
            <summary>	
            Gets the time to wait while trying to establish a connection before terminating	
            the attempt and generating an error.	
            </summary>	
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection.Database">
            <summary>
            Gets the name of the current database or the database to be used after a
            connection is opened.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase">
            <inheritdoc cref="T:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource"/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.Dispose">
            <summary>
            Disposes resources.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.Dispose(System.Boolean)">
            <summary>
            Disposes resources.
            </summary>
            <param name="disposing">true if disposing; false if finalizing.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.ExecuteQueryAsync(System.String,System.Threading.CancellationToken,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.ExecuteScalarQueryAsync``1(System.String,System.Threading.CancellationToken,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.GetDiagnostics(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.GetChildObjects(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.Refresh(System.Boolean)">
            <param name="includeDatabase"></param>
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.Refresh(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.UpdateDatabase(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.Exists">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.Exists(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.DataSourceType">
            <inheritdoc/>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceBase.ClusterName">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceType">
            <summary>
            Represents the type of a data source.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceType.None">
            <summary>
            Unknown.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceType.Kusto">
            <summary>
            A Kusto cluster.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceType.ApplicationInsights">
            <summary>
            An Application Insights subscription.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.DataSourceType.LogAnalytics">
            <summary>
            An Operations Management Suite (OMS) Log Analytics workspace.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.DiagnosticsInfo.Options">
            <summary>
            Gets or sets the options
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource">
            <summary>
            Represents data source utilities.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.DataSourceType">
            <summary>
            The data source type.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.ClusterName">
            <summary>
            The cluster/server name.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.DatabaseName">
            <summary>
            The current database name, if there is one.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.ExecuteQueryAsync(System.String,System.Threading.CancellationToken,System.String)">
            <summary>
            Executes a query.
            </summary>
            <param name="query">The query.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.ExecuteScalarQueryAsync``1(System.String,System.Threading.CancellationToken,System.String)">
            <summary>
            Executes a Kusto query that returns a scalar value.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="query">The query.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.ExecuteControlCommandAsync``1(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Executes a Kusto query that returns a scalar value.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="query">The query.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.GetDiagnostics(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <summary>
            Get children of the  given parent
            </summary>
            <param name="parentMetadata">Parent object metadata.</param>
            <returns>Metadata for all children.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.GetChildObjects(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata,System.Boolean)">
            <summary>
            Get children of the  given parent
            </summary>
            <param name="parentMetadata">Parent object metadata.</param>
            <param name="includeSizeDetails"></param>
            <returns>Metadata for all children.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.Refresh(System.Boolean)">
            <summary>
            Refresh object list for entire cluster.
            </summary>
            <param name="includeDatabase"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.Refresh(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <summary>
            Refresh object list for given object.
            </summary>
            <param name="objectMetadata">Object metadata.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.UpdateDatabase(System.String)">
            <summary>
            Updates database and affected variables like GlobalState for given object.
            </summary>
            <param name="updateDatabase">Object metadata.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.Exists">
            <summary>
            Tells whether the data source exists.
            </summary>
            <returns>true if it exists; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.Exists(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <summary>
            Tells whether the object exists.
            </summary>
            <returns>true if it exists; false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.GenerateAlterFunctionScript(System.String)">
            <summary>
            Generates an alter script for a function
            </summary>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource.GenerateExecuteFunctionScript(System.String)">
            <summary>
            Generates an execute script for a function
            </summary>
            <param name="functionName"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ScriptParseInfo">
            <summary>
            Data Source specific class for storing cached metadata regarding a parsed KQL file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ScriptParseInfo.BuildingMetadataLock">
            <summary>
            Event which tells if MetadataProvider is built fully or not
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ScriptParseInfo.IsConnected">
            <summary>
            Gets or sets a flag determining is the LanguageService is connected
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ScriptParseInfo.ConnectionKey">
            <summary>
            Gets or sets the binding queue connection context key
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ScriptParseInfo.ParseResult">
            <summary>
            Gets or sets the previous Kusto diagnostics result. TODOKusto: Check exact usage.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ScriptParseInfo.CurrentSuggestions">
            <summary>
            Gets or sets the current autocomplete suggestion list retrieved from the Kusto language library.
            So that other details like documentation can be later retrieved in ResolveCompletionItem.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.KustoQueryUtils.EscapeName(System.String,System.Boolean)">
            <summary>
            Escape table/column/database names for a Kusto query.
            </summary>
            <param name="name">The name to be escaped</param>
            <param name="alwaysEscape">Always escape if this flag is set</param>
            <returns>The escaped string</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Kusto.ServiceLayer.DataSource.KustoQueryUtils.SafeAdd``1(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,``0}},System.String,``0)" -->
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.KustoQueryUtils.AddRange``1(System.Collections.Concurrent.ConcurrentDictionary{System.String,System.Collections.Generic.IEnumerable{``0}},System.String,System.Collections.Generic.List{``0})">
            <summary>
            Add a range to a dictionary of ConcurrentDictionary. Adds range to existing IEnumerable within dictionary
            at the same key.
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="metadatas"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.IKustoClient.ExecuteControlCommandAsync(System.String,System.Boolean,System.Int32)">
            <summary>
            Executes a query or command against a kusto cluster and returns a sequence of result row instances.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.IKustoClient.ExecuteQueryAsync``1(System.String,System.Threading.CancellationToken,System.String)">
            <summary>
            Executes a query.
            </summary>
            <param name="query">The query.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.IKustoClient.ExecuteControlCommand(System.String,System.Int32)">
            <summary>
            Executes a Kusto control command.
            </summary>
            <param name="command">The command.</param>
            <param name="retryCount"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoClient.ExecuteControlCommandAsync(System.String,System.Boolean,System.Int32)">
            <summary>
            Executes a query or command against a kusto cluster and returns a sequence of result row instances.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoClient.ExecuteQueryAsync``1(System.String,System.Threading.CancellationToken,System.String)">
            <summary>
            Executes a query.
            </summary>
            <param name="query">The query.</param>
            <param name="cancellationToken"></param>
            <param name="databaseName"></param>
            <returns>The results.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoClient.ExecuteControlCommand(System.String,System.Int32)">
            <summary>
            Executes a Kusto control command.
            </summary>
            <param name="command">The command.</param>
            <param name="retryCount"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource">
            <summary>
            Represents Kusto utilities.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource._databaseMetadata">
            <summary>
            List of databases.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource._tableMetadata">
            <summary>
            List of tables per database. Key - Parent Folder or Database Urn
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource._columnMetadata">
            <summary>
            List of columns per table. Key - DatabaseName.TableName
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource._folderMetadata">
            <summary>
            List of tables per database. Key - Parent Folder or Database Urn
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource._functionMetadata">
            <summary>
            List of functions per database. Key - Parent Folder or Database Urn
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.ShowDatabaseSchema">
            <summary>
            The database schema query.  Performance: ".show database schema" is more efficient than ".show schema",
            especially for large clusters with many databases or tables.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.DatabaseKeyPrefix">
            <summary>
            The dashboard needs a list of all tables regardless of the folder structure of the table. The
            tables are stored with the key in the following format: OnlyTables.ClusterName.DatabaseName
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.#ctor(Microsoft.Kusto.ServiceLayer.DataSource.Kusto.IKustoClient,Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.IntellisenseClientBase)">
            <summary>
            Prevents a default instance of the <see cref="T:Microsoft.Kusto.ServiceLayer.DataSource.IDataSource"/> class from being created.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.Dispose(System.Boolean)">
            <summary>
            Disposes resources.
            </summary>
            <param name="disposing">True if disposing.  False otherwise.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.ExecuteQueryAsync(System.String,System.Threading.CancellationToken,System.String)">
            <summary>
            Executes a query.
            </summary>
            <param name="query">The query.</param>
            <returns>The results.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.Exists">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.GetDatabaseMetadata(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.Exists(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.ExecuteControlCommandAsync``1(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Executes a query or command against a kusto cluster and returns a sequence of result row instances.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.UpdateDatabase(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.Refresh(System.Boolean)">
            <summary>
            Clears everything
            </summary>
            <param name="includeDatabase"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.Refresh(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.GetChildObjects(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.GetDatabaseSchema(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoDataSource.GetColumnInfos(System.String,System.String)">
            <summary>
            Gets column data which includes tables and table folders.
            </summary>
            <param name="databaseName"></param>
            <param name="tableName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoIntellisenseClient.AddOrUpdateDatabase(System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ShowDatabaseSchemaResult},System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ShowFunctionsResult},Kusto.Language.GlobalState,System.String,System.String)">
            <summary>
            Loads the schema for the specified database and returns a new <see cref="T:Kusto.Language.GlobalState"/> with the database added or updated.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoIntellisenseClient.LoadDatabase(System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ShowDatabaseSchemaResult},System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ShowFunctionsResult},System.String)">
            <summary>
            Loads the schema for the specified database into a <see cref="T:Kusto.Language.Symbols.DatabaseSymbol"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoIntellisenseClient.GetKustoType(System.String)">
            <summary>
            Convert CLR type name into a Kusto scalar type.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoIntellisenseClient.TranslateParameters(System.String)">
            <summary>
            Translate Kusto parameter list declaration into into list of <see cref="T:Kusto.Language.Symbols.Parameter"/> instances.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoIntellisenseHelper">
            <summary>
            Kusto specific class for intellisense helper functions.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoIntellisenseHelper.GetDefaultKeywords(Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Position)">
            <summary>
            Gets default keyword when user if not connected to any Kusto cluster.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoIntellisenseHelper.GetDefaultDiagnostics(Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ScriptParseInfo,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,System.String)">
            <summary>
            Gets default diagnostics when user if not connected to any Kusto cluster.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Kusto.KustoResultsReader.#ctor(System.Data.IDataReader[])">
            <summary>
            Kusto returns atleast 4 results tables - QueryResults(sometimes more than one), QueryProperties, QueryStatus and Query Results Metadata Table. 
            ADS just needs query results. When returning query results we need to trim off the last 3 tables. 
            </summary> 
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Metadata.ColumnMetadata">
            <summary>
            Column metadata information
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DatabaseMetadata">
            <summary>
            Database metadata information
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceMetadataType">
            <summary>
            Metadata type enumeration
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata">
            <summary>
            Object metadata information
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Metadata.FolderMetadata">
            <summary>
            Folder metadata information
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Metadata.MetadataFactory.ConvertToDatabaseInfo(System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata})">
            <summary>
            Converts database details shown on cluster manage dashboard to DatabaseInfo type. Add DataSourceType as param if required to show different properties
            </summary>
            <param name="clusterDbDetails"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Metadata.MetadataFactory.ConvertToObjectMetadata(System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata})">
            <summary>
            Converts tables details shown on database manage dashboard to ObjectMetadata type. Add DataSourceType as param if required to show different properties
            </summary>
            <param name="dbChildDetails"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.DataSource.Metadata.TableMetadata">
            <summary>
            Database metadata information
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Models.ColumnInfo.Table">
            <summary>
            The table name.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Models.ColumnInfo.Name">
            <summary>
            The column name.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Models.ColumnInfo.DataType">
            <summary>
            The data type.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.DataSource.Models.ColumnInfo.Folder">
            <summary>
            The folder name.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Monitor.MonitorExtensions.ToDataReader(Microsoft.Azure.OperationalInsights.Models.QueryResults)">
            <summary>
            Converts QueryResults object into an IDataReader
            </summary>
            <param name="queryResults"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.DataSource.Monitor.MonitorExtensions.MapType(System.String)">
            <summary>
            Map Kusto type to .NET Type equivalent using scalar data types
            </summary>
            <seealso href="https://docs.microsoft.com/en-us/azure/data-explorer/kusto/query/scalar-data-types/">Here</seealso>
            <param name="type">Kusto Type</param>
            <returns>.NET Equivalent Type</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentFormattingRequest">
            <summary>
            A formatting request to process an entire document
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentRangeFormattingRequest">
            <summary>
            A formatting request to process a specific range inside a document
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentOnTypeFormattingRequest">
            <summary>
            A formatting request to handle a user typing, giving a chance to update the text based on this
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentFormattingParams">
            <summary>
            Params for the <see cref="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentFormattingRequest"/>
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentFormattingParams.TextDocument">
            <summary>
            The document to format.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentFormattingParams.Options">
            <summary>
            The formatting options
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentRangeFormattingParams">
            <summary>
            Params for the <see cref="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentRangeFormattingRequest"/>
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentRangeFormattingParams.Range">
            <summary>
            The range to format
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentOnTypeFormattingParams">
            <summary>
            Params for the <see cref="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentOnTypeFormattingRequest"/>
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentOnTypeFormattingParams.Position" -->
        <!-- Badly formed XML comment ignored for member "P:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.DocumentOnTypeFormattingParams.Ch" -->
        <member name="T:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.FormattingOptions">
            <summary>
            Value-object describing what options formatting should use.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.FormattingOptions.TabSize">
            <summary>
            Size of a tab in spaces
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Formatter.Contracts.FormattingOptions.InsertSpaces">
            <summary>
            Prefer spaces over tabs.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Formatter.FormatterService.#ctor">
            <summary>
            The default constructor is required for MEF-based composable services
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Formatter.FormatterService.WorkspaceService">
            <summary>
            Gets the workspace service. Note: should handle case where this is null in cases where unit tests do not set this up
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Formatter.FormatterService.LanguageService">
            <summary>
            Gets the language service. Note: should handle case where this is null in cases where unit tests do not set this up
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Formatter.FormatterService.HandleDidChangeConfigurationNotification(Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings,Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Ensure formatter settings are always up to date
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Formatter.FormatOptions">
            <summary>
            The supported options to use when formatting text
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.HostLoader">
            <summary>
            Provides support for starting up a service host. This is a common responsibility
            for both the main service program and test driver that interacts with it
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.HostLoader.InitializeHostedServices(Microsoft.SqlTools.Extensibility.RegisteredServiceProvider,Microsoft.SqlTools.Hosting.Protocol.IProtocolEndpoint)">
            <summary>
            Internal to support testing. Initializes <see cref="T:Microsoft.SqlTools.Hosting.IHostedService"/> instances in the service,
            and registers them for their preferred service type
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.AutoCompleteHelper">
            <summary>
            All the conversion of intellisense info to vscode format is done in this class.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.AutoCompleteHelper.CreateCompletionItem(System.String,System.String,System.String,Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItemKind,System.Int32,System.Int32,System.Int32)">
            <summary>
            Create a completion item from the default item text since VS Code expects CompletionItems
            </summary>
            <param name="label"></param>
            <param name="detail"></param>
            <param name="insertText"></param>
            <param name="kind"></param>
            <param name="row"></param>
            <param name="startColumn"></param>
            <param name="endColumn"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.AutoCompleteHelper.ConvertQuickInfoToHover(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts QuickInfo object into a VS Code Hover object
            </summary>
            <param name="quickInfo"></param>
            <param name="language"></param>
            <param name="row"></param>
            <param name="startColumn"></param>
            <param name="endColumn"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1">
            <summary>
            Main class for the Binding Queue
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.BindingContextMap">
            <summary>
            Map from context keys to binding context instances
            Internal for testing purposes only
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.#ctor">
            <summary>
            Constructor for a binding queue instance
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.StopQueueProcessor(System.Int32)">
            <summary>
            Stops the binding queue by sending cancellation request
            </summary>
            <param name="timeout"></param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.IsCancelRequested">
            <summary>
            Returns true if cancellation is requested
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.QueueBindingOperation(System.String,System.Func{Microsoft.Kusto.ServiceLayer.LanguageServices.IBindingContext,System.Threading.CancellationToken,System.Object},System.Func{Microsoft.Kusto.ServiceLayer.LanguageServices.IBindingContext,System.Object},System.Func{System.Exception,System.Object},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Queue a binding request item
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.IsBindingContextConnected(System.String)">
            <summary>
            Checks if a particular binding context is connected or not
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.GetOrCreateBindingContext(System.String)">
            <summary>
            Gets or creates a binding context for the provided context key
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.BindingContextExists(System.String)">
            <summary>
            Checks if a binding context already exists for the provided context key
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.RemoveBindingContext(System.String)">
            <summary>
            Remove the binding queue entry
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.GetNextQueueItem">
            <summary>
            Gets the next pending queue item
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.StartQueueProcessorAsync">
            <summary>
            Starts the queue processing thread
            </summary>        
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.ProcessQueue">
            <summary>
            The core queue processing method
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.BindingQueue`1.ClearQueuedItems">
            <summary>
            Clear queued items
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingContext">
            <summary>
            Class for the binding context for connected sessions
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingContext.DataSource">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingContext.#ctor">
            <summary>
            Connected binding context constructor
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingContext.IsConnected">
            <summary>
            Gets or sets a flag indicating if the binder is connected
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingContext.BindingLock">
            <summary>
            Gets the binding lock object
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingContext.BindingTimeout">
            <summary>
            Gets or sets the binding operation timeout in milliseconds
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingQueue">
            <summary>
            ConnectedBindingQueue class for processing online binding requests
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingQueue.GetConnectionContextKey(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails)">
            <summary>
            Generate a unique key based on the ConnectionInfo object
            </summary>
            <param name="details"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.ConnectedBindingQueue.AddConnectionContext(Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo,System.Boolean,System.String,System.Boolean)">
            <summary>
            Use a ConnectionInfo item to create a connected binding context
            </summary>
            <param name="connInfo">Connection info used to create binding context</param>
            <param name="needMetadata"></param>
            <param name="featureName"></param>
            <param name="overwrite">Overwrite existing context</param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.Command.Title">
            <summary>
            Title of the command.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.Command.command">
            <summary>
            The identifier of the actual command handler, like `vsintellicode.completionItemSelected`.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.Command.Tooltip">
            <summary>
            A tooltip for the command, when represented in the UI.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.Command.Arguments">
            <summary>
            Arguments that the command handler should be invoked with.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItem.Documentation">
            <summary>
            Gets or sets the documentation string for the completion item.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItem.Data">
            <summary>
            Gets or sets a custom data field that allows the server to mark
            each completion item with an identifier that will help correlate
            the item to the previous completion request during a completion
            resolve request.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItem.Command">
            <summary>
            Exposing a command field for a completion item for passing telemetry
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItem.Preselect">
            <summary>
            Whether this completion item is preselected or not
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.PublishDiagnosticsNotification.Uri">
            <summary>
            Gets or sets the URI for which diagnostic information is reported.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.PublishDiagnosticsNotification.Diagnostics">
            <summary>
            Gets or sets the array of diagnostic information items.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity.Error">
            <summary>
            Indicates that the diagnostic represents an error.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity.Warning">
            <summary>
            Indicates that the diagnostic represents a warning.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity.Information">
            <summary>
            Indicates that the diagnostic represents an informational message.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.DiagnosticSeverity.Hint">
            <summary>
            Indicates that the diagnostic represents a hint.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.Diagnostic.Severity">
            <summary>
            Gets or sets the severity of the diagnostic.  If omitted, the
            client should interpret the severity.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.Diagnostic.Code">
            <summary>
            Gets or sets the diagnostic's code (optional).
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.Diagnostic.Message">
            <summary>
            Gets or sets the diagnostic message.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.IntelliSenseReadyParams">
            <summary>
            Parameters sent back with an IntelliSense ready event
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.IntelliSenseReadyParams.OwnerUri">
            <summary>
            URI identifying the text document
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.IntelliSenseReadyNotification">
            <summary>
            Event sent when the language service is finished updating after a connection
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.RebuildIntelliSenseParams">
            <summary>
            Parameters to be sent back with a rebuild IntelliSense event
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.RebuildIntelliSenseParams.OwnerUri">
            <summary>
            URI identifying the file that should have its IntelliSense cache rebuilt    
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.RebuildIntelliSenseNotification">
            <summary>
            RebuildIntelliSenseNotification notification mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.StatusChangeParams">
            <summary>
            Parameters sent back with an status change event
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.StatusChangeParams.OwnerUri">
            <summary>
            URI identifying the text document
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.StatusChangeParams.Status">
            <summary>
            The new status for the document
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.StatusChangedNotification">
            <summary>
            Event sent for language service status change notification
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryProperties.Properties">
            <summary>
            Telemetry properties
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryProperties.Measures">
            <summary>
            Telemetry measures
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryParams">
            <summary>
            Parameters sent back with an IntelliSense ready event
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryNotification">
            <summary>
            Event sent when the language service needs to add a telemetry event
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryEventNames">
            <summary>
            List of telemetry events
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryEventNames.IntellisenseQuantile">
            <summary>
            telemetry event name for auto complete response time
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryEventNames.PeekDefinitionRequested">
            <summary>
            telemetry event name for when definition is requested
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryEventNames.FormatCode">
            <summary>
            telemetry event name for when definition is requested
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames">
            <summary>
             List of properties used in telemetry events
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames.IsAzure">
            <summary>
            Is a connection to an Azure database or not
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames.Succeeded">
            <summary>
            Did an event succeed or not
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames.Connected">
            <summary>
            Was the action against a connected file or similar resource, or not
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames.FormatType">
            <summary>
            Format type property - should be one of <see cref="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames.DocumentFormatType"/> or <see cref="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames.RangeFormatType"/>
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames.DocumentFormatType">
            <summary>
            A full document format
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryPropertyNames.RangeFormatType">
            <summary>
            A document range format
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.DiagnosticsHelper">
            <summary>
            Main class for Language Service functionality including anything that reqires knowledge of
            the language to perfom, such as definitions, intellisense, etc.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.DiagnosticsHelper.PublishScriptDiagnostics(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarker[],Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Send the diagnostic results back to the host application
            </summary>
            <param name="scriptFile"></param>
            <param name="semanticMarkers"></param>
            <param name="eventContext"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.DiagnosticsHelper.ClearScriptDiagnostics(System.String,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Send the diagnostic results back to the host application
            </summary>
            <param name="scriptFile"></param>
            <param name="semanticMarkers"></param>
            <param name="eventContext"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.DiagnosticsHelper.GetDiagnosticFromMarker(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarker)">
            <summary>
            Convert a ScriptFileMarker to a Diagnostic that is Language Service compatible
            </summary>
            <param name="scriptFileMarker"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.DiagnosticsHelper.MapDiagnosticSeverity(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarkerLevel)">
            <summary>
            Map ScriptFileMarker severity to Diagnostic severity
            </summary>
            <param name="markerLevel"></param>        
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.DocumentStatusHelper">
            <summary>
            Helper class to send events to the client
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.DocumentStatusHelper.SendStatusChange``1(Microsoft.SqlTools.Hosting.Protocol.RequestContext{``0},Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition,System.String)">
            <summary>
            Sends an event for specific document using the existing request context
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.DocumentStatusHelper.SendTelemetryEvent``1(Microsoft.SqlTools.Hosting.Protocol.RequestContext{``0},System.String)">
            <summary>
            Sends a telemetry event for specific document using the existing request context
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.DocumentStatusHelper.SendTelemetryEvent``1(Microsoft.SqlTools.Hosting.Protocol.RequestContext{``0},Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.TelemetryProperties)">
            <summary>
            Sends a telemetry event for specific document using the existing request context
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.IBindingContext">
            <summary>
            The context used for binding requests
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.IBindingContext.IsConnected">
            <summary>
            Gets or sets a flag indicating if the context is connected
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.IBindingContext.DataSource">
            <summary>
            Gets or sets data source interface
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.IBindingContext.BindingLock">
            <summary>
            Gets the binding lock object
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.IBindingContext.BindingTimeout">
            <summary>
            Gets or sets the binding operation timeout in milliseconds
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService">
            <summary>
            Main class for Language Service functionality including anything that requires knowledge of
            the language to perform, such as definitions, intellisense, etc.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.Instance">
            <summary>
            Gets the singleton instance object
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.ScriptParseInfoMap">
            <summary>
            Gets a mapping dictionary for SQL file URIs to ScriptParseInfo objects
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.#ctor">
            <summary>
            Default, parameterless constructor.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.ConnectionServiceInstance">
            <summary>
            Internal for testing purposes only
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.WorkspaceServiceInstance">
            <summary>
            Gets or sets the current workspace service instance
            Setter for internal testing purposes only
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.CurrentWorkspaceSettings">
            <summary>
            Gets the current settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.CurrentWorkspace">
            <summary>
            Gets the current workspace instance
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.InitializeService(Microsoft.Kusto.ServiceLayer.ServiceHost,Microsoft.Kusto.ServiceLayer.LanguageServices.IConnectedBindingQueue,Microsoft.Kusto.ServiceLayer.Connection.IConnectionManager)">
            <summary>
            Initializes the Language Service instance
            </summary>
            <param name="serviceHost"></param>
            <param name="context"></param>
            <param name="dataSourceFactory"></param>
            <param name="connectedBindingQueue"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.HandleSyntaxParseRequest(Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.SyntaxParseParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.SyntaxParseResult})">
            <summary>
            T-SQL syntax parse request callback
            </summary>
            <param name="param"></param>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.HandleCompletionRequest(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItem[]})">
            <summary>
            Auto-complete completion provider request callback
            </summary>
            <param name="textDocumentPosition"></param>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.HandleCompletionResolveRequest(Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItem,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItem})">
            <summary>
            Handle the resolve completion request event to provide additional
            autocomplete metadata to the currently select completion item
            </summary>
            <param name="completionItem"></param>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.HandleDidOpenTextDocumentNotification(System.String,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Handle the file open notification
            </summary>
            <param name="uri"></param>
            <param name="scriptFile"></param>
            <param name="eventContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.HandleDidChangeTextDocumentNotification(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile[],Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Handles text document change events
            </summary>
            <param name="textChangeParams"></param>
            <param name="eventContext"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.HandleRebuildIntelliSenseNotification(Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.RebuildIntelliSenseParams,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Handle the rebuild IntelliSense cache notification
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.HandleDidChangeConfigurationNotification(Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings,Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Handle the file configuration change notification
            </summary>
            <param name="newSettings"></param>
            <param name="oldSettings"></param>
            <param name="eventContext"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.RemoveAutoCompleteCacheUriReference(Microsoft.Kusto.ServiceLayer.Connection.Contracts.IConnectionSummary,System.String)">
            <summary>
            Remove a reference to an autocomplete cache from a URI. If
            it is the last URI connected to a particular connection,
            then remove the cache.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.UpdateLanguageServiceOnConnection(Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo)">
            <summary>
            Update the autocomplete metadata provider when the user connects to a database
            </summary>
            <param name="info"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.ShouldSkipNonMssqlFile(System.String)">
            <summary>
            Checks if a given URI is not an MSSQL file. Only files explicitly excluded by a language flavor change
            notification will be treated as skippable
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.ShouldSkipIntellisense(System.String)">
            <summary>
            Determines whether intellisense should be skipped for a document.
            If IntelliSense is disabled or it's a non-MSSQL doc this will be skipped
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.ResolveCompletionItem(Microsoft.Kusto.ServiceLayer.LanguageServices.Contracts.CompletionItem)">
            <summary>
            Resolves the details and documentation for a completion item. Move functionality to data source specific file when Language API supports description/details info.
            TODOKusto:Currently Kusto doesnt support getting the description details
            </summary>
            <param name="completionItem"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.GetDefinition(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo)">
            <summary>
            Get definition for a selected text from DataSource.
            </summary>
            <param name="textDocumentPosition"></param>
            <param name="scriptFile"></param>
            <param name="connInfo"></param>
            <returns> Location with the URI of the script file</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.GetHoverItem(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile)">
            <summary>
            Get quick info hover tooltips for the current position
            </summary>
            <param name="textDocumentPosition"></param>
            <param name="scriptFile"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.GetCompletionItems(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo)">
            <summary>
            Return the completion item list for the current text position.
            This method does not await cache builds since it expects to return quickly
            </summary>
            <param name="textDocumentPosition"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.RunScriptDiagnostics(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile[],Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Runs script diagnostics on changed files
            </summary>
            <param name="filesToAnalyze"></param>
            <param name="eventContext"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.DelayThenInvokeDiagnostics(System.Int32,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile[],Microsoft.SqlTools.Hosting.Protocol.EventContext,System.Threading.CancellationToken)">
            <summary>
            Actually run the script diagnostics after waiting for some small delay
            </summary>
            <param name="delayMilliseconds"></param>
            <param name="filesToAnalyze"></param>
            <param name="eventContext"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.GetScriptParseInfo(System.String,System.Boolean)">
            <summary>
            Gets a script parse info object for a file from the local cache
            Internal for testing purposes only
            </summary>
            <param name="uri"></param>
            <param name="createIfNotExists">Creates a new instance if one doesn't exist</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.LanguageService.IsPreviewWindow(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile)">
            <summary>
            Returns a flag indicating if the ScriptFile refers to the output window.
            </summary>
            <param name="scriptFile"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.DefinitionResult">
            <summary>
            /// Result object for PeekDefinition
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.DefinitionResult.IsErrorResult">
            <summary>
            True, if definition error occured
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.DefinitionResult.Message">
            <summary>
            Error message, if any
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.LanguageServices.DefinitionResult.Locations">
            <summary>
            Location object representing the definition script file
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem">
            <summary>
            Class that stores the state of a binding queue request item
            </summary>    
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.#ctor">
            <summary>
            QueueItem constructor
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.Key">
            <summary>
            Gets or sets the queue item key
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.BindOperation">
            <summary>
            Gets or sets the bind operation callback method
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.TimeoutOperation">
            <summary>
            Gets or sets the timeout operation to call if the bind operation doesn't finish within timeout period
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.ErrorHandler">
            <summary>
            Gets or sets the operation to call if the bind operation encounters an unexpected exception.
            Supports returning an object in case of the exception occurring since in some cases we need to be
            tolerant of error cases and still return some value
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.ItemProcessed">
            <summary>
            Gets or sets an event to signal when this queue item has been processed
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.Result">
            <summary>
            Gets or sets the result of the queued task
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.BindingTimeout">
            <summary>
            Gets or sets the binding operation timeout in milliseconds
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.WaitForLockTimeout">
            <summary>
            Gets or sets the timeout for how long to wait for the binding lock
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.QueueItem.GetResultAsT``1">
            <summary>
            Converts the result of the execution to type T
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo">
            <summary>
            A class to calculate the numbers used by SQL parser using the text positions and content
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.#ctor(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,Microsoft.Kusto.ServiceLayer.DataSource.Intellisense.ScriptParseInfo)">
            <summary>
            Create new instance
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.CreateDefaultDocumentInfo(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile)">
            <summary>
            Creates a new <see cref="T:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo"/> with no backing <see cref="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.ScriptParseInfo"/> defined
            </summary>
            <param name="textDocumentPosition">A <see cref="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition"/></param>
            <param name="scriptFile">A <see cref="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile"/> to process</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.Contents">
            <summary>
            Gets a string containing the full contents of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.ScriptParseInfo">
            <summary>
            Script Parse Info Instance
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.StartLine">
            <summary>
            Start Line
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.ParserLine">
            <summary>
            Parser Line
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.StartColumn">
            <summary>
            Start Column
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.EndColumn">
            <summary>
            end Column
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.ParserColumn">
            <summary>
            Parser Column
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.TokenText">
            <summary>
            The token text in the file content used for completion list
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.LanguageServices.ScriptDocumentInfo.Token">
            <summary>
            The token in the file content used for completion list
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.InteractionMetrics`1">
            <summary>
            A class to calculate the value for the metrics using the given bucket
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.InteractionMetrics`1.#ctor(System.Int32[])">
            <summary>
            Creates new instance given a bucket of metrics
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.InteractionMetrics`1.Metrics">
            <summary>
            The metrics bucket
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.InteractionMetrics`1.IsSorted(System.Int32[])">
            <summary>
            Returns true if the given list is sorted
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.InteractionMetrics`1.UpdateMetrics(System.Double,`0,System.Func{System.String,`0,`0})">
            <summary>
            Update metric value given new number
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.InteractionMetrics`1.Quantile">
            <summary>
            Returns the quantile
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Metadata.Contracts.ObjectMetadata">
            <summary>
            Object metadata information
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Metadata.MetadataService">
            <summary>
            Main class for Metadata Service functionality
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Metadata.MetadataService.InitializeService(Microsoft.SqlTools.Hosting.Protocol.IProtocolEndpoint,Microsoft.Kusto.ServiceLayer.Connection.IConnectionManager)">
            <summary>
            Initializes the Metadata Service instance
            </summary>
            <param name="serviceHost"></param>
            <param name="connectionService"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Metadata.MetadataService.HandleMetadataListRequest(Microsoft.Kusto.ServiceLayer.Metadata.Contracts.MetadataQueryParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.Metadata.Contracts.MetadataQueryResult})">
            <summary>
            Handle a metadata query request
            </summary>        
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionResponse">
            <summary>
            Information returned from a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionRequest"/>.
            Contains success information, a <see cref="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionResponse.SessionId"/> to be used when
            requesting closing an existing session.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionResponse.Success">
            <summary>
            Boolean indicating if the session was closed successfully 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionResponse.SessionId">
            <summary>
            Unique ID to use when sending any requests for objects in the
            tree under the node
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionParams">
            <summary>
            Parameters to the <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionParams.SessionId">
            <summary>
            The Id returned from a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionRequest"/>. This
            is used to disambiguate between different trees. 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionDisconnectedParameters">
            <summary>
            Information returned when a session is disconnected.
            Contains success information and a <see cref="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionDisconnectedParameters.SessionId"/>
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionDisconnectedParameters.Success">
            <summary>
            Boolean indicating if the connection was successful
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionDisconnectedParameters.SessionId">
            <summary>
            Unique ID to use when sending any requests for objects in the
            tree under the node
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionDisconnectedParameters.ErrorMessage">
            <summary>
            Error message returned from the engine for a object explorer session failure reason, if any.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CloseSessionRequest">
            <summary>
            Establishes an Object Explorer tree session for a specific connection.
            This will create a connection to a specific server or database, register
            it for use in the 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionDisconnectedNotification">
            <summary>
            Session disconnected notification
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionResponse">
            <summary>
            Information returned from a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionRequest"/>.
            Contains success information, a <see cref="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionResponse.SessionId"/> to be used when
            requesting expansion of nodes, and a root node to display for this area.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionResponse.SessionId">
            <summary>
            Unique ID to use when sending any requests for objects in the
            tree under the node
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionCreatedParameters">
            <summary>
            Information returned from a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionRequest"/>.
            Contains success information, a <see cref="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionCreatedParameters.SessionId"/> to be used when
            requesting expansion of nodes, and a root node to display for this area.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionCreatedParameters.Success">
            <summary>
            Boolean indicating if the connection was successful
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionCreatedParameters.SessionId">
            <summary>
            Unique ID to use when sending any requests for objects in the
            tree under the node
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionCreatedParameters.RootNode">
            <summary>
            Information describing the base node in the tree
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.SessionCreatedParameters.ErrorMessage">
            <summary>
            Error message returned from the engine for a object explorer session failure reason, if any.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionRequest">
            <summary>
            Establishes an Object Explorer tree session for a specific connection.
            This will create a connection to a specific server or database, register
            it for use in the 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionCompleteNotification">
            <summary>
            Session notification mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandResponse">
            <summary>
            Information returned from a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandResponse.SessionId">
            <summary>
            Unique ID to use when sending any requests for objects in the
            tree under the node
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandResponse.Nodes">
            <summary>
            Information describing the expanded nodes in the tree
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandResponse.NodePath">
            <summary>
            Path identifying the node to expand. See <see cref="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.NodePath"/> for details
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandResponse.ErrorMessage">
            <summary>
            Error message returned from the engine for a object explorer expand failure reason, if any.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandParams">
            <summary>
            Parameters to the <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandParams.SessionId">
            <summary>
            The Id returned from a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionRequest"/>. This
            is used to disambiguate between different trees. 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandParams.NodePath">
            <summary>
            Path identifying the node to expand. See <see cref="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.NodePath"/> for details
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandRequest">
            <summary>
            A request to expand a 
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandRequest.Type">
            <summary>
            Returns children of a given node as a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo"/> array.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandCompleteNotification">
            <summary>
            Expand notification mapping entry 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.FindNodesResponse">
            <summary>
            Information returned from a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.FindNodesRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.FindNodesResponse.Nodes">
            <summary>
            Information describing the matching nodes in the tree
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.FindNodesParams">
            <summary>
            Parameters to the <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.FindNodesRequest"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.FindNodesParams.SessionId">
            <summary>
            The Id returned from a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.CreateSessionRequest"/>. This
            is used to disambiguate between different trees. 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.FindNodesRequest">
            <summary>
            TODO
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo">
            <summary>
            Information describing a Node in the Object Explorer tree. 
            Contains information required to display the Node to the user and
            to know whether actions such as expanding children is possible
            the node 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.NodePath">
            <summary>
            Path identifying this node: for example a table will be at ["server", "database", "tables", "tableName"].
            This enables rapid navigation of the tree without the need for a global registry of elements.
            The path functions as a unique ID and is used to disambiguate the node when sending requests for expansion.
            A common ID is needed since processes do not share address space and need a unique identifier
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.NodeType">
            <summary>
            The type of the node - for example Server, Database, Folder, Table
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.Label">
            <summary>
            Label to display to the user, describing this node.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.NodeSubType">
            <summary>
            Node Sub type - for example a key can have type as "Key" and sub type as "PrimaryKey"
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.NodeStatus">
            <summary>
            Node status - for example login can be disabled/enabled
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.IsLeaf">
            <summary>
            Is this a leaf node (in which case no children can be generated) or
            is it expandable?
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.Metadata">
            <summary>
            Object Metadata for smo objects to be used for scripting
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo.ErrorMessage">
            <summary>
            Error message returned from the engine for a object explorer node failure reason, if any.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.RefreshParams">
            <summary>
            Parameters to the <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.ExpandRequest"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.RefreshRequest">
            <summary>
            A request to expand a 
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.RefreshRequest.Type">
            <summary>
            Returns children of a given node as a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo"/> array.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.ServerNode">
            <summary>
            Server node implementation 
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.ServerNode.GetConnectionLabel">
            <summary>
            Returns the label to display to the user.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.QueryContext">
            <summary>
            Context object containing key properties needed to query for SMO objects
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.QueryContext.#ctor(Microsoft.Kusto.ServiceLayer.DataSource.IDataSource,Microsoft.SqlTools.Extensibility.IMultiServiceProvider)">
            <summary>
            Creates a context object with a server to use as the basis for any queries
            </summary>
            <param name="server"></param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.QueryContext.ParentObjectMetadata">
            <summary>
            Parent of a give node to use for queries
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.QueryContext.ServiceProvider">
            <summary>
            A query loader that can be used to find <see cref="!:DataSourceQuerier"/> objects
            for specific SMO types
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.QueryContext.ParentAs``1">
            <summary>
            Helper method to cast a parent to a specific type
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.QueryContext.CopyWithParent(Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <summary>
            Copies the context for use by another node
            </summary>
            <param name="parent">New Parent to set</param>
            <returns>new <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.QueryContext"/> with all fields except <see cref="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.QueryContext.ParentObjectMetadata"/> the same</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.DataSourceTreeNode">
            <summary>
            A Node in the tree representing a SMO-based object
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.DataSourceModel.DataSourceTreeNode.NextSortPriority">
            <summary>
            Gets an incrementing sort priority value to assist in automatically sorting
            elements in a tree
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeFilter">
            <summary>
            Has information for filtering a SMO object by properties 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeFilter.Property">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeFilter.Values">
            <summary>
            Filter values
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeFilter.Type">
            <summary>
            Type of the filter values
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeFilter.ValidFor">
            <summary>
            Indicates which platforms a filter is valid for
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeFilter.TypeToReverse">
            <summary>
            The type of the Querier the filter can be applied to
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeFilter.CanApplyFilter(System.Type,Microsoft.Kusto.ServiceLayer.ObjectExplorer.ValidForFlag)">
            <summary>
            Returns true if the filter can be apply to the given type and Server type
            </summary>
            <param name="type">Type of the querier</param>
            <param name="validForFlag">Server Type</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeFilter.ToPropertyFilterString">
            <summary>
            Creates a string from the filter property and values to be used in the Urn to query the SQL objects
            Example of the output:[@ IsSystemObject = 0]
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeObservableCollection">
            <summary>
            A collection class for <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode"/>
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeObservableCollection.ReSortChild(Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode)">
            <summary>
            Repositions this child in the list
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.NodeTypes">
            <summary>
            Enum listing possible node types in the object explorer tree
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode">
            <summary>
            Base class for elements in the object explorer tree. Provides common methods for tree navigation
            and other core functionality
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.ObjectMetadata">
            <summary>
            Object metadata
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.DataSource">
            <summary>
            The DataSource this tree node is representing
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.#ctor(Microsoft.Kusto.ServiceLayer.DataSource.IDataSource,Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <summary>
            Constructor with DataSource and DataSourceObjectMetadata 
            </summary>
            <param name="dataSource"></param>
            <param name="objectMetadata"></param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.BuildingMetadataLock">
            <summary>
            Event which tells if MetadataProvider is built fully or not
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.NodeValue">
            <summary>
            Value describing this node
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.NodePathName">
            <summary>
            The name of this object as included in its node path
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.NodeType">
            <summary>
            The type of the node - for example Server, Database, Folder, Table
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.IsSystemObject" -->
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.NodeTypeId">
            <summary>
            Enum defining the type of the node - for example Server, Database, Folder, Table
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.NodeSubType">
            <summary>
            Node Sub type - for example a key can have type as "Key" and sub type as "PrimaryKey"
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.ErrorMessage">
            <summary>
            Error message returned from the engine for a object explorer node failure reason, if any.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.NodeStatus">
            <summary>
            Node status - for example login can be disabled/enabled
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.Label">
            <summary>
            Label to display to the user, describing this node.
            If not explicitly set this will fall back to the <see cref="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.NodeValue"/> but
            for many nodes such as the server, the display label will be different
            to the value.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.IsAlwaysLeaf">
            <summary>
            Is this a leaf node (in which case no children can be generated) or
            is it expandable?
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.ErrorStateMessage">
            <summary>
            Message to show if this Node is in an error state. This indicates
            that children could be retrieved
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.Parent">
            <summary>
            Parent of this node
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.GetNodePath">
            <summary>
            Path identifying this node: for example a table will be at ["server", "database", "tables", "tableName"].
            This enables rapid navigation of the tree without the need for a global registry of elements.
            The path functions as a unique ID and is used to disambiguate the node when sending requests for expansion.
            A common ID is needed since processes do not share address space and need a unique identifier
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.ToNodeInfo">
            <summary>
            Converts to a <see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Contracts.NodeInfo"/> object for serialization with just the relevant properties 
            needed to identify the node
            </summary>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.Expand(System.String,System.Threading.CancellationToken)">
            <summary>
            Expands this node and returns its children
            </summary>
            <returns>Children as an IList. This is the raw children collection, not a copy</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.Expand(System.Threading.CancellationToken)">
            <summary>
            Expands this node and returns its children
            </summary>
            <returns>Children as an IList. This is the raw children collection, not a copy</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.Refresh(System.Threading.CancellationToken)">
            <summary>
            Refresh this node and returns its children
            </summary>
            <returns>Children as an IList. This is the raw children collection, not a copy</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.GetChildren">
            <summary>
            Gets a readonly view of the currently defined children for this node. 
            This does not expand the node at all
            Since the tree needs to keep track of parent relationships, directly 
            adding to the list is not supported. 
            </summary>
            <returns><see cref="T:System.Collections.Generic.IList`1"/> containing all children for this node</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.GetContext">
            <summary>
            Optional context to help with lookup of children
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.GetContextAs``1">
            <summary>
            Helper method to convert context to expected format
            </summary>
            <typeparam name="T">Type to convert to</typeparam>
            <returns>context as expected type of null if it doesn't match</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.OnExpandPopulateNonFolders(Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Populates any non-folder nodes such as specific items in the tree.
            </summary>
            <param name="allChildren">List to which nodes should be added</param>
            <param name="parent">Parent the nodes are being added to</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.CreateChild(Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode,Microsoft.Kusto.ServiceLayer.DataSource.Metadata.DataSourceObjectMetadata)">
            <summary>
            The glue between the DataSource and the Object Explorer models. Creates the right tree node for each data source type
            </summary>
            <param name="parent"></param>
            <param name="childMetadata"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode.SortPriority">
            <summary>
            Sort Priority to help when ordering elements in the tree
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService">
            <summary>
            A Service to support querying server and database information as an Object Explorer tree.
            The APIs used for this are modeled closely on the VSCode TreeExplorerNodeProvider API.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService._settings">
            <summary>
            This timeout limits the amount of time that object explorer tasks can take to complete
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService.#ctor(Microsoft.Kusto.ServiceLayer.LanguageServices.IConnectedBindingQueue)">
            <summary>
            Singleton constructor
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService.SessionIds">
            <summary>
            Returns the session ids
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService.SetServiceProvider(Microsoft.SqlTools.Extensibility.IMultiServiceProvider)">
            <summary>
            As an <see cref="T:Microsoft.SqlTools.Extensibility.IComposableService"/>, this will be set whenever the service is initialized
            via an <see cref="T:Microsoft.SqlTools.Extensibility.IMultiServiceProvider"/>
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService.InitializeService(Microsoft.SqlTools.Hosting.Protocol.IProtocolEndpoint)">
            <summary>
            Initializes the service with the service host and registers request handlers.
            </summary>
            <param name="serviceHost">The service host instance to register with</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService.HandleDidChangeConfigurationNotification(Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings,Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Ensure formatter settings are always up to date
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService.DoCreateSession(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails,System.String)">
            <summary>
            Establishes a new session and stores its information
            </summary>
            <returns><see cref="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerSession"/> object if successful, null if unsuccessful</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService.GenerateUri(Microsoft.Kusto.ServiceLayer.Connection.Contracts.ConnectionDetails)">
            <summary>
            Generates a URI for object explorer using a similar pattern to Mongo DB (which has URI-based database definition)
            as this should ensure uniqueness
            </summary>
            <param name="details"></param>
            <returns>string representing a URI</returns>
            <remarks>Internal for testing purposes only</remarks>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerService.FindNodes(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Find all tree nodes matching the given node information
            </summary>
            <param name="sessionId">The ID of the object explorer session to find nodes for</param>
            <param name="typeName">The requested node type</param>
            <param name="schema">The schema for the requested object, or null if not applicable</param>
            <param name="name">The name of the requested object</param>
            <param name="databaseName">The name of the database containing the requested object, or null if not applicable</param>
            <param name="parentNames">The name of any other parent objects in the object explorer tree, from highest in the tree to lowest</param>
            <returns>A list of nodes matching the given information, or an empty list if no nodes match</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerUtils">
            <summary>
            Utility class for Object Explorer related operations
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerUtils.VisitChildAndParents(Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode,System.Predicate{Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode})">
            <summary>
            Visitor that walks all nodes from the child to the root node, unless the 
            <paramref name="visitor"/> function indicates that this should stop traversing
            </summary>
            <param name="child">node to start traversing at</param>
            <param name="visitor">Predicate function that accesses the tree and
            determines whether to stop going further up the tree</param>
            <returns>
            boolean - true to continue navigating up the tree, false to end the loop
            and return early
            </returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ObjectExplorerUtils.FindNode(Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode,System.Predicate{Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode},System.Predicate{Microsoft.Kusto.ServiceLayer.ObjectExplorer.Nodes.TreeNode},System.Boolean)">
            <summary>
            Finds a node by traversing the tree starting from the given node through all the children
            </summary>
            <param name="node">node to start traversing at</param>
            <param name="condition">Predicate function that accesses the tree and
            determines whether to stop going further up the tree</param>
            <param name="filter">Predicate function to filter the children when traversing</param>
            <returns>A Tree Node that matches the condition</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ObjectExplorer.ValidForFlag">
            <summary>
            Indicates which type of server a given node type is valid for
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Program">
            <summary>
            Main application class for SQL Tools API Service Host executable
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Program.Main(System.String[])">
            <summary>
            Main entry point into the SQL Tools API Service Layer
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch">
            <summary>
            This class represents a batch within a query
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.disposed">
            <summary>
            For IDisposable implementation, whether or not this has been disposed
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.executionEndTime">
            <summary>
            Local time when the execution and retrieval of files is finished
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.executionStartTime">
            <summary>
            Local time when the execution starts, specifically when the object is created
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.messagesSent">
            <summary>
            Whether or not any messages have been sent
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.outputFileFactory">
            <summary>
            Factory for creating readers/writers for the output of the batch
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.resultSets">
            <summary>
            Internal representation of the result sets so we can modify internally
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.specialAction">
            <summary>
            Special action which this batch performed 
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.getFullColumnSchema">
            <summary>
            Flag indicating whether a separate KeyInfo query should be run
            to get the full ColumnSchema metadata.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.BatchAsyncEventHandler">
            <summary>
            Asynchronous handler for when batches are completed
            </summary>
            <param name="batch">The batch that completed</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.BatchAsyncMessageHandler">
            <summary>
            Asynchronous handler for when a message is emitted by the sql connection
            </summary>
            <param name="message">The message that was emitted</param>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.BatchCompletion">
            <summary>
            Event that will be called when the batch has completed execution
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.BatchMessageSent">
            <summary>
            Event that will be called when a message has been emitted
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.BatchStart">
            <summary>
            Event to call when the batch has started execution
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ResultSetCompletion">
            <summary>
            Event that will be called when the resultset has completed execution. It will not be
            called from the Batch but from the ResultSet instance.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ResultSetAvailable">
            <summary>
            Event that will be called when the resultSet first becomes available. This is as soon as we start reading the results. It will not be
            called from the Batch but from the ResultSet instance.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ResultSetUpdated">
            <summary>
            Event that will be called when additional rows in the result set are available (rowCount available has increased). It will not be
            called from the Batch but from the ResultSet instance.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.BatchText">
            <summary>
            The text of batch that will be executed
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ExecutionEndTimeStamp">
            <summary>
            Localized timestamp for when the execution completed.
            Stored in UTC ISO 8601 format; should be localized before displaying to any user
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ExecutionElapsedTime">
            <summary>
            Localized timestamp for how long it took for the execution to complete
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ExecutionStartTimeStamp">
            <summary>
            Localized timestamp for when the execution began.
            Stored in UTC ISO 8601 format; should be localized before displaying to any user
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.HasError">
            <summary>
            Whether or not this batch encountered an error that halted execution
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.HasExecuted">
            <summary>
            Whether or not this batch has been executed, regardless of success or failure 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.Id">
            <summary>
            Ordinal of the batch in the query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ResultSets">
            <summary>
            The result sets of the batch execution
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ResultSummaries">
            <summary>
            Property for generating a set result set summaries from the result sets
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.Summary">
            <summary>
            Creates a <see cref="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary"/> based on the batch instance
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.Selection">
            <summary>
            The range from the file that is this batch
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.Execute(Microsoft.Kusto.ServiceLayer.Connection.ReliableDataSourceConnection,System.Threading.CancellationToken)">
            <summary>
            Executes this batch and captures any server messages that are returned.
            </summary>
            <param name="conn">The connection to use to execute the batch</param>
            <param name="cancellationToken">Token for cancelling the execution</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.GetSubset(System.Int32,System.Int64,System.Int32)">
            <summary>
            Generates a subset of the rows from a result set of the batch
            </summary>
            <param name="resultSetIndex">The index for selecting the result set</param>
            <param name="startRow">The starting row of the results</param>
            <param name="rowCount">How many rows to retrieve</param>
            <returns>A subset of results</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.GetExecutionPlan(System.Int32)">
            <summary>
            Generates an execution plan
            </summary>
            <param name="resultSetIndex">The index for selecting the result set</param>
            <returns>An execution plan object</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.SaveAs(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams,Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory,Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAsAsyncEventHandler,Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAsFailureAsyncEventHandler)">
            <summary>
            Saves a result to a file format selected by the user
            </summary>
            <param name="saveParams">Parameters for the save as request</param>
            <param name="fileFactory">
            Factory for creating the reader/writer pair for outputing to the selected format
            </param>
            <param name="successHandler">Delegate to call when request successfully completes</param>
            <param name="failureHandler">Delegate to call if the request fails</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.StatementCompletedHandler(System.Object,System.Data.StatementCompletedEventArgs)">
            <summary>
            Handler for when the StatementCompleted event is fired for this batch's command. This
            will be executed ONLY when there is a rowcount to report. If this event is not fired
            either NOCOUNT has been set or the command doesn't affect records.
            </summary>
            <param name="sender">Sender of the event</param>
            <param name="args">Arguments for the event</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ServerMessageHandler(System.Object,System.Data.SqlClient.SqlInfoMessageEventArgs)">
            <summary>
            Delegate handler for storing messages that are returned from the server
            </summary>
            <param name="sender">Object that fired the event</param>
            <param name="args">Arguments from the event</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.HandleSqlErrorMessage(System.Int32,System.Byte,System.Byte,System.Int32,System.String,System.String)">
            <summary>
            Handle a single SqlError's error message by processing and displaying it. The arguments come from the error being handled
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.UnwrapDbException(System.Exception)">
            <summary>
            Attempts to convert an <see cref="T:System.Exception"/> to a <see cref="T:System.Data.SqlClient.SqlException"/> that
            contains much more info about Sql Server errors. The exception is then unwrapped and
            messages are formatted and sent to the extension. If the exception cannot be 
            converted to SqlException, the message is written to the messages list.
            </summary>
            <param name="dbe">The exception to unwrap</param>
            <returns>true is exception can be ignored when in a loop, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Batch.ProcessResultSetSpecialActions">
            <summary>
            Aggregates all result sets in the batch into a single special action 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary">
            <summary>
            Summary of a batch within a query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionElapsed">
            <summary>
            Localized timestamp for how long it took for the execution to complete
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionEnd">
            <summary>
            Localized timestamp for when the execution completed.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary.ExecutionStart">
            <summary>
            Localized timestamp for when the execution started.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary.HasError">
            <summary>
            Whether or not the batch encountered an error that halted execution
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary.Id">
            <summary>
            The ID of the result set within the query results
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary.Selection">
            <summary>
            The selection from the file for this batch
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary.ResultSetSummaries">
            <summary>
            The summaries of the result sets inside the batch
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.BatchSummary.SpecialAction">
            <summary>
            The special action of the batch 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue">
            <summary>
            Class used for internally passing results from a cell around.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue.DisplayValue">
            <summary>
            Display value for the cell, suitable to be passed back to the client
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue.IsNull">
            <summary>
            Whether or not the cell is NULL
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue.InvariantCultureDisplayValue">
            <summary>
            Culture invariant display value for the cell, this value can later be used by the client to convert back to the original value.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue.RawObject">
            <summary>
            The raw object for the cell, for use internally
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue.RowId">
            <summary>
            The internal ID for the row. Should be used when directly referencing the row for edit
            or other purposes.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue.CopyTo(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue)">
            <summary>
            Copies the values of this DbCellValue into another DbCellValue (or child object)
            </summary>
            <param name="other">The DbCellValue (or child) that will receive the values</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper">
            <summary>
            Wrapper around a DbColumn, which provides extra functionality, but can be used as a
            regular DbColumn
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.AllServerDataTypes">
            <summary>
            All types supported by the server, stored as a hash set to provide O(1) lookup
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.#ctor(System.Data.DataRow)">
            <summary>
            Constructor for a DbColumnWrapper
            </summary>
            <remarks>Most of this logic is taken from SSMS ColumnInfo class</remarks>
            <param name="column">The column we're wrapping around</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.#ctor">
            <summary>
            Default constructor, used for deserializing JSON RPC only
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.IsBytes">
            <summary>
            Whether or not the column is bytes
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.IsChars">
            <summary>
            Whether or not the column is a character type
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.IsSqlVariant">
            <summary>
            Whether or not the column is a SqlVariant type
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.IsUdt">
            <summary>
            Whether or not the column is a user-defined type
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.IsXml">
            <summary>
            Whether or not the column is XML
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.IsJson">
            <summary>
            Whether or not the column is JSON
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.SqlDbType">
            <summary>
            The SqlDbType of the column, for use in a SqlParameter
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.IsHierarchyId">
            <summary>
            Whther this is a HierarchyId column
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper.IsUnknownType">
            <summary>
            Whether or not the column is an unknown type
            </summary>
            <remarks>
            Logic taken from SSDT determination of unknown columns. It may not even be possible to
            have "unknown" column types with the .NET Core SqlClient.
            </remarks>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.TypeConvertor">
            <summary>
            Convert a base data type to another base data type
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.TypeConvertor.ToNetType(System.Data.SqlDbType)">
            <summary>
            Convert TSQL type to .Net data type
            </summary>
            <param name="sqlDbType"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.BatchEventParams">
            <summary>
            Parameters to be sent back as part of a batch start or complete event to indicate that a
            batch of a query started or completed.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.BatchEventParams.BatchSummary">
            <summary>
            Summary of the batch that just completed
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.BatchEventParams.OwnerUri">
            <summary>
            URI for the editor that owns the query
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteDocumentSelectionParams">
            <summary>
            Parameters for executing a query from a document open in the workspace
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteDocumentSelectionParams.QuerySelection">
            <summary>
            The selection from the document
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteDocumentStatementParams">
            <summary>
            Parameters for executing a query from a document open in the workspace
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteDocumentStatementParams.Line">
            <summary>
            Line in the document for the location of the SQL statement
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteDocumentStatementParams.Column">
            <summary>
            Column in the document for the location of the SQL statement
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteRequestParamsBase">
            <summary>
            Basic parameters that are required for executing a query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteRequestParamsBase.OwnerUri">
            <summary>
            URI for the editor that is asking for the query execute
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteRequestParamsBase.ExecutionPlanOptions">
            <summary>
            Execution plan options
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteRequestParamsBase.GetFullColumnSchema">
            <summary>
            Flag to get full column schema via additional queries.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteRequestResult">
            <summary>
            Parameters for the query execute result
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteStringParams">
            <summary>
            Parameters for executing a query directly
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteStringParams.Query">
            <summary>
            The query to execute
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.MessageParams">
            <summary>
            Parameters to be sent back with a message notification
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.MessageParams.OwnerUri">
            <summary>
            URI for the editor that owns the query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.MessageParams.Message">
            <summary>
            The message that is being returned
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.QueryCompleteParams">
            <summary>
            Parameters to be sent back with a query execution complete event
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.QueryCompleteParams.OwnerUri">
            <summary>
            URI for the editor that owns the query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.QueryCompleteParams.BatchSummaries">
            <summary>
            Summaries of the result sets that were returned with the query
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ResultSetEventParams">
            <summary>
            Base class of parameters to return when a result set is available, updated or completed
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ResultSetCompleteEventParams">
            <summary>
            Parameters to return when a result set is completed.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ResultSetAvailableEventParams">
            <summary>
            Parameters to return when a result set is available.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ResultSetUpdatedEventParams">
            <summary>
            Parameters to return when a result set is updated
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteParams">
            <summary>
            Parameters for executing a query from a provided string
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteParams.QueryString">
            <summary>
            The string to execute
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteParams.OwnerUri">
            <summary>
            The owneruri to get connection from
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteResult">
            <summary>
            Result
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteResult.RowCount">
            <summary>
            The number of rows that was returned with the resultset
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteResult.ColumnInfo">
            <summary>
            Details about the columns that are provided as solutions
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteResult.Rows">
            <summary>
            2D array of the cell values requested from result set
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecutionPlan">
            <summary>
            Class used to represent an execution plan from a query for transmission across JSON RPC
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecutionPlan.Format">
            <summary>
            The format of the execution plan 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecutionPlan.Content">
            <summary>
            The execution plan content
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecutionPlanOptions">
            <summary> 
            Incoming execution plan options from the extension
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecutionPlanOptions.IncludeActualExecutionPlanXml">
            <summary>
            Setting to return the actual execution plan as XML
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecutionPlanOptions.IncludeEstimatedExecutionPlanXml">
            <summary>
            Setting to return the estimated execution plan as XML
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryCancelParams">
            <summary>
            Parameters for the query cancellation request
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryCancelResult">
            <summary>
            Parameters to return as the result of a query dispose request
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryCancelResult.Messages">
            <summary>
            Any error messages that occurred during disposing the result set. Optional, can be set
            to null if there were no errors.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryDisposeParams">
            <summary>
            Parameters for the query dispose request
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryDisposeResult">
            <summary>
            Parameters to return as the result of a query dispose request
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionPlanParams">
            <summary>
            Parameters for query execution plan request
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionPlanParams.OwnerUri">
            <summary>
            URI for the file that owns the query to look up the results for
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionPlanParams.BatchIndex">
            <summary>
            Index of the batch to get the results from
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionPlanParams.ResultSetIndex">
            <summary>
            Index of the result set to get the results from
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionPlanResult">
            <summary>
            Parameters for the query execution plan request
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionPlanResult.ExecutionPlan">
            <summary>
            The requested execution plan. Optional, can be set to null to indicate an error
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultMessage">
            <summary>
            Result message object with timestamp and actual message
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultMessage.BatchId">
            <summary>
            ID of the batch that generated this message. If null, this message
            was not generated as part of a batch
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultMessage.IsError">
            <summary>
            Whether or not this message is an error
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultMessage.Time">
            <summary>
            Timestamp of the message
            Stored in UTC ISO 8601 format; should be localized before displaying to any user
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultMessage.Message">
            <summary>
            Message contents
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultMessage.#ctor(System.String,System.Boolean,System.Nullable{System.Int32})">
            <summary>
            Constructor with default "Now" time
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultMessage.#ctor">
            <summary>
            Default constructor, used for deserializing JSON RPC only
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSubset">
            <summary>
            Class used to represent a subset of results from a query for transmission across JSON RPC
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSubset.RowCount">
            <summary>
            The number of rows returned from result set, useful for determining if less rows were
            returned than requested.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSubset.Rows">
            <summary>
            2D array of the cell values requested from result set
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary">
            <summary>
            Represents a summary of information about a result without returning any cells of the results
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Id">
            <summary>
            The ID of the result set within the batch results
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.BatchId">
            <summary>
            The ID of the batch set within the query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.RowCount">
            <summary>
            The number of rows that are available for the resultset thus far
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Complete">
            <summary>
            If true it indicates that all rows have been fetched and the RowCount being sent across is final for this ResultSet
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ColumnInfo">
            <summary>
            Details about the columns that are provided as solutions
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.SpecialAction">
            <summary>
            The special action definition of the result set 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.Visualization">
            <summary>
            The visualization options for the client to render charts.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ResultSetSummary.ToString">
            <summary>
            Returns a string represents the current object.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.VisualizationOptions">
            <summary>
            Represents the configuration options for data visualization
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.VisualizationOptions.Type">
            <summary>
            Gets or sets the type of the visualization
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.VisualizationType">
            <summary>
            The supported visualization types
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams">
            <summary>
            Parameters for the save results request
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.FilePath">
            <summary>
            The path of the file to save results in
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.BatchIndex">
            <summary>
            Index of the batch to get the results from
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.ResultSetIndex">
            <summary>
            Index of the result set to get the results from
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.OwnerUri">
            <summary>
            URI for the editor that called save results
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.RowStartIndex">
            <summary>
            Start index of the selected rows (inclusive)
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.RowEndIndex">
            <summary>
            End index of the selected rows (inclusive)
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.ColumnStartIndex">
            <summary>
            Start index of the selected columns (inclusive)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.ColumnEndIndex">
            <summary>
            End index of the selected columns (inclusive)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams.IsSaveSelection">
            <summary>
            Check if request is a subset of result set or whole result set
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequestParams">
            <summary>
            Parameters to save results as CSV
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequestParams.IncludeHeaders">
            <summary>
            Include headers of columns in CSV
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequestParams.Delimiter">
            <summary>
            Delimiter for separating data items in CSV
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequestParams.LineSeperator">
            <summary>
            either CR, CRLF or LF to seperate rows in CSV
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequestParams.TextIdentifier">
            <summary>
            Text identifier for alphanumeric columns in CSV
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequestParams.Encoding">
            <summary>
            Encoding of the CSV file
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsExcelRequestParams">
            <summary>
            Parameters to save results as Excel
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsExcelRequestParams.IncludeHeaders">
            <summary>
            Include headers of columns in Excel 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsJsonRequestParams">
            <summary>
            Parameters to save results as JSON
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsXmlRequestParams">
            <summary>
            Parameters to save results as XML
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsXmlRequestParams.Formatted">
            <summary>
            Formatting of the XML file
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsXmlRequestParams.Encoding">
            <summary>
            Encoding of the XML file
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultRequestResult">
            <summary>
            Parameters for the save results result
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultRequestResult.Messages">
            <summary>
            Error messages for saving to file. 
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequest">
            <summary>
            Request type to save results as CSV
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsExcelRequest">
            <summary>
            Request type to save results as Excel
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsJsonRequest">
            <summary>
            Request type to save results as JSON
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsXmlRequest">
            <summary>
            Request type to save results as XML
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SelectionData">
            <summary> 
            Container class for a selection range from file 
            </summary>
            TODO: Remove this in favor of buffer range end-to-end
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ColumnInfo.Name">
            <summary>
            Name of this column
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ISerializationParams.FilePath">
            <summary>
            Path to file that the serialized results will be stored in
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ISerializationParams.Rows">
            <summary>
            Results that are to be serialized into 'SaveFormat' format
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ISerializationParams.IsLastBatch" -->
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataContinueRequestParams">
            <summary>
            Class used for storing results and how the results are to be serialized
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataContinueRequestParams.FilePath">
            <summary>
            Path to file that the serialized results will be stored in
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataContinueRequestParams.Rows">
            <summary>
            Results that are to be serialized into 'SaveFormat' format
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataContinueRequestParams.IsLastBatch" -->
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataStartRequestParams">
            <summary>
            Class used for storing results and how the results are to be serialized
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataStartRequestParams.SaveFormat">
            <summary>
            String representation of the type that service is supposed to serialize to
             E.g. "json" or "csv"
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataStartRequestParams.FilePath">
            <summary>
            Path to file that the serialized results will be stored in
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataStartRequestParams.Rows">
            <summary>
            Results that are to be serialized into 'SaveFormat' format
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataStartRequestParams.IsLastBatch" -->
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataStartRequestParams.#ctor(System.String,System.String,Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue[][],System.Boolean)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetParams">
            <summary>
            Parameters for a query result subset retrieval request
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetParams.OwnerUri">
            <summary>
            URI for the file that owns the query to look up the results for
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetParams.BatchIndex">
            <summary>
            Index of the batch to get the results from
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetParams.ResultSetIndex">
            <summary>
            Index of the result set to get the results from
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetParams.RowsStartIndex">
            <summary>
            Beginning index of the rows to return from the selected resultset. This index will be
            included in the results.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetParams.RowsCount">
            <summary>
            Number of rows to include in the result of this request. If the number of the rows 
            exceeds the number of rows available after the start index, all available rows after
            the start index will be returned.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetResult">
            <summary>
            Parameters for the result of a subset retrieval request
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetResult.ResultSubset">
            <summary>
            The requested subset of results. Optional, can be set to null to indicate an error
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionOptionsParams">
            <summary>
            Parameters for the query execution options request
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.FileStreamReadResult">
            <summary>
            Represents a value returned from a read from a file stream. This is used to eliminate ref
            parameters used in the read methods.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.FileStreamReadResult.TotalLength">
            <summary>
            The total length in bytes of the value, (including the bytes used to store the length
            of the value)
            </summary>
            <remarks>
            Cell values are stored such that the length of the value is stored first, then the
            value itself is stored. Eg, a string may be stored as 0x03 0x6C 0x6F 0x6C. Under this
            system, the value would be "lol", the length would be 3, and the total length would be
            4 bytes.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.FileStreamReadResult.Value">
            <summary>
            Value of the cell
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.FileStreamReadResult.#ctor(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue,System.Int32)">
            <summary>
            Constructs a new FileStreamReadResult
            </summary>
            <param name="value">The value of the result, ready for consumption by a client</param>
            <param name="totalLength">The number of bytes for the used to store the value's length and value</param>s
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory">
            <summary>
            Interface for a factory that creates filesystem readers/writers
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamReader">
            <summary>
            Interface for a object that reads from the filesystem
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamWriter">
            <summary>
            Interface for a object that writes to a filesystem wrapper
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamFactory">
            <summary>
            Factory for creating a reader/writer pair that will read from the temporary buffer file
            and output to a CSV file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamFactory.QueryExecutionSettings">
            <summary>
            Settings for query execution
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamFactory.SaveRequestParams">
            <summary>
            Parameters for the save as CSV request
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamFactory.CreateFile">
            <summary>
            File names are not meant to be created with this factory.
            </summary>
            <exception cref="T:System.NotImplementedException">Thrown all times</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamFactory.GetReader(System.String)">
            <summary>
            Returns a new service buffer reader for reading results back in from the temporary buffer files, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">Path to the temp buffer file</param>
            <returns>Stream reader</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamFactory.GetWriter(System.String)">
            <summary>
            Returns a new CSV writer for writing results to a CSV file, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">Path to the CSV output file</param>
            <returns>Stream writer</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamFactory.DisposeFile(System.String)">
            <summary>
            Safely deletes the file
            </summary>
            <param name="fileName">Path to the file to delete</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamWriter">
            <summary>
            Writer for writing rows of results to a CSV file
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamWriter.#ctor(System.IO.Stream,Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequestParams)">
            <summary>
            Constructor, stores the CSV specific request params locally, chains into the base 
            constructor
            </summary>
            <param name="stream">FileStream to access the CSV file output</param>
            <param name="requestParams">CSV save as request parameters</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamWriter.WriteRow(System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue},System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper})">
            <summary>
            Writes a row of data as a CSV row. If this is the first row and the user has requested
            it, the headers for the column will be emitted as well.
            </summary>
            <param name="row">The data of the row to output to the file</param>
            <param name="columns">
            The entire list of columns for the result set. They will be filtered down as per the
            request params.
            </param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsCsvFileStreamWriter.EncodeCsvField(System.String,System.Char,System.Char)">
            <summary>
            Encodes a single field for inserting into a CSV record. The following rules are applied:
            <list type="bullet">
            <item><description>All double quotes (") are replaced with a pair of consecutive double quotes</description></item>
            </list>
            The entire field is also surrounded by a pair of double quotes if any of the following conditions are met:
            <list type="bullet">
            <item><description>The field begins or ends with a space</description></item>
            <item><description>The field begins or ends with a tab</description></item>
            <item><description>The field contains the ListSeparator string</description></item>
            <item><description>The field contains the '\n' character</description></item>
            <item><description>The field contains the '\r' character</description></item>
            <item><description>The field contains the '"' character</description></item>
            </list>
            </summary>
            <param name="field">The field to encode</param>
            <returns>The CSV encoded version of the original field</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamFactory">
            <summary>
            Factory for creating a reader/writer pair that will read from the temporary buffer file
            and output to a Excel file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamFactory.QueryExecutionSettings">
            <summary>
            Settings for query execution
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamFactory.SaveRequestParams">
            <summary>
            Parameters for the save as Excel request
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamFactory.CreateFile">
            <summary>
            File names are not meant to be created with this factory.
            </summary>
            <exception cref="T:System.NotImplementedException">Thrown all times</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamFactory.GetReader(System.String)">
            <summary>
            Returns a new service buffer reader for reading results back in from the temporary buffer files, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">Path to the temp buffer file</param>
            <returns>Stream reader</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamFactory.GetWriter(System.String)">
            <summary>
            Returns a new Excel writer for writing results to a Excel file, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">Path to the Excel output file</param>
            <returns>Stream writer</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamFactory.DisposeFile(System.String)">
            <summary>
            Safely deletes the file
            </summary>
            <param name="fileName">Path to the file to delete</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriter">
            <summary>
            Writer for writing rows of results to a Excel file
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriter.#ctor(System.IO.Stream,Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsExcelRequestParams)">
            <summary>
            Constructor, stores the Excel specific request params locally, chains into the base 
            constructor
            </summary>
            <param name="stream">FileStream to access the Excel file output</param>
            <param name="requestParams">Excel save as request parameters</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriter.WriteRow(System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue},System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper})">
            <summary>
            Writes a row of data as a Excel row. If this is the first row and the user has requested
            it, the headers for the column will be emitted as well.
            </summary>
            <param name="row">The data of the row to output to the file</param>
            <param name="columns">
            The entire list of columns for the result set. They will be filtered down as per the
            request params.
            </param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper">
            <summary>
            A helper class for write xlsx file base on ECMA-376. It tries to be minimal,
            both in implementation and runtime allocation. 
            </summary>
            <example> 
            This sample shows how to use the class 
            <code>
            public class TestClass
            {
                public static int Main() 
                {
                    using (Stream stream = File.Create("test.xlsx"))
                    using (var helper = new SaveAsExcelFileStreamWriterHelper(stream, false))
                    using (var sheet = helper.AddSheet())
                    {
                        sheet.AddRow();
                        sheet.AddCell("string");
                    }
                }
            }
            </code>
            </example>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet">
            <summary>
            Present a Excel sheet
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.#ctor(System.Xml.XmlWriter)">
            <summary>
            Initializes a new instance of the ExcelSheet class.
            </summary>
            <param name="writer">XmlWriter to write the sheet data</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.AddRow">
            <summary>
            Start a new row
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.AddCell(System.String)">
            <summary>
            Write a string cell
            </summary>
            <param name="value">string value to write</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.AddCell(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue)">
            <summary>
            Write a object cell
            </summary>
            The program will try to output number/datetime, otherwise, call the ToString 
            <param name="o"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.Dispose" -->
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.AddCellEmpty">
            <summary>
            Write a empty cell
            </summary>
            This only increases the internal bookmark and doesn't arcturally write out anything.
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.AddCell(System.Boolean)">
            <summary>
            Write a bool cell. 
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.AddCell(System.TimeSpan)">
            <summary>
            Write a TimeSpan cell. 
            </summary>
            <param name="time"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ExcelSheet.AddCell(System.DateTime)">
            <summary>
            Write a DateTime cell.
            </summary>
            <param name="dateTime">Datetime</param>
            <remark>
            If the DateTime does not have date part, it will be written as datetime and show as time only
            If the DateTime is before 1900-03-01, save as string because excel doesn't support them.
            Otherwise, save as datetime, and if the time is 00:00:00, show as yyyy-MM-dd.
            Show the datetime as yyyy-MM-dd HH:mm:ss if none of the previous situations
            </remark>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ReferenceManager">
            <summary>
            Helper class to track the current cell reference.
            </summary>
            <remarks>
            SpreadsheetML cell needs a reference attribute. (e.g. r="A1"). This class is used
            to track the current cell reference.
            </remarks>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ReferenceManager.#ctor(System.Xml.XmlWriter)">
            <summary>
            Initializes a new instance of the ReferenceManager class.   
            </summary>
            <param name="writer">XmlWriter to write the reference attribute to.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ReferenceManager.AssureColumnReference">
            <summary>
            Check that we have not write too many columns. (xlsx has a limit of 16384 columns)
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ReferenceManager.WriteAndIncreaseColumnReference">
            <summary>
            Write out the r="A1" attribute and increase the column number of internal bookmark
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ReferenceManager.IncreaseColumnReference">
            <summary>
            Increase the column of internal bookmark. 
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ReferenceManager.AssureRowReference">
            <summary>
            Check that we have not write too many rows. (xlsx has a limit of 1048576 rows) 
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.ReferenceManager.WriteAndIncreaseRowReference">
            <summary>
            Write out the r="1" attribute and increase the row number of internal bookmark
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the SaveAsExcelFileStreamWriterHelper class.  
            </summary>
            <param name="stream">The input or output stream.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.#ctor(System.IO.Stream,System.Boolean)">
            <summary>
            Initializes a new instance of the SaveAsExcelFileStreamWriterHelper class. 
            </summary>
            <param name="stream">The input or output stream.</param>
            <param name="leaveOpen">true to leave the stream open after the 
            SaveAsExcelFileStreamWriterHelper object is disposed; otherwise, false.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.AddSheet(System.String)">
            <summary>
            Add sheet inside the Xlsx file.
            </summary>
            <param name="sheetName">Sheet name</param>
            <returns>ExcelSheet for writing the sheet content</returns>
            <remarks>
            When the sheetName is null, sheet1,shhet2,..., will be used.
            The following charactors are not allowed in the sheetName
            '\', '/','*','[',']',':','?'
            </remarks>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.Dispose">
            <summary>
            Write out the rest of the xlsx files and release the resources used by the current instance 
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.WriteContentType">
            <summary>
            write [Content_Types].xml
            </summary>
            <remarks>
            This file need to describe all the files in the zip.
            </remarks>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.WriteTopRel">
            <summary>
            Write _rels/.rels. This file only need to reference main workbook
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.WriteWorkbook">
            <summary>
            Write xl/workbook.xml. This file will references the sheets through ids in xl/_rels/workbook.xml.rels
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsExcelFileStreamWriterHelper.WriteWorkbookRel">
            <summary>
            Write xl/_rels/workbook.xml.rels. This file will have the paths of the style and sheets.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamFactory.QueryExecutionSettings">
            <summary>
            Settings for query execution
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamFactory.SaveRequestParams">
            <summary>
            Parameters for the save as JSON request
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamFactory.CreateFile">
            <summary>
            File names are not meant to be created with this factory.
            </summary>
            <exception cref="T:System.NotImplementedException">Thrown all times</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamFactory.GetReader(System.String)">
            <summary>
            Returns a new service buffer reader for reading results back in from the temporary buffer files, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">Path to the temp buffer file</param>
            <returns>Stream reader</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamFactory.GetWriter(System.String)">
            <summary>
            Returns a new JSON writer for writing results to a JSON file, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">Path to the JSON output file</param>
            <returns>Stream writer</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamFactory.DisposeFile(System.String)">
            <summary>
            Safely deletes the file
            </summary>
            <param name="fileName">Path to the file to delete</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamWriter">
            <summary>
            Writer for writing rows of results to a JSON file.
            </summary>
            <remarks>
            This implements its own IDisposable because the cleanup logic closes the array that was
            created when the writer was created. Since this behavior is different than the standard
            file stream cleanup, the extra Dispose method was added.
            </remarks>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamWriter.#ctor(System.IO.Stream,Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams)">
            <summary>
            Constructor, writes the header to the file, chains into the base constructor
            </summary>
            <param name="stream">FileStream to access the JSON file output</param>
            <param name="requestParams">JSON save as request parameters</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamWriter.WriteRow(System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue},System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper})">
            <summary>
            Writes a row of data as a JSON object
            </summary>
            <param name="row">The data of the row to output to the file</param>
            <param name="columns">
            The entire list of columns for the result set. They will be filtered down as per the
            request params.
            </param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsJsonFileStreamWriter.Dispose(System.Boolean)">
            <summary>
            Disposes the writer by closing up the array that contains the row objects
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter">
            <summary>
            Abstract class for implementing writers that save results to file. Stores some basic info
            that all save as writer would need.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.#ctor(System.IO.Stream,Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams)">
            <summary>
            Stores the internal state for the writer that will be necessary for any writer.
            </summary>
            <param name="stream">The stream that will be written to</param>
            <param name="requestParams">The SaveAs request parameters</param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.ColumnStartIndex">
            <summary>
            Index of the first column to write to the output file
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.ColumnCount">
            <summary>
            Number of columns to write to the output file
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.ColumnEndIndex">
            <summary>
            Index of the last column to write to the output file
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.FileStream">
            <summary>
            The file stream to use to write the output file
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.WriteRow(Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader)">
            <summary>
            Not implemented, do not use.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.WriteRow(System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue},System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper})">
            <summary>
            Writes a row of data to the output file using the format provided by the implementing class.
            </summary>
            <param name="row">The row of data to output</param>
            <param name="columns">The list of columns to output</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.Seek(System.Int64)">
            <summary>
            Not implemented, do not use.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.FlushBuffer">
            <summary>
            Flushes the file stream buffer
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsStreamWriter.Dispose(System.Boolean)">
            <summary>
            Disposes the instance by flushing and closing the file stream
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamFactory.QueryExecutionSettings">
            <summary>
            Settings for query execution
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamFactory.SaveRequestParams">
            <summary>
            Parameters for the save as XML request
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamFactory.CreateFile">
            <summary>
            File names are not meant to be created with this factory.
            </summary>
            <exception cref="T:System.NotImplementedException">Thrown all times</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamFactory.GetReader(System.String)">
            <summary>
            Returns a new service buffer reader for reading results back in from the temporary buffer files, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">Path to the temp buffer file</param>
            <returns>Stream reader</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamFactory.GetWriter(System.String)">
            <summary>
            Returns a new XML writer for writing results to a XML file, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">Path to the XML output file</param>
            <returns>Stream writer</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamFactory.DisposeFile(System.String)">
            <summary>
            Safely deletes the file
            </summary>
            <param name="fileName">Path to the file to delete</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamWriter">
            <summary>
            Writer for writing rows of results to a XML file.
            </summary>
            <remarks>
            This implements its own IDisposable because the cleanup logic closes the element that was
            created when the writer was created. Since this behavior is different than the standard
            file stream cleanup, the extra Dispose method was added.
            </remarks>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamWriter.#ctor(System.IO.Stream,Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsXmlRequestParams)">
            <summary>
            Constructor, writes the header to the file, chains into the base constructor
            </summary>
            <param name="stream">FileStream to access the JSON file output</param>
            <param name="requestParams">XML save as request parameters</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamWriter.WriteRow(System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue},System.Collections.Generic.IList{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper})">
            <summary>
            Writes a row of data as a XML object
            </summary>
            <param name="row">The data of the row to output to the file</param>
            <param name="columns">
            The entire list of columns for the result set. They will be filtered down as per the
            request params.
            </param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamWriter.GetEncoding(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsXmlRequestParams)">
            <summary>
            Get the encoding for the XML file according to <param name="requestParams"></param>
            </summary>
            <param name="requestParams">XML save as request parameters</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.SaveAsXmlFileStreamWriter.Dispose(System.Boolean)">
            <summary>
            Disposes the writer by closing up the element that contains the row objects
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamFactory">
            <summary>
            Factory that creates file reader/writers that process rows in an internal, non-human readable file format
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamFactory.ExecutionSettings">
            <summary>
            The settings for query execution
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamFactory.CreateFile">
            <summary>
             Creates a new temporary file
            </summary>
            <returns>The name of the temporary file</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamFactory.GetReader(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader"/> for reading values back from
            an SSMS formatted buffer file, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">The file to read values from</param>
            <returns>A <see cref="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader"/></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamFactory.GetWriter(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter"/> for writing values out to an
            SSMS formatted buffer file, file share is ReadWrite to allow concurrent reads/writes to the file.
            </summary>
            <param name="fileName">The file to write values to</param>
            <returns>A <see cref="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter"/></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamFactory.DisposeFile(System.String)">
            <summary>
            Disposes of a file created via this factory
            </summary>
            <param name="fileName">The file to dispose of</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader">
            <summary>
            Reader for service buffer formatted file streams
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.#ctor(System.IO.Stream,Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings)">
            <summary>
            Constructs a new ServiceBufferFileStreamReader and initializes its state
            </summary>
            <param name="stream">The filestream to read from</param>
            <param name="settings">The query execution settings</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadRow(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper})">
            <summary>
            Reads a row from the file, based on the columns provided
            </summary>
            <param name="fileOffset">Offset into the file where the row starts</param>
            <param name="rowId">Internal ID of the row to set for all cells in this row</param>
            <param name="columns">The columns that were encoded</param>
            <returns>The objects from the row, ready for output to the client</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.AssureBufferLength(System.Int32)">
            <summary>
            Creates a new buffer that is of the specified length if the buffer is not already
            at least as long as specified.
            </summary>
            <param name="newBufferLength">The minimum buffer size</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadCellHelper``1(System.Int64,System.Int64,System.Func{System.Int32,``0},System.Func{System.Int32,System.Boolean},System.Func{``0,System.String},System.Boolean)">
            <summary>
            Reads the value of a cell from the file wrapper, checks to see if it null using
            <paramref name="isNullFunc"/>, and converts it to the proper output type using
            <paramref name="convertFunc"/>.
            </summary>
            <param name="offset">Offset into the file to read from</param>
            <param name="rowId">Internal ID of the row to set on all cells in this row</param>
            <param name="convertFunc">Function to use to convert the buffer to the target type</param>
            <param name="isNullFunc">
            If provided, this function will be used to determine if the value is null
            </param>
            <param name="toStringFunc">Optional function to use to convert the object to a string.</param>
            <param name="setInvariantCultureDisplayValue">Optional parameter indicates whether the culture invariant display value should be provided.</param>
            <typeparam name="T">The expected type of the cell. Used to keep the code honest</typeparam>
            <returns>The object, a display value, and the length of the value + its length</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadInt16(System.Int64,System.Int64)">
            <summary>
            Reads a short from the file at the offset provided
            </summary>
            <param name="fileOffset">Offset into the file to read the short from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A short</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadInt32(System.Int64,System.Int64)">
            <summary>
            Reads a int from the file at the offset provided
            </summary>
            <param name="fileOffset">Offset into the file to read the int from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>An int</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadInt64(System.Int64,System.Int64)">
            <summary>
            Reads a long from the file at the offset provided
            </summary>
            <param name="fileOffset">Offset into the file to read the long from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A long</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadByte(System.Int64,System.Int64)">
            <summary>
            Reads a byte from the file at the offset provided
            </summary>
            <param name="fileOffset">Offset into the file to read the byte from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A byte</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadChar(System.Int64,System.Int64)">
            <summary>
            Reads a char from the file at the offset provided
            </summary>
            <param name="fileOffset">Offset into the file to read the char from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A char</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadBoolean(System.Int64,System.Int64)">
            <summary>
            Reads a bool from the file at the offset provided
            </summary>
            <param name="fileOffset">Offset into the file to read the bool from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A bool</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadSingle(System.Int64,System.Int64)">
            <summary>
            Reads a single from the file at the offset provided
            </summary>
            <param name="fileOffset">Offset into the file to read the single from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A single</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadDouble(System.Int64,System.Int64)">
            <summary>
            Reads a double from the file at the offset provided
            </summary>
            <param name="fileOffset">Offset into the file to read the double from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A double</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadSqlDecimal(System.Int64,System.Int64)">
            <summary>
            Reads a SqlDecimal from the file at the offset provided
            </summary>
            <param name="offset">Offset into the file to read the SqlDecimal from</param>
            <returns>A SqlDecimal</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadDecimal(System.Int64,System.Int64)">
            <summary>
            Reads a decimal from the file at the offset provided
            </summary>
            <param name="offset">Offset into the file to read the decimal from</param>
            <returns>A decimal</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadDateTime(System.Int64,System.Int64,Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbColumnWrapper)">
            <summary>
            Reads a DateTime from the file at the offset provided
            </summary>
            <param name="offset">Offset into the file to read the DateTime from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <param name="col">Column metadata, used for determining what precision to output</param>
            <returns>A DateTime</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadDateTimeOffset(System.Int64,System.Int64)">
            <summary>
            Reads a DateTimeOffset from the file at the offset provided
            </summary>
            <param name="offset">Offset into the file to read the DateTimeOffset from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A DateTimeOffset</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadTimeSpan(System.Int64,System.Int64)">
            <summary>
            Reads a TimeSpan from the file at the offset provided
            </summary>
            <param name="offset">Offset into the file to read the TimeSpan from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A TimeSpan</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadString(System.Int64,System.Int64)">
            <summary>
            Reads a string from the file at the offset provided
            </summary>
            <param name="offset">Offset into the file to read the string from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A string</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadBytes(System.Int64,System.Int64)">
            <summary>
            Reads bytes from the file at the offset provided
            </summary>
            <param name="offset">Offset into the file to read the bytes from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A byte array</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadGuid(System.Int64,System.Int64)">
            <summary>
            Reads the bytes that make up a GUID at the offset provided
            </summary>
            <param name="offset">Offset into the file to read the bytes from</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A system guid type object</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadMoney(System.Int64,System.Int64)">
            <summary>
            Reads a SqlMoney type from the offset provided
            into a 
            </summary>
            <param name="offset">Offset into the file to read the value</param>
            <param name="rowId">Internal ID of the row that will be stored in the cell</param>
            <returns>A sql money type object</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.ReadLength(System.Int64)">
            <summary>
            Reads the length of a field at the specified offset in the file
            </summary>
            <param name="offset">Offset into the file to read the field length from</param>
            <returns>A LengthResult</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.LengthResult">
            <summary>
            Internal struct used for representing the length of a field from the file
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.LengthResult.LengthLength">
            <summary>
            How many bytes the length takes up
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.LengthResult.ValueLength">
            <summary>
            How many bytes the value takes up
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.LengthResult.TotalLength">
            <summary>
            <see cref="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.LengthResult.LengthLength"/> + <see cref="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamReader.LengthResult.ValueLength"/>
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter">
            <summary>
            Writer for service buffer formatted file streams
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.writeMethods">
            <summary>
            Functions to use for writing various types to a file
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.#ctor(System.IO.Stream,Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings)">
            <summary>
            Constructs a new writer
            </summary>
            <param name="stream">The file wrapper to use as the underlying file stream</param>
            <param name="settings">The query execution settings</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteRow(Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader)">
            <summary>
            Writes an entire row to the file stream
            </summary>
            <param name="reader">A primed reader</param>
            <returns>Number of bytes used to write the row</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.Seek(System.Int64)">
            <summary>
            Seeks to a given offset in the file, relative to the beginning of the file
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.FlushBuffer">
            <summary>
            Flushes the internal buffer to the file stream
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteNull">
            <summary>
            Writes null to the file as one 0x00 byte
            </summary>
            <returns>Number of bytes used to store the null</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteInt16(System.Int16)">
            <summary>
            Writes a short to the file
            </summary>
            <returns>Number of bytes used to store the short</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteInt32(System.Int32)">
            <summary>
            Writes a int to the file
            </summary>
            <returns>Number of bytes used to store the int</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteInt64(System.Int64)">
            <summary>
            Writes a long to the file
            </summary>
            <returns>Number of bytes used to store the long</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteChar(System.Char)">
            <summary>
            Writes a char to the file
            </summary>
            <returns>Number of bytes used to store the char</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteBoolean(System.Boolean)">
            <summary>
            Writes a bool to the file
            </summary>
            <returns>Number of bytes used to store the bool</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the file
            </summary>
            <returns>Number of bytes used to store the byte</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteSingle(System.Single)">
            <summary>
            Writes a float to the file
            </summary>
            <returns>Number of bytes used to store the float</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteDouble(System.Double)">
            <summary>
            Writes a double to the file
            </summary>
            <returns>Number of bytes used to store the double</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteSqlDecimal(System.Data.SqlTypes.SqlDecimal)">
            <summary>
            Writes a SqlDecimal to the file
            </summary>
            <returns>Number of bytes used to store the SqlDecimal</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteDecimal(System.Decimal)">
            <summary>
            Writes a decimal to the file
            </summary>
            <returns>Number of bytes used to store the decimal</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteDateTime(System.DateTime)">
            <summary>
            Writes a DateTime to the file
            </summary>
            <returns>Number of bytes used to store the DateTime</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteDateTimeOffset(System.DateTimeOffset)">
            <summary>
            Writes a DateTimeOffset to the file
            </summary>
            <returns>Number of bytes used to store the DateTimeOffset</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteTimeSpan(System.TimeSpan)">
            <summary>
            Writes a TimeSpan to the file
            </summary>
            <returns>Number of bytes used to store the TimeSpan</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteString(System.String)">
            <summary>
            Writes a string to the file
            </summary>
            <returns>Number of bytes used to store the string</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes a byte[] to the file
            </summary>
            <returns>Number of bytes used to store the byte[]</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteGuid(System.Guid)">
            <summary>
            Stores a GUID value to the file by treating it as a byte array
            </summary>
            <param name="val">The GUID to write to the file</param>
            <returns>Number of bytes written to the file</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteMoney(System.Data.SqlTypes.SqlMoney)">
            <summary>
            Stores a SqlMoney value to the file by treating it as a decimal
            </summary>
            <param name="val">The SqlMoney value to write to the file</param>
            <returns>Number of bytes written to the file</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.AssureBufferLength(System.Int32)">
            <summary>
            Creates a new buffer that is of the specified length if the buffer is not already
            at least as long as specified.
            </summary>
            <param name="newBufferLength">The minimum buffer size</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteLength(System.Int32)">
            <summary>
            Writes the length of the field using the appropriate number of bytes (ie, 1 if the
            length is &lt;255, 5 if the length is &gt;=255)
            </summary>
            <returns>Number of bytes used to store the length</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteNullable(System.Data.SqlTypes.INullable,System.Func{System.Object,System.Int32})">
            <summary>
            Writes a Nullable type (generally a Sql* type) to the file. The function provided by
            <paramref name="valueWriteFunc"/> is used to write to the file if <paramref name="val"/>
            is not null. <see cref="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.ServiceBufferFileStreamWriter.WriteNull"/> is used if <paramref name="val"/> is null.
            </summary>
            <param name="val">The value to write to the file</param>
            <param name="valueWriteFunc">The function to use if val is not null</param>
            <returns>Number of bytes used to write value to the file</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader">
            <summary>
            Wrapper around a DbData reader to perform some special operations more simply
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.#ctor(System.Data.IDataReader)">
            <summary>
            Constructs a new wrapper around the provided reader
            </summary>
            <param name="reader">The reader to wrap around</param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.Columns">
            <summary>
            All the columns that this reader currently contains
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DataReader">
            <summary>
            The <see cref="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.DataReader"/> that will be read from
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.HasLongColumns">
            <summary>
            Whether or not any of the columns of this reader are 'long', such as nvarchar(max)
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.ReadAsync(System.Threading.CancellationToken)">
            <summary>
            Pass-through to DbDataReader.ReadAsync()
            </summary>
            <param name="cancellationToken">The cancellation token to use for cancelling a query</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValue(System.Int32)">
            <summary>
            Retrieves a value
            </summary>
            <param name="i">Column ordinal</param>
            <returns>The value of the given column</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetValues(System.Object[])">
            <summary>
            Stores all values of the current row into the provided object array
            </summary>
            <param name="values">Where to store the values from this row</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.IsDBNull(System.Int32)">
            <summary>
            Whether or not the cell of the given column at the current row is a DBNull
            </summary>
            <param name="i">Column ordinal</param>
            <returns>True if the cell is DBNull, false otherwise</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetBytesWithMaxCapacity(System.Int32,System.Int32)">
            <summary>
            Retrieves bytes with a maximum number of bytes to return
            </summary>
            <param name="iCol">Column ordinal</param>
            <param name="maxNumBytesToReturn">Number of bytes to return at maximum</param>
            <returns>Byte array</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetCharsWithMaxCapacity(System.Int32,System.Int32)">
            <summary>
            Retrieves characters with a maximum number of charss to return
            </summary>
            <param name="iCol">Column ordinal</param>
            <param name="maxCharsToReturn">Number of chars to return at maximum</param>
            <returns>String</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.GetXmlWithMaxCapacity(System.Int32,System.Int32)">
            <summary>
            Retrieves xml with a maximum number of bytes to return
            </summary>
            <param name="iCol">Column ordinal</param>
            <param name="maxCharsToReturn">Number of chars to return at maximum</param>
            <returns>String</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.StorageDataReader.StringWriterWithMaxCapacity">
            <summary>
            Internal class for writing strings with a maximum capacity
            </summary>
            <remarks>
            This code is take almost verbatim from Microsoft.SqlServer.Management.UI.Grid, SSMS 
            DataStorage, StorageDataReader class.
            </remarks>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Query">
            <summary>
            Internal representation of an active query
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.cancellationSource">
            <summary>
            Cancellation token source, used for cancelling async db actions
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.disposed">
            <summary>
            For IDisposable implementation, whether or not this object has been disposed
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.editorConnection">
            <summary>
            The connection info associated with the file editor owner URI, used to create a new
            connection upon execution of the query
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.hasExecuteBeenCalled">
            <summary>
            Whether or not the execute method has been called for this query
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.#ctor(System.String,Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo,Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings,Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory,System.Boolean,System.Boolean)">
            <summary>
            Constructor for a query
            </summary>
            <param name="queryText">The text of the query to execute</param>
            <param name="connection">The information of the connection to use to execute the query</param>
            <param name="settings">Settings for how to execute the query, from the user</param>
            <param name="outputFactory">Factory for creating output files</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.QueryAsyncEventHandler">
            <summary>
            Delegate type for callback when a query completes or fails
            </summary>
            <param name="query">The query that completed</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.QueryAsyncErrorEventHandler">
            <summary>
            Delegate type for callback when a query fails
            </summary>
            <param name="query">Query that raised the event</param>
            <param name="exception">Exception that caused the query to fail</param>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.BatchCompleted">
            <summary>
            Event to be called when a batch is completed.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.BatchMessageSent">
            <summary>
            Event that will be called when a message has been emitted
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.BatchStarted">
            <summary>
            Event to be called when a batch starts execution.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.QueryCompleted">
            <summary>
            Callback for when the query has completed successfully
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.QueryFailed">
            <summary>
            Callback for when the query has failed
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.ResultSetCompleted">
            <summary>
            Event to be called when a resultset has completed.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.ResultSetAvailable">
            <summary>
            Event that will be called when the resultSet first becomes available. This is as soon as we start reading the results.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.ResultSetUpdated">
            <summary>
            Event that will be called when additional rows in the result set are available (rowCount available has increased)
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.BeforeBatches">
            <summary>
            The batches which should run before the user batches 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.Batches">
            <summary>
            The batches underneath this query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.AfterBatches">
            <summary>
            The batches which should run after the user batches 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.BatchSummaries">
            <summary>
            The summaries of the batches underneath this query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.ExecutionTask">
            <summary>
            Storage for the async task for execution. Set as internal in order to await completion
            in unit tests.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.HasExecuted">
            <summary>
            Whether or not the query has completed executed, regardless of success or failure
            </summary>
            <remarks>
            Don't touch the setter unless you're doing unit tests!
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.HasCancelled">
            <summary>
            if the query has been cancelled (before execution started)
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.HasErrored">
            <summary>
            if the query has errored out (before batch execution started)
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.QueryText">
            <summary>
            The text of the query to execute
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.Cancel">
            <summary>
            Cancels the query by issuing the cancellation token
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.Execute">
            <summary>
            Launches the asynchronous process for executing the query
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.GetSubset(System.Int32,System.Int32,System.Int64,System.Int32)">
            <summary>
            Retrieves a subset of the result sets
            </summary>
            <param name="batchIndex">The index for selecting the batch item</param>
            <param name="resultSetIndex">The index for selecting the result set</param>
            <param name="startRow">The starting row of the results</param>
            <param name="rowCount">How many rows to retrieve</param>
            <returns>A subset of results</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.GetExecutionPlan(System.Int32,System.Int32)">
            <summary>
            Retrieves a subset of the result sets
            </summary>
            <param name="batchIndex">The index for selecting the batch item</param>
            <param name="resultSetIndex">The index for selecting the result set</param>
            <returns>The Execution Plan, if the result set has one</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.SaveAs(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams,Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory,Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAsAsyncEventHandler,Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAsFailureAsyncEventHandler)">
            <summary>
            Saves the requested results to a file format of the user's choice
            </summary>
            <param name="saveParams">Parameters for the save as request</param>
            <param name="fileFactory">
            Factory for creating the reader/writer pair for the requested output format
            </param>
            <param name="successHandler">Delegate to call when the request completes successfully</param>
            <param name="failureHandler">Delegate to call if the request fails</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.ExecuteInternal">
            <summary>
            Executes this query asynchronously and collects all result sets
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.Query.AddBatch(System.String,System.Collections.Generic.ICollection{Microsoft.Kusto.ServiceLayer.QueryExecution.Batch},Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)">
            <summary>
            Function to add a new batch to a Batch set
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService">
            <summary>
            Service for executing queries
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.Instance">
            <summary>
            Singleton instance of the query execution service
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.BufferFileStreamFactory">
            <summary>
            File factory to be used to create a buffer file for results.
            </summary>
            <remarks>
            Made internal here to allow for overriding in unit testing
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.BufferFileFactory">
            <summary>
            File factory to be used to create a buffer file for results
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.CsvFileFactory">
            <summary>
            File factory to be used to create CSV files from result sets. Set to internal in order
            to allow overriding in unit testing
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.ExcelFileFactory">
            <summary>
            File factory to be used to create Excel files from result sets. Set to internal in order
            to allow overriding in unit testing
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.JsonFileFactory">
            <summary>
            File factory to be used to create JSON files from result sets. Set to internal in order
            to allow overriding in unit testing
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.XmlFileFactory">
            <summary>
            File factory to be used to create XML files from result sets. Set to internal in order
            to allow overriding in unit testing
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.ActiveQueries">
            <summary>
            The collection of active queries
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.ActiveQueryExecutionSettings">
            <summary>
            The collection of query execution options
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.WorkTask">
            <summary>
            Internal task for testability
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.ConnectionService">
            <summary>
            Instance of the connection service, used to get the connection info for a given owner URI
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.queries">
            <summary>
            Internal storage of active queries, lazily constructed as a threadsafe dictionary
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.queryExecutionSettings">
            <summary>
            Internal storage of active query settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.Settings">
            <summary>
            Settings that will be used to execute queries. Internal for unit testing
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.simpleExecuteRequests">
            <summary>
            Holds a map from the simple execute unique GUID and the underlying task that is being ran
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.ActiveSimpleExecuteRequests">
            <summary>
            Holds a map from the simple execute unique GUID and the underlying task that is being ran
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.InitializeService(Microsoft.Kusto.ServiceLayer.ServiceHost,Microsoft.Kusto.ServiceLayer.Connection.IConnectionManager)">
            <summary>
            Initializes the service with the service host, registers request handlers and shutdown
            event handler.
            </summary>
            <param name="serviceHost">The service host instance to register with</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleExecuteRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteRequestParamsBase,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteRequestResult})">
            <summary>
            Handles request to execute a selection of a document in the workspace service
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleSimpleExecuteRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.SimpleExecuteResult})">
            <summary>
            Handles a request to execute a string and return the result
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleResultSubsetRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetResult})">
            <summary>
            Handles a request to get a subset of the results of this query
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleQueryExecutionOptionsRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionOptionsParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.Boolean})">
            <summary>
            Handles a request to set query execution options
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleExecutionPlanRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionPlanParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryExecutionPlanResult})">
            <summary>
            Handles a request to get an execution plan
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleDisposeRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryDisposeParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryDisposeResult})">
            <summary>
            Handles a request to dispose of this query
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleCancelRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryCancelParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.QueryCancelResult})">
            <summary>
            Handles a request to cancel this query if it is in progress
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleSaveResultsAsCsvRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsCsvRequestParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultRequestResult})">
            <summary>
            Process request to save a resultSet to a file in CSV format
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleSaveResultsAsExcelRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsExcelRequestParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultRequestResult})">
            <summary>
            Process request to save a resultSet to a file in Excel format
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleSaveResultsAsJsonRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsJsonRequestParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultRequestResult})">
            <summary>
            Process request to save a resultSet to a file in JSON format
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleSaveResultsAsXmlRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsAsXmlRequestParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultRequestResult})">
            <summary>
            Process request to save a resultSet to a file in XML format
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.InterServiceExecuteQuery(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.ExecuteRequests.ExecuteRequestParamsBase,Microsoft.Kusto.ServiceLayer.Connection.ConnectionInfo,Microsoft.SqlTools.Hosting.Protocol.IEventSender,System.Func{Microsoft.Kusto.ServiceLayer.QueryExecution.Query,System.Threading.Tasks.Task{System.Boolean}},System.Func{System.String,System.Threading.Tasks.Task},Microsoft.Kusto.ServiceLayer.QueryExecution.Query.QueryAsyncEventHandler,Microsoft.Kusto.ServiceLayer.QueryExecution.Query.QueryAsyncErrorEventHandler,System.Boolean)">
            <summary>
            Query execution meant to be called from another service. Utilizes callbacks to allow
            custom actions to be taken upon creation of query and failure to create query.
            </summary>
            <param name="executeParams">Parameters for execution</param>
            <param name="connInfo">Connection Info to use; will try and get the connection from owneruri if not provided</param>
            <param name="queryEventSender">Event sender that will send progressive events during execution of the query</param>
            <param name="queryCreateSuccessFunc">
            Callback for when query has been created successfully. If result is <c>true</c>, query
            will be executed asynchronously. If result is <c>false</c>, query will be disposed. May
            be <c>null</c>
            </param>
            <param name="queryCreateFailFunc">
            Callback for when query failed to be created successfully. Error message is provided.
            May be <c>null</c>.
            </param>
            <param name="querySuccessFunc">
            Callback to call when query has completed execution successfully. May be <c>null</c>.
            </param>
            <param name="queryFailureFunc">
            Callback to call when query has completed execution with errors. May be <c>null</c>.
            </param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.InterServiceDisposeQuery(System.String,System.Func{System.Threading.Tasks.Task},System.Func{System.String,System.Threading.Tasks.Task})">
            <summary>
            Query disposal meant to be called from another service. Utilizes callbacks to allow
            custom actions to be performed on success or failure.
            </summary>
            <param name="ownerUri">The identifier of the query to be disposed</param>
            <param name="successAction">Action to perform on success</param>
            <param name="failureAction">Action to perform on failure</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.InterServiceResultSubset(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SubsetParams)">
            <summary>
            Retrieves the requested subset of rows from the requested result set. Intended to be
            called by another service.
            </summary>
            <param name="subsetParams">Parameters for the subset to retrieve</param>
            <returns>The requested subset</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The requested query does not exist</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.HandleDidCloseTextDocumentNotification(System.String,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Handle the file open notification
            </summary>
            <param name="scriptFile"></param>
            <param name="eventContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.GetSqlTextFromSelectionData(System.String,Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SelectionData)">
            <summary>
            Return portion of document corresponding to the selection range
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.GetSqlStatementAtPosition(System.String,System.Int32,System.Int32)">
            <summary>
            Return portion of document corresponding to the statement at the line and column
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.UpdateSettings(Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings,Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            Internal for testing purposes
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.QueryExecutionService.isQueryEditor(System.String)">
            <summary>
            Verify if the URI maps to a query editor document
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.QuerySettingsHelper">
            <summary>
            Service for executing queries
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultOnlyContext`1">
            <summary>
            Implementation of IEventSender that swallows events without doing anything with them.
            In the future this class could be used to roll up all the events and send
            them all at once
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet">
            <summary>
            Class that represents a resultset the was generated from a query. Contains logic for
            storing and retrieving results. Is contained by a Batch class.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.disposed">
            <summary>
            For IDisposable pattern, whether or not object has been disposed
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.fileOffsets">
            <summary>
            A list of offsets into the buffer file that correspond to where rows start
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.fileStreamFactory">
            <summary>
            The factory to use to get reading/writing handlers
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.hasStartedRead">
            <summary>
            Whether or not the result set has been read in from the database,
            set as internal in order to fake value in unit tests.
            This gets set as soon as we start reading.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.hasCompletedRead">
            <summary>
            Set when all results have been read for this resultSet from the server
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.outputFileName">
            <summary>
            The name of the temporary file we're using to output these results in
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.rowCountOverride">
            <summary>
            Row count to use in special scenarios where we want to override the number of rows.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.specialAction">
            <summary>
            The special action which applied to this result set
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.totalBytesWritten">
            <summary>
            Total number of bytes written to the file. Used to jump to end of the file for append
            scenarios. Internal for unit test validation.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.#ctor(System.Int32,System.Int32,Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory)">
            <summary>
            Creates a new result set and initializes its state
            </summary>
            <param name="ordinal">The ID of the resultset, the ordinal of the result within the batch</param>
            <param name="batchOrdinal">The ID of the batch, the ordinal of the batch within the query</param>
            <param name="factory">Factory for creating a reader/writer</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAsAsyncEventHandler">
            <summary>
            Asynchronous handler for when saving query results succeeds
            </summary>
            <param name="parameters">Request parameters for identifying the request</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAsFailureAsyncEventHandler">
            <summary>
            Asynchronous handler for when saving query results fails
            </summary>
            <param name="parameters">Request parameters for identifying the request</param>
            <param name="message">Message to send back describing why the request failed</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.ResultSetAsyncEventHandler">
            <summary>
            Asynchronous handler for when a resultset is available/updated/completed
            </summary>
            <param name="resultSet">The result set that completed</param>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.ResultCompletion">
            <summary>
            Event that will be called when the result set has completed execution
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.ResultAvailable">
            <summary>
            Event that will be called when the resultSet first becomes available. This is as soon as we start reading the results.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.ResultUpdated">
            <summary>
            Event that will be called when additional rows in the result set are available (rowCount available has increased)
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.Columns">
            <summary>
            The columns for this result set
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.Id">
            <summary>
            ID of the result set, relative to the batch
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.BatchId">
            <summary>
            ID of the batch set, relative to the query
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.RowCount">
            <summary>
            The number of rows for this result set
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveTasks">
            <summary>
            All save tasks currently saving this ResultSet
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.Summary">
            <summary>
            Generates a summary of this result set
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.GetRow(System.Int64)">
            <summary>
            Returns a specific row from the result set.
            </summary>
            <remarks>
            Creates a new file reader for a single reader. This method should only be used for one
            off requests, not for requesting a large subset of the results.
            </remarks>
            <param name="rowId">The internal ID of the row to read</param>
            <returns>The requested row</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.GetSubset(System.Int64,System.Int32)">
            <summary>
            Generates a subset of the rows from the result set
            </summary>
            <param name="startRow">The starting row of the results</param>
            <param name="rowCount">How many rows to retrieve</param>
            <returns>A subset of results</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.GetExecutionPlan">
            <summary>
            Generates the execution plan from the table returned 
            </summary>
            <returns>An execution plan object</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.ReadResultToEnd(System.Data.IDataReader,System.Threading.CancellationToken)">
            <summary>
            Reads from the reader until there are no more results to read
            </summary>
            <param name="dbDataReader">The data reader for getting results from the db</param>
            <param name="cancellationToken">Cancellation token for cancelling the query</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.RemoveRow(System.Int64)">
            <summary>
            Removes a row from the result set cache
            </summary>
            <param name="internalId">Internal ID of the row</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.AddRow(System.Data.Common.DbDataReader)">
            <summary>
            Adds a new row to the result set by reading the row from the provided db data reader
            </summary>
            <param name="dbDataReader">The result of a command to insert a new row should be UNREAD</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.UpdateRow(System.Int64,System.Data.Common.DbDataReader)">
            <summary>
            Updates the values in a row with the 
            </summary>
            <param name="rowId"></param>
            <param name="dbDataReader"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAs(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SaveResultsRequestParams,Microsoft.Kusto.ServiceLayer.QueryExecution.DataStorage.IFileStreamFactory,Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAsAsyncEventHandler,Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SaveAsFailureAsyncEventHandler)">
            <summary>
            Saves the contents of this result set to a file using the IFileStreamFactory provided
            </summary>
            <param name="saveParams">Parameters for saving the results to a file</param>
            <param name="fileFactory">
            Factory for creating a stream reader/writer combo for writing results to disk
            </param>
            <param name="successHandler">Handler for a successful write of all rows</param>
            <param name="failureHandler">Handler for unsuccessful write of all rows</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.SendResultAvailableOrUpdated(System.Object)">
            <summary>
            Sends the ResultsUpdated message if the number of rows has changed since last send.
            </summary>
            <param name="stateInfo"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.CheckForIsJson">
            <summary>
            Check columns for json type and set isJson if needed
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.ProcessSpecialAction">
            <summary>
            Determine the special action, if any, for this result set
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.ResultSet.AppendRowToBuffer(System.Data.Common.DbDataReader)">
            <summary>
            Adds a single row to the end of the buffer file. INTENDED FOR SINGLE ROW INSERTION ONLY.
            </summary>
            <param name="dbDataReader">An UNREAD db data reader</param>
            <returns>The offset into the file where the row was inserted</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.SerializationService.HandleSerializeStartRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataStartRequestParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataResult})">
            <summary>
            Begin to process request to save a resultSet to a file in CSV format
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.SerializationService.HandleSerializeContinueRequest(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataContinueRequestParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.SerializeDataResult})">
            <summary>
            Process request to save a resultSet to a file in CSV format
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.QueryExecution.SpecialAction">
            <summary>
            Class that represents a Special Action which occured by user request during the query 
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.SpecialAction.#ctor">
            <summary>
            The type of XML execution plan that is contained with in a result set  
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.SpecialAction.None">
            <summary>
            No Special action performed 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.QueryExecution.SpecialAction.ExpectYukonXMLShowPlan">
            <summary>
            Contains an XML execution plan result set  
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.QueryExecution.SpecialAction.CombineSpecialAction(Microsoft.Kusto.ServiceLayer.QueryExecution.SpecialAction)">
            <summary>
            Aggregate this special action with the input
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCancelParams">
            <summary>
            Parameters to cancel a scripting request.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCancelResult">
            <summary>
            Parameters returned from a scripting request.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCancelRequest">
            <summary>
            Defines the scripting cancel request type.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCompleteParams">
            <summary>
            Parameters sent to when a scripting operation has completed.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCompleteParams.ErrorDetails">
            <summary>
            Get or sets the error details for an error that occurred during the scripting operation.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCompleteParams.ErrorMessage">
            <summary>
            Get or sets the error message for an error that occurred during the scripting operation.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCompleteParams.HasError">
            <summary>
            Get or sets a value to indicate an error occurred during the scripting operation.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCompleteParams.Canceled">
            <summary>
            Get or sets a value to indicate the scripting operation was canceled.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCompleteParams.Success">
            <summary>
            Get or sets a value to indicate the scripting operation successfully completed.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCompleteEvent">
            <summary>
            Event sent to indicate a scripting operation has completed.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingEventParams">
            <summary>
            Base class for all scripting event parameters.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingEventParams.OperationId">
            <summary>
            Gets or sets the operation id of the scripting operation this event is associated with.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingEventParams.SequenceNumber">
            <summary>
            Gets or sets the sequence number.  The sequence number starts at 1, and is incremented each time a scripting event is 
            raised for the current scripting operation.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsCompleteParams">
            <summary>
            Parameters sent when a list objects operation has completed.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsCompleteParams.ScriptingObjects">
            <summary>
            Gets or sets the list of database objects returned from the list objects operation.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsCompleteParams.Count">
            <summary>
            Gets or sets the count of database object returned from the list objects operation.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsCompleteEvent">
            <summary>
            Event sent to indicate a list objects operation has completed.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsParams">
            <summary>
            Parameters for a list objects request.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsResult">
            <summary>
            Parameters returned from a list objects request.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsRequest">
            <summary>
            Defines the scripting list objects request type.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject">
            <summary>
            Class to represent a database object that can be scripted.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject.Type">
            <summary>
            Gets or sets the database object type.  
            </summary>
            <remarks>
            This underlying values are determined by the SqlScriptPublishModel.GetDatabaseObjectTypes() and
            can change depending on the version of SMO used by the tools service.  Values can be: 
                Table,
                View,
                StoredProcedure,
                UserDefinedFunction,
                UserDefinedDataType,
                User,
                Default,
                Rule,
                DatabaseRole,
                ApplicationRole,
                SqlAssembly,
                DdlTrigger,
                Synonym,
                XmlSchemaCollection,
                Schema,
                PlanGuide,
                UserDefinedType,
                UserDefinedAggregate,
                FullTextCatalog,
                UserDefinedTableType
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject.Schema">
            <summary>
            Gets or sets the schema of the database object.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject.Name">
            <summary>
            Gets or sets the database object name.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingOperationType">
            <summary>
            Scripting Operation type
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions">
            <summary>
            Defines the scripting options.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptAnsiPadding">
            <summary>
            Generate ANSI padding statements
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.AppendToFile">
            <summary>
            Append the generated script to a file
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ContinueScriptingOnError">
            <summary>
            Continue to script if an error occurs. Otherwise, stop.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ConvertUDDTToBaseType">
            <summary>
            Convert user-defined data types to base types.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.GenerateScriptForDependentObjects">
            <summary>
            Generate script for dependent objects for each object scripted.
            </summary>
            <remarks>
            The default is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.IncludeDescriptiveHeaders">
            <summary>
            Include descriptive headers for each object generated.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.IncludeIfNotExists">
            <summary>
            Check that an object with the given name exists before dropping or altering or that an object with the given name does not exist before creating.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.IncludeVarDecimal">
            <summary>
            Script options to set vardecimal storage format.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptDriIncludeSystemNames">
            <summary>
            Include system generated constraint names to enforce declarative referential integrity.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.IncludeUnsupportedStatements">
            <summary>
            Include statements in the script that are not supported on the specified SQL Server database engine type.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.SchemaQualify">
            <summary>
            Prefix object names with the object schema.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.Bindings">
            <summary>
            Script options to set bindings option.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.Collation">
            <summary>
            Script the objects that use collation.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.Default">
            <summary>
            Script the default values.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptCreateDrop">
            <summary>
            Script Object CREATE/DROP statements.  
            Possible values: 
              ScriptCreate
              ScriptDrop
              ScriptCreateDrop
            </summary>
            <remarks>
            The default is ScriptCreate.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptExtendedProperties">
            <summary>
            Script the Extended Properties for each object scripted.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptCompatibilityOption">
            <summary>
            Script only features compatible with the specified version of SQL Server.  Possible values:
              Script90Compat
              Script100Compat
              Script105Compat
              Script110Compat
              Script120Compat
              Script130Compat
              Script140Compat
              Script150Compat
              Script160Compat
            </summary>
            <remarks>
            The default is Script140Compat.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.TargetDatabaseEngineType">
            <summary>
            Script only features compatible with the specified SQL Server database engine type.
            Possible Values:
              SingleInstance
              SqlAzure
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.TargetDatabaseEngineEdition">
            <summary>
            Script only features compatible with the specified SQL Server database engine edition.
            Possible Values:
              SqlServerPersonalEdition
              SqlServerStandardEdition 
              SqlServerEnterpriseEdition 
              SqlServerExpressEdition
              SqlAzureDatabaseEdition
              SqlDatawarehouseEdition
              SqlServerStretchEdition 
              SqlManagedInstanceEdition 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptLogins">
            <summary>
            Script all logins available on the server. Passwords will not be scripted.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptObjectLevelPermissions">
            <summary>
            Generate object-level permissions.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptOwner">
            <summary>
            Script owner for the objects.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptStatistics">
            <summary>
            Script statistics, and optionally include histograms, for each selected table or view.
            Possible values:
              ScriptStatsNone
              ScriptStatsDDL
              ScriptStatsAll
            </summary>
            <remarks>
            The default value is ScriptStatsNone.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptUseDatabase">
            <summary>
            Generate USE DATABASE statement.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.TypeOfDataToScript">
            <summary>
            Generate script that contains schema only or schema and data.
            Possible Values:
              SchemaAndData
              DataOnly
              SchemaOnly
            </summary>
            <remarks>
            The default value is SchemaOnly.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptChangeTracking">
            <summary>
            Scripts the change tracking information.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptCheckConstraints">
            <summary>
            Script the check constraints for each table or view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptDataCompressionOptions">
            <summary>
            Scripts the data compression information.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptForeignKeys">
            <summary>
            Script the foreign keys for each table scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptFullTextIndexes">
            <summary>
            Script the full-text indexes for each table or indexed view scripted.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptIndexes">
            <summary>
            Script the indexes (including XML and clustered indexes) for each table or indexed view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptPrimaryKeys">
            <summary>
            Script the primary keys for each table or view scripted
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.ScriptTriggers">
            <summary>
            Script the triggers for each table or view scripted
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptOptions.UniqueKeys">
            <summary>
            Script the unique keys for each table or view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingPlanNotificationParams">
            <summary>
            Parameters to indicate the script operation has resolved the objects to be scripted.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingPlanNotificationParams.ScriptingObjects">
            <summary>
            Gets or sets the list of database objects whose progress has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingPlanNotificationParams.Count">
            <summary>
            Gets or sets the count of database objects whose progress has changed.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingPlanNotificationEvent">
            <summary>
            Event sent to indicate a script operation has determined which objects will be scripted.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingProgressNotificationParams">
            <summary>
            Parameters sent when a scripting operation has made progress.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingProgressNotificationParams.ScriptingObject">
            <summary>
            Gets or sets the scripting object whose progress has changed.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingProgressNotificationParams.Status">
            <summary>
            Gets or sets the status of the scripting operation for the scripting object.
            </summary>
            <remarks>
            Values can be: 'Completed', 'Progress', and 'Error'.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingProgressNotificationParams.CompletedCount">
            <summary>
            Gets or count of completed scripting operations.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingProgressNotificationParams.TotalCount">
            <summary>
            Gets this total count of objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingProgressNotificationParams.ErrorDetails">
            <summary>
            Gets or sets the error details if an error occurred scripting a database object.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingProgressNotificationParams.ErrorMessage">
            <summary>
            Get or sets the error message for an error that occurred scripting a database object.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingProgressNotificationEvent">
            <summary>
            Event to indicate the scripting operation has made progress.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams">
            <summary>
            Parameters for a script request.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.FilePath">
            <summary>
            Gets or sets the file path used when writing out the script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.ScriptDestination">
            <summary>
            Gets or sets whether scripting to a single file or file per object.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.DatabaseName">
            <summary>
            Gets or sets the target database the scripting operation will run against.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.ScriptingObjects">
            <summary>
            Gets or sets a list of scripting objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.IncludeObjectCriteria">
            <summary>
            Gets or sets a list of scripting object which specify the include criteria of objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.ExcludeObjectCriteria">
            <summary>
            Gets or sets a list of scripting object which specify the exclude criteria of objects to not script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.IncludeSchemas">
            <summary>
            Gets or sets a list of schema name of objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.ExcludeSchemas">
            <summary>
            Gets or sets a list of schema name of objects to not script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.IncludeTypes">
            <summary>
            Gets or sets a list of type name of objects to script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.ExcludeTypes">
            <summary>
            Gets or sets a list of type name of objects to not script
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.ScriptOptions">
            <summary>
            Gets or sets the scripting options.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.OwnerUri">
            <summary>
            Gets or sets the connection owner URI
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams.Operation">
            <summary>
            The script operation
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingResult">
            <summary>
            Parameters returned from a script request.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingRequest">
            <summary>
            Defines the scripting request type.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions">
            <summary>
            A wrpaper of ScriptOptions to map the option name with the oen in SMO.ScriptingOptions
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptAnsiPadding">
            <summary>
            Generate ANSI padding statements
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.AppendToFile">
            <summary>
            Append the generated script to a file
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ContinueScriptingOnError">
            <summary>
            Continue to script if an error occurs. Otherwise, stop.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ConvertUDDTToBaseType">
            <summary>
            Convert user-defined data types to base types.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.GenerateScriptForDependentObjects">
            <summary>
            Generate script for dependent objects for each object scripted.
            </summary>
            <remarks>
            The default is false.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.IncludeDescriptiveHeaders">
            <summary>
            Include descriptive headers for each object generated.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.IncludeIfNotExists">
            <summary>
            Check that an object with the given name exists before dropping or altering or that an object with the given name does not exist before creating.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.IncludeVarDecimal">
            <summary>
            Script options to set vardecimal storage format.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptDriIncludeSystemNames">
            <summary>
            Include system generated constraint names to enforce declarative referential integrity.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.IncludeUnsupportedStatements">
            <summary>
            Include statements in the script that are not supported on the specified SQL Server database engine type.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.SchemaQualify">
            <summary>
            Prefix object names with the object schema.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.Bindings">
            <summary>
            Script options to set bindings option.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.Collation">
            <summary>
            Script the objects that use collation.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.Default">
            <summary>
            Script the default values.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptCreateDrop">
            <summary>
            Script Object CREATE/DROP statements.  
            Possible values: 
              ScriptCreate
              ScriptDrop
              ScriptCreateDrop
              ScriptSelect
            </summary>
            <remarks>
            The default is ScriptCreate.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptExtendedProperties">
            <summary>
            Script the Extended Properties for each object scripted.
            </summary>
            <remarks>
            The default is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptCompatibilityOption">
            <summary>
            Script only features compatible with the specified version of SQL Server.  Possible values:
              Script90Compat
              Script100Compat
              Script105Compat
              Script110Compat
              Script120Compat
              Script130Compat
              Script140Compat
              Script150Compat
              Script160Compat
            </summary>
            <remarks>
            The default is Script140Compat.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.TargetDatabaseEngineType">
            <summary>
            Script only features compatible with the specified SQL Server database engine type.
            Possible Values:
              SingleInstance
              SqlAzure
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.TargetDatabaseEngineEdition">
            <summary>
            Script only features compatible with the specified SQL Server database engine edition.
            Possible Values:
              SqlServerPersonalEdition
              SqlServerStandardEdition 
              SqlServerEnterpriseEdition 
              SqlServerExpressEdition
              SqlAzureDatabaseEdition
              SqlDatawarehouseEdition
              SqlServerStretchEdition 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptLogins">
            <summary>
            Script all logins available on the server. Passwords will not be scripted.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptObjectLevelPermissions">
            <summary>
            Generate object-level permissions.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptOwner">
            <summary>
            Script owner for the objects.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptStatistics">
            <summary>
            Script statistics, and optionally include histograms, for each selected table or view.
            Possible values:
              ScriptStatsNone
              ScriptStatsDDL
              ScriptStatsAll
            </summary>
            <remarks>
            The default value is ScriptStatsNone.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptUseDatabase">
            <summary>
            Generate USE DATABASE statement.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.TypeOfDataToScript">
            <summary>
            Generate script that contains schema only or schema and data.
            Possible Values:
              SchemaAndData
              DataOnly
              SchemaOnly
            </summary>
            <remarks>
            The default value is SchemaOnly.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptChangeTracking">
            <summary>
            Scripts the change tracking information.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptCheckConstraints">
            <summary>
            Script the check constraints for each table or view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptDataCompressionOptions">
            <summary>
            Scripts the data compression information.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptForeignKeys">
            <summary>
            Script the foreign keys for each table scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptFullTextIndexes">
            <summary>
            Script the full-text indexes for each table or indexed view scripted.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptIndexes">
            <summary>
            Script the indexes (including XML and clustered indexes) for each table or indexed view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptPrimaryKeys">
            <summary>
            Script the primary keys for each table or view scripted
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptTriggers">
            <summary>
            Script the triggers for each table or view scripted
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.UniqueKeys">
            <summary>
            Script the unique keys for each table or view scripted.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.AnsiPadding">
            <summary>
            Returns Generate ANSI padding statements
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ConvertUserDefinedDataTypesToBaseType">
            <summary>
            Returns ConvertUDDTToBaseType
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.IncludeHeaders">
            <summary>
            Returns IncludeDescriptiveHeaders
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.DriIncludeSystemNames">
            <summary>
            Returns ScriptDriIncludeSystemNames
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.SchemaQualifyForeignKeysReferences">
            <summary>
            Returns SchemaQualify
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.NoCollation">
            <summary>
            Returns false if Collation is true
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.DriDefaults">
            <summary>
            Returns the value of Default Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ExtendedProperties">
            <summary>
            Returns the value of ScriptExtendedProperties Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.Permissions">
            <summary>
            Returns the value of ScriptObjectLevelPermissions Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.Statistics">
            <summary>
            Returns the value of ScriptStatistics Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ChangeTracking">
            <summary>
            Returns the value of ScriptChangeTracking Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.DriChecks">
            <summary>
            Returns the value of ScriptCheckConstraints Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.ScriptDataCompression">
            <summary>
            Returns the value of ScriptDataCompressionOptions Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.DriForeignKeys">
            <summary>
            Returns the value of ScriptForeignKeys Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.FullTextIndexes">
            <summary>
            Returns the value of ScriptFullTextIndexes Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.Indexes">
            <summary>
            Returns the value of ScriptIndexes Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.DriPrimaryKey">
            <summary>
            Returns the value of ScriptPrimaryKeys Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.Triggers">
            <summary>
            Returns the value of ScriptTriggers Property
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsOptions.DriUniqueKeys">
            <summary>
            Returns the value of UniqueKeys Property
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.ScriptAsScriptingOperation">
            <summary>
            Class to generate script as for one smo object
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingExtensionMethods">
            <summary>
            Extension methods used by the scripting service.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingExtensionMethods.GetStatus(Microsoft.SqlServer.Management.SqlScriptPublish.ScriptEventArgs)">
            <summary>
            Gets the status of a scripting operation for the passed scripting event.
            </summary>
            <param name="e">The scripting event.</param>
            <returns>The status.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingExtensionMethods.GetDatabaseObjects(Microsoft.SqlServer.Management.SqlScriptPublish.SqlScriptPublishModel)">
            <summary>
            Returns a list of ScriptingObject instances for the passed SqlScriptPublishModel instance.
            </summary>
            <param name="publishModel">The sql script publish model instance.</param>
            <returns>The list of scripting objects.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingExtensionMethods.ToUrn(Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject,System.String,System.String)">
            <summary>
            Creates a SMO Urn instance based on the passed ScriptingObject instance.
            </summary>
            <param name="scriptingObject">The scripting object instance.</param>
            <param name="database">The name of the database referenced by the Urn.</param>
            <returns>The Urn instance.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingExtensionMethods.ToScriptingObject(Microsoft.SqlServer.Management.Sdk.Sfc.Urn)">
            <summary>
            Creates a ScriptingObject instance based on the passed SMO Urn instance.
            </summary>
            <param name="urn">The urn instance.</param>
            <returns>The scripting object instance.</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingListObjectsOperation">
            <summary>
            Class to represent an in-progress list objects operation.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingListObjectsOperation.CompleteNotification">
            <summary>
            Event raised when a the list object operation is complete.
            </summary>
            <remarks>
            An event can be completed by the following conditions: success, cancel, error.
            </remarks>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingListObjectsOperation.Dispose">
            <summary>
            Disposes the scripting operation.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingObjectMatcher">
             <summary>
             Implements matching logic to filter scripting objects based on an 
             include/exclude criteria.
             </summary>
             <remarks>
             First, objects are included by the include filter.  Then, objects are removed by
             the exclude filter.  Matches are made by comparing case insensitive strings for the 
             ScriptingObject Type, Schema, and Name properties.  Wildcards '*' are supported for 
             the ScriptingObject Schema and Name properties.  Matching on ScriptingObject Type 
             property must be an exact match.
             
             Examples:
                 
             Include ScriptingObject { Type = null, Schema = "dbo", Name = null } 
             -> matches all objects in the dbo schema.
                 
             Include ScriptingObject { Type = "Table", Schema = "dbo", Name = null } 
             -> matches all tables in the dbo schema.
             
             Include ScriptingObject { Type = "Table", Schema = null, Name = "Emp*" } 
             -> matches all table names that start with "Emp"
            
             Include ScriptingObject { Type = "View", Schema = null, Name = "Emp*" } 
             Include ScriptingObject { Type = "Table", Schema = null, Name = "Emp*" } 
             -> matches all table and views with names that start with "Emp"
            
             Include ScriptingObject { Type = "Table", Schema = null, Name = null }
             Exclude ScriptingObject { Type = null, Schema = "HumanResources", Name = null } 
             -> matches all tables except tables in the "HumanResources" schema
            
             </remarks>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingObjectMatcher.Match(Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject,Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject})">
            <summary>
            Given a collection of candidate scripting objects, filters the items that match 
            based on the passed include and exclude criteria.
            </summary>
            <param name="includeCriteria">The include object criteria.</param>
            <param name="excludeCriteria">The exclude object criteria.</param>
            <param name="includeSchemas">The include schema filter.</param>
            <param name="excludeSchemas">The exclude schema filter.</param>
            <param name="includeTypes">The include type filter.</param>
            <param name="excludeTypes">The exclude type filter.</param>
            <param name="candidates">The candidate object to filter.</param>
            <returns>The matching scripting objects.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingObjectMatcher.Match(System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject},System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingObject})">
            <summary>
            Given a collection of candidate scripting objects, filters the items that match 
            based on the passed include and exclude criteria.
            </summary>
            <param name="includeCriteria">The collection of include object criteria items.</param>
            <param name="excludeCriteria">The collection of exclude object criteria items.</param>
            <param name="includeSchemas">The collection of include schema items.</param>
            <param name="excludeSchemas">The collection of exclude schema items.</param>
            <param name="includeTypes">The collection of include type items.</param>
            <param name="excludeTypes">The collection of exclude type items.</param>
            <param name="candidates">The candidate object to filter.</param>
            <returns>The matching scripting objects.</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingOperation">
            <summary>
            Base class for scripting operations.  Because scripting operations can be very long
            running, there my be multiple concurrent scripting operations.  To distinguish events
            between concurrent scripting operations, use the operation id.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingOperation.OperationId">
            <summary>
            Gets the unique id associated with this instance.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingOperation.Execute">
            <summary>
            Excecutes the scripting operation.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingOperation.Cancel">
            <summary>
            Cancels the scripting operation.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingOperation.Dispose">
            <summary>
            Disposes the scripting operation.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingService">
            <summary>
            Main class for Scripting Service functionality
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingService.ActiveOperations">
            <summary>
            The collection of active operations
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingService.InitializeService(Microsoft.Kusto.ServiceLayer.ServiceHost,Microsoft.Kusto.ServiceLayer.Scripting.IScripter,Microsoft.Kusto.ServiceLayer.Connection.IConnectionService,Microsoft.Kusto.ServiceLayer.Connection.IConnectionManager)">
            <summary>
            Initializes the Scripting Service instance
            </summary>
            <param name="serviceHost"></param>
            <param name="scripter"></param>
            <param name="connectionService"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingService.HandleListObjectsRequest(Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingListObjectsResult})">
            <summary>
            Handles request to execute start the list objects operation.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingService.HandleScriptExecuteRequest(Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingResult})">
            <summary>
            Handles request to start the scripting operation
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingService.HandleScriptCancelRequest(Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCancelParams,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.Kusto.ServiceLayer.Scripting.Contracts.ScriptingCancelResult})">
            <summary>
            Handles request to cancel a script operation.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingService.RunTask``1(Microsoft.SqlTools.Hosting.Protocol.RequestContext{``0},Microsoft.Kusto.ServiceLayer.Scripting.ScriptingOperation)">
            <summary>
            Runs the async task that performs the scripting operation.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.ScriptingService.Dispose">
            <summary>
            Disposes the scripting service and all active scripting operations.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Scripting.SmoScriptingOperation">
            <summary>
            Base class for all SMO scripting operations
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.Scripting.SmoScriptingOperation.CompleteNotification">
            <remarks>
            An event can be completed by the following conditions: success, cancel, error.
            </remarks>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.Scripting.SmoScriptingOperation.ProgressNotification">
            <summary>
            Event raised when a scripting operation has made forward progress.
            </summary>
        </member>
        <member name="E:Microsoft.Kusto.ServiceLayer.Scripting.SmoScriptingOperation.PlanNotification">
            <summary>
            Event raised when a scripting operation has resolved which database objects will be scripted.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Scripting.SmoScriptingOperation.Dispose">
            <summary>
            Disposes the scripting operation.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ServiceHost">
            <summary>
            SQL Tools VS Code Language Server request handler. Provides the entire JSON RPC
            implementation for sending/receiving JSON requests and dispatching the requests to
            handlers that are registered prior to startup.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.ServiceHost.ShutdownTimeoutInSeconds">
            <summary>
            This timeout limits the amount of time that shutdown tasks can take to complete
            prior to the process shutting down.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.ServiceHost.instance">
            <summary>
            Singleton instance of the service host for internal storage
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.ServiceHost.Instance">
            <summary>
            Current instance of the ServiceHost
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ServiceHost.#ctor">
            <summary>
            Constructs new instance of ServiceHost using the host and profile details provided.
            Access is private to ensure only one instance exists at a time.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ServiceHost.InitializeRequestHandlers">
            <summary>
            Provide initialization that must occur after the service host is started
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ServiceHost.ShutdownCallback">
            <summary>
            Delegate definition for the host shutdown event
            </summary>
            <param name="shutdownParams"></param>
            <param name="shutdownRequestContext"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.ServiceHost.InitializeCallback">
            <summary>
            Delegate definition for the host initialization event
            </summary>
            <param name="startupParams"></param>
            <param name="requestContext"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ServiceHost.RegisterShutdownTask(Microsoft.Kusto.ServiceLayer.ServiceHost.ShutdownCallback)">
            <summary>
            Adds a new callback to be called when the shutdown request is submitted
            </summary>
            <param name="callback">Callback to perform when a shutdown request is submitted</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ServiceHost.RegisterInitializeTask(Microsoft.Kusto.ServiceLayer.ServiceHost.InitializeCallback)">
            <summary>
            Add a new method to be called when the initialize request is submitted
            </summary>
            <param name="callback">Callback to perform when an initialize request is submitted</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ServiceHost.HandleShutdownRequest(System.Object,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.Object})">
            <summary>
            Handles the shutdown event for the Language Server
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ServiceHost.HandleInitializeRequest(Microsoft.SqlTools.Hosting.Contracts.InitializeRequest,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.SqlTools.Hosting.Contracts.InitializeResult})">
            <summary>
            Handles the initialization request
            </summary>
            <param name="initializeParams"></param>
            <param name="requestContext"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ServiceHost.HandleCapabilitiesRequest(Microsoft.SqlTools.Hosting.Contracts.CapabilitiesRequest,Microsoft.SqlTools.Hosting.Protocol.RequestContext{Microsoft.SqlTools.Hosting.Contracts.CapabilitiesResult})">
            <summary>
            Handles a request for the capabilities request
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.ServiceHost.HandleVersionRequest(System.Object,Microsoft.SqlTools.Hosting.Protocol.RequestContext{System.String})">
            <summary>
            Handles the version request. Sends back the server version as result.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.SqlContext.CompoundToolsSettingsValues">
            <summary>
            Handles backwards compatibility of settings by checking for settings in a priority list. If a settings
            group such as Intellisense is defined on a serialized setting it's used in the order of mssql, then sql, then
            falls back to a default value.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.CompoundToolsSettingsValues.IntelliSense">
            <summary>
            Gets or sets the detailed IntelliSense settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.CompoundToolsSettingsValues.QueryExecutionSettings">
            <summary>
            Gets or sets the query execution settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.CompoundToolsSettingsValues.Format">
            <summary>
            Gets or sets the formatter settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.CompoundToolsSettingsValues.ObjectExplorer">
            <summary>
            Gets or sets the object explorer settings
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.SqlContext.FormatterSettings">
            <summary>
            Contract for receiving formatter-specific settings as part of workspace settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.FormatterSettings.UseBracketForIdentifiers">
            <summary>
            Should names be escaped, for example converting dbo.T1 to [dbo].[T1]
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.FormatterSettings.PlaceCommasBeforeNextStatement">
            <summary>
            Should comma separated lists have the comma be at the start of a new line.
            <code>
            CREATE TABLE T1 (
                C1 INT
                , C2 INT)
            </code>
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.FormatterSettings.PlaceSelectStatementReferencesOnNewLine">
            <summary>
            Should each reference be on its own line or should references to multiple objects
            be kept on a single line
            <code>
            SELECT * 
            FROM T1,
                 T2
            </code>
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.FormatterSettings.KeywordCasing">
            <summary>
            Should keyword casing be ignored, converted to all uppercase, or
            converted to all lowercase
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.FormatterSettings.DatatypeCasing">
            <summary>
            Should data type casing be ignored, converted to all uppercase, or
            converted to all lowercase
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.FormatterSettings.AlignColumnDefinitionsInColumns">
            <summary>
            Should column definitions be aligned or left non-aligned?
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings">
            <summary>
            Class for serialization and deserialization of IntelliSense settings
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings.#ctor">
            <summary>
            Initialize the IntelliSense settings defaults
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings.EnableIntellisense">
            <summary>
            Gets or sets a flag determining if IntelliSense is enabled
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings.EnableSuggestions">
            <summary>
            Gets or sets a flag determining if suggestions are enabled
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings.LowerCaseSuggestions">
            <summary>
            Gets or sets a flag determining if built-in suggestions should be lowercase
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings.EnableErrorChecking">
            <summary>
            Gets or sets a flag determining if diagnostics are enabled
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings.EnableQuickInfo">
            <summary>
            Gets or sets a flag determining if quick info is enabled
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings.Update(Microsoft.Kusto.ServiceLayer.SqlContext.IntelliSenseSettings)">
            <summary>
            Update the Intellisense settings
            </summary>
            <param name="settings"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.SqlContext.ISqlToolsSettingsValues">
            <summary>
            Defines the common settings used by the tools service
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.ISqlToolsSettingsValues.IntelliSense">
            <summary>
            Intellisense specific settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.ISqlToolsSettingsValues.QueryExecutionSettings">
            <summary>
            Query execution specific settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.ISqlToolsSettingsValues.Format">
            <summary>
            Formatter settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.ISqlToolsSettingsValues.ObjectExplorer">
            <summary>
            Object Explorer specific settings
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.SqlContext.ObjectExplorerSettings">
            <summary>
            Contract for receiving object explorer settings as part of workspace settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.ObjectExplorerSettings.CreateSessionTimeout">
            <summary>
            Number of seconds to wait before fail create session request with timeout error
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.ObjectExplorerSettings.ExpandTimeout">
            <summary>
            Number of seconds to wait before fail expand request with timeout error
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings">
            <summary>
            Collection of settings related to the execution of queries
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultBatchSeparator">
            <summary>
            Default value for batch separator (de facto standard as per SSMS)
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultMaxCharsToStore">
            <summary>
            Default number of chars to store for long text fields (de facto standard as per SSMS)
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultMaxXmlCharsToStore">
            <summary>
            Default number of chars to store of XML values (de facto standard as per SSMS)
            xml is a special case so number of chars to store is usually greater than for other long types 
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultExecutionPlanOptions">
            <summary>
            Default selection of returning an actual XML showplan with all batches
            Do not return any execution plan by default
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultDisplayBitAsNumber">
            <summary>
            Default option for displaying a bit column as a number. (defacto standard as per SSMS)
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultRowCount">
            <summary>
            default row count
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultTextSize">
            <summary>
            default text size
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultExecutionTimeout">
            <summary>
            default execution timeout
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultNoCount">
            <summary>
            default no count
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultNoExec">
            <summary>
            default no exec
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultParseOnly">
            <summary>
            default parse only
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultArithAbort">
            <summary>
            default arith abort
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultConcatNullYieldsNull">
            <summary>
            default concat null yields null
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultStatisticsTime">
            <summary>
            default statistics time
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultStatisticsIO">
            <summary>
            default statistics IO
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultXactAbortOn">
            <summary>
            default transaction abort ON
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultAnsiPadding">
            <summary>
            default ANSI padding
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultAnsiWarnings">
            <summary>
            default ANSI warnings
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultAnsiNulls">
            <summary>
            default ANSI Nulls
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultAnsiDefaults">
            <summary>
            default use ANSI defaults
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultQuotedIdentifier">
            <summary>
            default quoted identifier
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultAnsiNullDefaultOn">
            <summary>
            default ANSI NULL default ON
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultImplicitTransactions">
            <summary>
            default implicit transactions
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultCursorCloseOnCommit">
            <summary>
            default cursor close on commit
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultTransactionIsolationLevel">
            <summary>
            default transaction isolation level
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultDeadlockPriority">
            <summary>
            default deadlock priority
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultLockTimeout">
            <summary>
            default lock timeout
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultQueryGovernorCostLimit">
            <summary>
            default query governor cost limit
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DefaultSqlCmdMode">
            <summary>
            Default value for flag to run query in sqlcmd mode
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.BatchSeparator">
            <summary>
            The configured batch separator, will use a default if a value was not configured
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.MaxCharsToStore">
            <summary>
            Maximum number of characters to store in temp file for long character fields and binary
            fields. Will use a default if a value was not configured.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.MaxXmlCharsToStore">
            <summary>
            Maximum number of characters to store in temp file for XML columns. Will use a default
            value if one was not configured.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.ExecutionPlanOptions">
            <summary>
            Options for returning execution plans when executing queries
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DisplayBitAsNumber">
            <summary>
            Determines how to generate display value for bit columns. If <c>true</c>, bit columns
            will be rendered as "1" or "0". If <c>false</c>, bit columns will be rendered as
            "true" or "false"
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.RowCount">
            <summary>
            Set row count
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.TextSize">
            <summary>
            Set text size
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.ExecutionTimeout">
            <summary>
            Set execution timeout
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.NoCount">
            <summary>
            Set no count
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.NoExec">
            <summary>
            Set no exec
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.ParseOnly">
            <summary>
            Set parse only
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.ArithAbort">
            <summary>
            Set arith abort
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.ConcatNullYieldsNull">
            <summary>
            Set concat null yields null
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.StatisticsTime">
            <summary>
            Set statistics time
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.StatisticsIO">
            <summary>
            Set statistics I\O
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.XactAbortOn">
            <summary>
            Set transaction abort ON
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.TransactionIsolationLevel">
            <summary>
            Set transaction isolation level
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.DeadlockPriority">
            <summary>
            Set deadlock priority
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.LockTimeout">
            <summary>
            Set lock timeout
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.QueryGovernorCostLimit">
            <summary>
            Set query governor cost limit
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.AnsiDefaults">
            <summary>
            Set ANSI defaults ON
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.QuotedIdentifier">
            <summary>
            Set quoted identifier
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.AnsiNullDefaultOn">
            <summary>
            Set ANSI null default on
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.ImplicitTransactions">
            <summary>
            Set implicit transactions
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.CursorCloseOnCommit">
            <summary>
            Set cursor close on commit
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.AnsiPadding">
            <summary>
            Set ANSI padding
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.AnsiWarnings">
            <summary>
            Set ANSI warnings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.AnsiNulls">
            <summary>
            Set ANSI nulls
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.IncludeActualExecutionPlanXml">
            <summary>
            Setting to return the actual execution plan as XML
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.IncludeEstimatedExecutionPlanXml">
            <summary>
            Setting to return the estimated execution plan as XML
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.IsSqlCmdMode">
            <summary>
            Set sqlCmd Mode
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings.Update(Microsoft.Kusto.ServiceLayer.SqlContext.QueryExecutionSettings)">
            <summary>
            Update the current settings with the new settings
            </summary>
            <param name="newSettings">The new settings</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings">
            <summary>
            Class for serialization and deserialization of the settings the SQL Tools Service needs.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings.MssqlTools">
            <summary>
            Gets or sets the underlying settings value object
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings.AllSqlTools">
            <summary>
            Gets or sets the underlying settings value object
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings.QueryExecutionSettings">
            <summary>
            Query execution settings forwarding property
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings.Update(Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings)">
            <summary>
            Updates the extension settings
            </summary>
            <param name="settings"></param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings.IsDiagnosticsEnabled">
            <summary>
            Gets a flag determining if diagnostics are enabled
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings.IsSuggestionsEnabled">
            <summary>
            Gets a flag determining if suggestions are enabled
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings.IsQuickInfoEnabled">
            <summary>
            Gets a flag determining if quick info is enabled
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettings.IsIntelliSenseEnabled">
            <summary>
            Gets a flag determining if IntelliSense is enabled
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettingsValues">
            <summary>
            Class that is used to serialize and deserialize SQL Tools settings
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettingsValues.#ctor(System.Boolean)">
            <summary>
            Initializes the Sql Tools settings values
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettingsValues.IntelliSense">
            <summary>
            Gets or sets the detailed IntelliSense settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettingsValues.QueryExecutionSettings">
            <summary>
            Gets or sets the query execution settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettingsValues.Format">
            <summary>
            Gets or sets the formatter settings
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.SqlContext.SqlToolsSettingsValues.ObjectExplorer">
            <summary>
            Gets or sets the formatter settings
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Utility.CommonConstants">
            <summary>
            Common Constant values used across multiple services
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.DatabaseUtils.IsSystemDatabaseConnection(System.String)">
            <summary>
            Check if the database is a system database
            </summary>
            <param name="databaseName">the name of database</param>
            <returns>return true if the database is a system database</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.FileUtilities.SafeFileExists(System.String)">
            <summary>
            Checks if file exists and swallows exceptions, if any
            </summary>
            <param name="path"> path of the file</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.FileUtilities.SafeFileDelete(System.String)">
            <summary>
            Deletes a file and swallows exceptions, if any
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.FileUtilities.SafeDirectoryExists(System.String)">
            <summary>
            Checks if file exists and swallows exceptions, if any
            </summary>
            <param name="path"> path of the file</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.FileUtilities.SafeDirectoryDelete(System.String,System.Boolean)">
            <summary>
            Deletes a directory and swallows exceptions, if any
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.FileUtilities.SetFileReadWrite(System.String)">
            <summary>
            Turns off the read-only attribute for this file
            </summary>
            <param name="fullFilePath"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.FileUtilities.TryGetFullPath(System.String,System.String)">
            <summary>
            Attempts to resolve the given filePath to an absolute path to a file on disk, 
            defaulting to the original filePath if that fails. 
            </summary>
            <param name="filePath">The file path to resolve</param>
            <param name="clientUri">The full file path URI used by the client</param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Utility.IRequestParams.OwnerUri">
            <summary>
            The Uri to find the connection to do the restore operations
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Utility.LongList`1">
            <summary>
            Collection class that permits storage of over <c>int.MaxValue</c> items. This is performed
            by using a 2D list of lists. The internal lists are only initialized as necessary. This
            collection implements IEnumerable to make it easier to run LINQ queries against it.
            </summary>
            <remarks>
            This class is based on code from $\Data Tools\SSMS_Main\sql\ssms\core\DataStorage\ArrayList64.cs
            with additions to bring it up to .NET 4.5 standards
            </remarks>
            <typeparam name="T">Type of the values to store</typeparam>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.#ctor">
            <summary>   
            Creates a new long list
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.Count">
            <summary>
            The total number of elements in the array
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.Item(System.Int64)">
            <summary>
            Used to get or set the value at a given index in the list
            </summary>
            <param name="index">Index into the list to access</param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.ExpandListSize">
            <summary>
            The number of elements to store in a single list before expanding into multiple lists
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.Add(`0)">
            <summary>
            Adds the specified value to the end of the list
            </summary>
            <param name="val">Value to add to the list</param>
            <returns>Index of the item that was just added</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.GetItem(System.Int64)">
            <summary>
            Returns the item at the specified index
            </summary>
            <param name="index">Index of the item to return</param>
            <returns>The item at the index specified</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongSkip(System.Int64)">
            <summary>
            Skips ahead the number of elements requested and returns the elements after that many elements
            </summary>
            <param name="start">The number of elements to skip</param>
            <returns>All elements after the number of elements to skip</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.SetItem(System.Int64,`0)">
            <summary>
            Sets the item at the specified index
            </summary>
            <param name="index">Index of the item to set</param>
            <param name="value">The item to store at the index specified</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.RemoveAt(System.Int64)">
            <summary>
            Removes an item at the specified location and shifts all the items after the provided
            index up by one.
            </summary>
            <param name="index">The index to remove from the list</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.GetEnumerator">
            <summary>
            Returns a generic enumerator for enumeration of this LongList
            </summary>
            <returns>Enumerator for LongList</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator for enumeration of this LongList
            </summary>
            <returns></returns>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.localList">
            <summary>
            The current list that we're iterating over.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.index">
            <summary>
            The current index into the list
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.#ctor(Microsoft.Kusto.ServiceLayer.Utility.LongList{`1})">
            <summary>
            Constructs a new enumerator for a given LongList
            </summary>
            <param name="list">The list to enumerate</param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.Index">
            <summary>
            The index into the list of the item that is the current item. Upon setting,
            <see cref="P:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.Current"/> will be updated if the index is in range. Otherwise,
            <c>default(<see cref="!:TEt"/>)</c> will be used.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.Current">
            <summary>
            Returns the current item in the enumeration
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.System#Collections#IEnumerator#Current">
            <summary>
            Returns the current item in the enumeration
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.MoveNext">
            <summary>
            Moves to the next item in the list we're iterating over
            </summary>
            <returns>Whether or not the move was successful</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.Reset">
            <summary>
            Resets the enumeration
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.LongList`1.LongListEnumerator`1.Dispose">
            <summary>
            Disposal method. Does nothing.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Utility.ResolvedFile">
             <summary>
             Utility object holding a result of a file resolve action.
            
             Workspace APIs support reading from disk if a file hasn't been
             officially opened via VSCode APIs with a buffer. This is problematic
             in the case where it's not a file on disk as any attempt will cause
             an exception to be thrown.
             
             To mitigate this a ResolvedFile object has an additional flag indicating
             if the file can be read from disk.
             </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.FromSqlScript">
            <summary>
            Provides utilities for converting from SQL script syntax into POCOs.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.FromSqlScript.DecodeMultipartIdentifier(System.String)">
            <summary>
            Decodes a multipart identifier as used in a SQL script into an array of the multiple
            parts of the identifier. Implemented as a state machine that iterates over the
            characters of the multipart identifier.
            </summary>
            <param name="multipartIdentifier">Multipart identifier to decode (eg, "[dbo].[test]")</param>
            <returns>The parts of the multipart identifier in an array (eg, "dbo", "test")</returns>
            <exception cref="T:System.FormatException">
            Thrown if an invalid state transition is made, indicating that the multipart identifer
            is not valid. 
            </exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.FromSqlScript.UnwrapLiteral(System.String)">
            <summary>
            Converts a value from a script into a plain version by unwrapping literal wrappers
            and unescaping characters.
            </summary>
            <param name="literal">The value to unwrap (eg, "(N'foo''bar')")</param>
            <returns>The unwrapped/unescaped literal (eg, "foo'bar")</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.FromSqlScript.IsIdentifierBracketed(System.String)">
            <summary>
            Tests whether an identifier is escaped with brackets e.g. [Northwind].[dbo].[Orders]
            </summary>
            <param name="identifer">Identifier to check.</param>
            <returns>Boolean indicating if identifier is escaped with brackets.</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript">
            <summary>
            Provides utility for converting arbitrary objects into strings that are ready to be
            inserted into SQL strings
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript.FormatColumnType(System.Data.Common.DbColumn,System.Boolean)">
            <summary>
            Extracts a DbColumn's datatype and turns it into script ready 
            </summary>
            <param name="column"></param>
            <returns></returns>
            <seealso cref="!:Microsoft.SqlTools.ServiceLayer.ObjectExplorer.SmoModel.SmoColumnCustomNodeHelper.GetTypeSpecifierLabel"/>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript.FormatIdentifier(System.String)">
            <summary>
            Escapes an identifier such as a table name or column name by wrapping it in square brackets
            </summary>
            <param name="identifier">The identifier to format</param>
            <returns>Identifier formatted for use in a SQL script</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript.FormatMultipartIdentifier(System.String)">
            <summary>
            Escapes a multi-part identifier such as a table name or column name with multiple
            parts split by '.'
            </summary>
            <param name="identifier">The identifier to escape (eg, "dbo.test")</param>
            <returns>The escaped identifier (eg, "[dbo].[test]")</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript.FormatMultipartIdentifier(System.String[])">
            <summary>
            Escapes a multipart identifier such as a table name, given an array of the parts of the
            multipart identifier.
            </summary>
            <param name="identifiers">The parts of the identifier to escape (eg, "dbo", "test")</param>
            <returns>An escaped version of the multipart identifier (eg, "[dbo].[test]")</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript.FormatValue(System.Object,System.Data.Common.DbColumn)">
            <summary>
            Converts an object into a string for SQL script
            </summary>
            <param name="value">The object to convert</param>
            <param name="column">The column metadata for the cell to insert</param>
            <returns>String version of the cell value for use in SQL scripts</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript.FormatValue(Microsoft.Kusto.ServiceLayer.QueryExecution.Contracts.DbCellValue,System.Data.Common.DbColumn)">
            <summary>
            Converts a cell value into a string for SQL script
            </summary>
            <param name="value">The cell to convert</param>
            <param name="column">The column metadata for the cell to insert</param>
            <returns>String version of the cell value for use in SQL scripts</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript.EscapeQuotedSqlString(System.String)">
            <summary>
            Returns a valid SQL string packaged in single quotes with single quotes inside escaped
            </summary>
            <param name="rawString">String to be formatted</param>
            <returns>Formatted SQL string</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SqlScriptFormatters.ToSqlScript.EscapeString(System.String,System.Char)">
            <summary>
            Replaces all instances of <paramref name="escapeCharacter"/> with a duplicate of 
            <paramref name="escapeCharacter"/>. For example "can't" becomes "can''t"
            </summary>
            <param name="value">The string to escape</param>
            <param name="escapeCharacter">The character to escape</param>
            <returns>The escaped string</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions">
            <summary>
            Represents .NET system extensions.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.TrimPrefix(System.String,System.String)">
            <summary>
            Removes a prefix from a string.  If the string does not begin with the prefix, returns the string as-is.
            </summary>
            <param name="value">The string</param>
            <param name="prefix">The prefix.</param>
            <returns>The value without the prefix.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.TryConvertEnum``1(System.Int32,``0)">
            <summary>
            Attempts to convert a value to an enumerated value.
            </summary>
            <typeparam name="T">The enumerated type.</typeparam>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The enumerated value if successful.  The default value otherwise.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.TryParseBool(System.String,System.Boolean)">
            <summary>
            Attempts to parse a value as a boolean.
            </summary>
            <param name="value">The value to parse.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The parsed value.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.TryParseEnum``1(System.String,``0,System.Boolean)">
            <summary>
            Attempts to parse a value as an enumerated value.
            </summary>
            <typeparam name="T">The enumerated type.</typeparam>
            <param name="value">The value.</param>
            <param name="defaultValue">The default value.</param>
            <param name="ignoreCase">true to ignore case; false to consider case.</param>
            <returns>The enumerated value if successful.  The default value otherwise.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.TryParseDateTime(System.String)">
            <summary>
            Attempts to parse a string value as a <see cref="T:System.DateTime"/>.
            </summary>
            <param name="value">The string value.</param>
            <returns>The parsed value if successful; null otherwise.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.TryParseTimeSpan(System.String,System.TimeSpan)">
            <summary>
            Attempts to parse a value as a <see cref="T:System.TimeSpan"/>.
            </summary>
            <param name="value">The value to parse.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The parsed value.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.Materialize``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Efficiently realizes an enumerable as a collection in memory.  Can be used to avoid multiple iterations.
            </summary>
            <typeparam name="T">The enumerated type.</typeparam>
            <param name="enumerable">The enumerable to materialize.</param>
            <returns>The materialized enumerable, for example an array or list.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.Each``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Performs an action for each item of an enumerable.  This is an iterator method and must be
            realized in-memory, for example using <see cref="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.Materialize``1(System.Collections.Generic.IEnumerable{``0})"/>.
            </summary>
            <typeparam name="T">The enumerated type.</typeparam>
            <param name="enumerable">The enumerable.</param>
            <param name="action">The action.</param>
            <returns>The enumerable after each the action is performed.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.Join(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Concatenates the members of a collection of strings, using the specified separator between each member.
            </summary>
            <param name="enumerable">A collection that contains the strings to concatenate.</param>
            <param name="separator">The string to use as a separator.</param>
            <returns>A string that consists of the members of values delimited by the separator string. If the collection is empty, the method returns <see cref="F:System.String.Empty"/>. If the collection is null, the method returns null.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.ToEnumerable(System.Data.IDataReader)">
            <summary>
            Enumerates the records in an <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The reader.</param>
            <returns>The enumerable.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.ToScalar``1(System.Data.IDataReader)">
            <summary>
            Gets a scalar result from an <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <typeparam name="T">The type of the result.</typeparam>
            <param name="reader">The reader.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.SystemExtensions.RunSync``1(System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Runs an asynchronous action synchronously.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="action">The action.</param>
            <returns>The result of the action.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.TaskExtensions.ContinueWithOnFaulted(System.Threading.Tasks.Task,System.Action{System.Threading.Tasks.Task})">
            <summary>
            Adds handling to check the Exception field of a task and log it if the task faulted
            </summary>
            <remarks>
            This will effectively swallow exceptions in the task chain.
            </remarks>
            <param name="antecedent">The task to continue</param>
            <param name="continuationAction">
            An optional operation to perform after exception handling has occurred
            </param>
            <returns>Task with exception handling on continuation</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.TaskExtensions.ContinueWithOnFaulted(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task,System.Threading.Tasks.Task})">
            <summary>
            Adds handling to check the Exception field of a task and log it if the task faulted.
            This version allows for async code to be ran in the continuation function.
            </summary>
            <remarks>
            This will effectively swallow exceptions in the task chain.
            </remarks>
            <param name="antecedent">The task to continue</param>
            <param name="continuationFunc">
            An optional operation to perform after exception handling has occurred
            </param>
            <returns>Task with exception handling on continuation</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.TaskExtensions.WithTimeout``1(System.Threading.Tasks.Task{``0},System.Int32)">
            <summary>
            This will enforce time out to run an async task with returning result
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="task">The async task to run</param>
            <param name="timeout">Time out in milliseconds</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.TaskExtensions.WithTimeout(System.Threading.Tasks.Task,System.Int32)">
            <summary>
            This will enforce time out to run an async task without returning result
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="task">The async task to run</param>
            <param name="timeout">Time out in milliseconds</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils">
            <summary>
            Represents validation utilities.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsArgumentNotNull(System.Object,System.String)">
            <summary>
            Validates whether an argument is not null.
            </summary>
            <param name="param">The parameter.</param>
            <param name="paramName">The parameter name.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsArgumentNotNullOrWhiteSpace(System.String,System.String)">
            <summary>
            Validates whether a string argument is not null or white space.
            </summary>
            <param name="param">The parameter.</param>
            <param name="paramName">The parameter name.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsArgumentNullOrEmpty(System.String,System.String)">
            <summary>
            Validates whether a string argument is null or empty.
            </summary>
            <param name="param">The parameter.</param>
            <param name="paramName">The parameter name.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsArgumentNotEqual``1(``0,``0,System.String,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Validates whether an argument equals an expected value.
            </summary>
            <typeparam name="T">The type of the argument.</typeparam>
            <param name="actual"></param>
            <param name="expected"></param>
            <param name="paramName"></param>
            <param name="comparer"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsArgumentEqual``1(``0,``0,System.String,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Validates whether an argument equals an expected value.
            </summary>
            <typeparam name="T">The type of the argument.</typeparam>
            <param name="actual"></param>
            <param name="expected"></param>
            <param name="paramName"></param>
            <param name="comparer"></param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsNotNull(System.Object,System.String)">
            <summary>
            Validates whether an object is not null.
            </summary>
            <param name="value">The object value.</param>
            <param name="name">The object name.  May optionally include an exception message.</param>
            <exception cref="T:System.InvalidOperationException">The object is null.</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsNotNull``1(System.Object,System.String)">
            <summary>
            Validates whether an object is not null.
            </summary>
            <typeparam name="TException">The type of the exception to throw.</typeparam>
            <param name="value">The object value.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsNotNullOrWhitespace(System.String,System.String)">
            <summary>
            Validates whether a string is not null or white space.
            </summary>
            <param name="value">The string value.</param>
            <param name="name">The string name.  May optionally include an exception message.</param>
            <exception cref="T:System.InvalidOperationException">The value is null or white-space.</exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Utility.ValidationUtils.IsTrue``1(System.Boolean,System.String)">
            <summary>
            Validates whether a condition is true.  Throws an exception if not.
            </summary>
            <typeparam name="T">The type of the exception.</typeparam>
            <param name="condition">The condition.</param>
            <param name="message">The exception message.</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition">
            <summary>
            Provides details about a position in a file buffer.  All
            positions are expressed in 1-based positions (i.e. the
            first line and column in the file is position 1,1).
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition.None">
            <summary>
            Provides an instance that represents a position that has not been set.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition.Line">
            <summary>
            Gets the line number of the position in the buffer.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition.Column">
            <summary>
            Gets the column number of the position in the buffer.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the BufferPosition class.
            </summary>
            <param name="line">The line number of the position.</param>
            <param name="column">The column number of the position.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition.Equals(System.Object)">
            <summary>
            Compares two instances of the BufferPosition class.
            </summary>
            <param name="obj">The object to which this instance will be compared.</param>
            <returns>True if the positions are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition.GetHashCode">
            <summary>
            Calculates a unique hash code that represents this instance.
            </summary>
            <returns>A hash code representing this instance.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition.op_GreaterThan(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition)">
            <summary>
            Compares two positions to check if one is greater than the other.
            </summary>
            <param name="positionOne">The first position to compare.</param>
            <param name="positionTwo">The second position to compare.</param>
            <returns>True if positionOne is greater than positionTwo.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition.op_LessThan(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition)">
            <summary>
            Compares two positions to check if one is less than the other.
            </summary>
            <param name="positionOne">The first position to compare.</param>
            <param name="positionTwo">The second position to compare.</param>
            <returns>True if positionOne is less than positionTwo.</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange">
            <summary>
            Provides details about a range between two positions in
            a file buffer.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange.None">
            <summary>
            Provides an instance that represents a range that has not been set.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange.Start">
            <summary>
            Gets the start position of the range in the buffer.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange.End">
            <summary>
            Gets the end position of the range in the buffer.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange.HasRange">
            <summary>
            Returns true if the current range is non-zero, i.e.
            contains valid start and end positions.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange.#ctor(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition)">
            <summary>
            Creates a new instance of the BufferRange class.
            </summary>
            <param name="start">The start position of the range.</param>
            <param name="end">The end position of the range.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a new instance of the BufferRange class.
            </summary>
            <param name="startLine">The 1-based starting line number of the range.</param>
            <param name="startColumn">The 1-based starting column number of the range.</param>
            <param name="endLine">The 1-based ending line number of the range.</param>
            <param name="endColumn">The 1-based ending column number of the range.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange.Equals(System.Object)">
            <summary>
            Compares two instances of the BufferRange class.
            </summary>
            <param name="obj">The object to which this instance will be compared.</param>
            <returns>True if the ranges are equal, false otherwise.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange.GetHashCode">
            <summary>
            Calculates a unique hash code that represents this instance.
            </summary>
            <returns>A hash code representing this instance.</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FileChange">
            <summary>
            Contains details relating to a content change in an open file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FileChange.InsertString">
            <summary>
            The string which is to be inserted in the file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FileChange.Line">
            <summary>
            The 1-based line number where the change starts.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FileChange.Offset">
            <summary>
            The 1-based column offset where the change starts.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FileChange.EndLine">
            <summary>
            The 1-based line number where the change ends.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FileChange.EndOffset">
            <summary>
            The 1-based column offset where the change ends.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FilePosition">
            <summary>
            Provides details and operations for a buffer position in a
            specific file.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FilePosition.#ctor(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,System.Int32,System.Int32)">
            <summary>
            Creates a new FilePosition instance for the 1-based line and
            column numbers in the specified file.
            </summary>
            <param name="scriptFile">The ScriptFile in which the position is located.</param>
            <param name="line">The 1-based line number in the file.</param>
            <param name="column">The 1-based column number in the file.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FilePosition.#ctor(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile,Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition)">
            <summary>
            Creates a new FilePosition instance for the specified file by
            copying the specified BufferPosition
            </summary>
            <param name="scriptFile">The ScriptFile in which the position is located.</param>
            <param name="copiedPosition">The original BufferPosition from which the line and column will be copied.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FilePosition.AddOffset(System.Int32,System.Int32)">
            <summary>
            Gets a FilePosition relative to this position by adding the
            provided line and column offset relative to the contents of
            the current file.
            </summary>
            <param name="lineOffset">The line offset to add to this position.</param>
            <param name="columnOffset">The column offset to add to this position.</param>
            <returns>A new FilePosition instance for the calculated position.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FilePosition.GetLineStart">
            <summary>
            Gets a FilePosition for the line and column position
            of the beginning of the current line after any initial
            whitespace for indentation.
            </summary>
            <returns>A new FilePosition instance for the calculated position.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FilePosition.GetLineEnd">
            <summary>
            Gets a FilePosition for the line and column position
            of the end of the current line.
            </summary>
            <returns>A new FilePosition instance for the calculated position.</returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile">
            <summary>
            Contains the details and contents of an open script file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.Id">
            <summary>
            Gets a unique string that identifies this file.  At this time,
            this property returns a normalized version of the value stored
            in the ClientUri property.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.FilePath">
            <summary>
            Gets the path at which this file resides.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.ClientUri">
            <summary>
            Gets or sets the URI which the editor client uses to identify this file.
            Setter for testing purposes only
            virtual to allow mocking.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.IsAnalysisEnabled">
            <summary>
            Gets or sets a boolean that determines whether
            semantic analysis should be enabled for this file.
            For internal use only.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.IsInMemory">
            <summary>
            Gets a boolean that determines whether this file is
            in-memory or not (either unsaved or non-file content).
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.Contents">
            <summary>
            Gets or sets a string containing the full contents of the file.
            Setter for testing purposes only
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.FileRange">
            <summary>
            Gets a BufferRange that represents the entire content
            range of the file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.SyntaxMarkers">
            <summary>
            Gets the list of syntax markers found by parsing this
            file's contents.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.FileLines">
            <summary>
            Gets the list of strings for each line of the file.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor(System.String,System.String,System.IO.TextReader)">
            <summary>
            Creates a new ScriptFile instance by reading file contents from
            the given TextReader.
            </summary>
            <param name="filePath">The path at which the script file resides.</param>
            <param name="clientUri">The URI which the client uses to identify the file.</param>
            <param name="textReader">The TextReader to use for reading the file's contents.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new ScriptFile instance with the specified file contents.
            </summary>
            <param name="filePath">The path at which the script file resides.</param>
            <param name="clientUri">The path which the client uses to identify the file.</param>
            <param name="initialBuffer">The initial contents of the script file.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.GetLine(System.Int32)">
            <summary>
            Gets a line from the file's contents.
            </summary>
            <param name="lineNumber">The 1-based line number in the file.</param>
            <returns>The complete line at the given line number.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.GetTextInRange(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange)">
            <summary>
            Gets the text under a specific range
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.GetLinesInRange(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferRange)">
            <summary>
            Gets a range of lines from the file's contents. Virtual method to allow for
            mocking.
            </summary>
            <param name="bufferRange">The buffer range from which lines will be extracted.</param>
            <returns>An array of strings from the specified range of the file.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition)">
            <summary>
            Throws ArgumentOutOfRangeException if the given position is outside
            of the file's buffer extents.
            </summary>
            <param name="bufferPosition">The position in the buffer to be validated.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.ValidatePosition(System.Int32,System.Int32)">
            <summary>
            Throws ArgumentOutOfRangeException if the given position is outside
            of the file's buffer extents.
            </summary>
            <param name="line">The 1-based line to be validated.</param>
            <param name="column">The 1-based column to be validated.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.ApplyChange(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.FileChange)">
            <summary>
            Applies the provided FileChange to the file's contents
            </summary>
            <param name="fileChange">The FileChange to apply to the file's contents.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.GetOffsetAtPosition(System.Int32,System.Int32)">
            <summary>
            Calculates the zero-based character offset of a given
            line and column position in the file.
            </summary>
            <param name="lineNumber">The 1-based line number from which the offset is calculated.</param>
            <param name="columnNumber">The 1-based column number from which the offset is calculated.</param>
            <returns>The zero-based offset for the given file position.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.CalculatePosition(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.BufferPosition,System.Int32,System.Int32)">
            <summary>
            Calculates a FilePosition relative to a starting BufferPosition
            using the given 1-based line and column offset.
            </summary>
            <param name="originalPosition">The original BufferPosition from which an new position should be calculated.</param>
            <param name="lineOffset">The 1-based line offset added to the original position in this file.</param>
            <param name="columnOffset">The 1-based column offset added to the original position in this file.</param>
            <returns>A new FilePosition instance with the resulting line and column number.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.GetPositionAtOffset(System.Int32)">
            <summary>
            Calculates the 1-based line and column number position based
            on the given buffer offset.
            </summary>
            <param name="bufferOffset">The buffer offset to convert.</param>
            <returns>A new BufferPosition containing the position of the offset.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.GetRangeBetweenOffsets(System.Int32,System.Int32)">
            <summary>
            Calculates the 1-based line and column number range based on
            the given start and end buffer offsets.
            </summary>
            <param name="startOffset">The start offset of the range.</param>
            <param name="endOffset">The end offset of the range.</param>
            <returns>A new BufferRange containing the positions in the offset range.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile.SetFileContents(System.String)">
            <summary>
            Set the script files contents
            </summary>
            <param name="fileContents"></param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarkerLevel">
            <summary>
            Defines the message level of a script file marker.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarkerLevel.Information">
            <summary>
            The marker represents an informational message.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarkerLevel.Warning">
            <summary>
            The marker represents a warning message.
            </summary>
        </member>
        <member name="F:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarkerLevel.Error">
            <summary>
            The marker represents an error message.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarker">
            <summary>
            Contains details about a marker that should be displayed
            for the a script file.  The marker information could come
            from syntax parsing or semantic analysis of the script.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarker.Message">
            <summary>
            Gets or sets the marker's message string.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarker.Level">
            <summary>
            Gets or sets the marker's message level.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFileMarker.ScriptRegion">
            <summary>
            Gets or sets the ScriptRegion where the marker should appear.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion">
            <summary>
            Contains details about a specific region of text in script file.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion.File">
            <summary>
            Gets the file path of the script file in which this region is contained.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion.Text">
            <summary>
            Gets or sets the text that is contained within the region.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion.StartLineNumber">
            <summary>
            Gets or sets the starting line number of the region.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion.StartColumnNumber">
            <summary>
            Gets or sets the starting column number of the region.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion.StartOffset">
            <summary>
            Gets or sets the starting file offset of the region.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion.EndLineNumber">
            <summary>
            Gets or sets the ending line number of the region.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion.EndColumnNumber">
            <summary>
            Gets or sets the ending column number of the region.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptRegion.EndOffset">
            <summary>
            Gets or sets the ending file offset of the region.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentIdentifier">
            <summary>
            Defines a base parameter class for identifying a text document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentIdentifier.Uri">
            <summary>
            Gets or sets the URI which identifies the path of the
            text document.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition">
            <summary>
            Defines a position in a text document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition.TextDocument">
            <summary>
            Gets or sets the document identifier.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentPosition.Position">
            <summary>
            Gets or sets the position in the document.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentItem">
            <summary>
            Defines a text document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentItem.Uri">
            <summary>
            Gets or sets the URI which identifies the path of the
            text document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentItem.LanguageId">
            <summary>
            Gets or sets the language of the document
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentItem.Version">
            <summary>
            Gets or sets the version of the document
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentItem.Text">
            <summary>
            Gets or sets the full content of the document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.DidOpenTextDocumentNotification.TextDocument">
            <summary>
            Gets or sets the opened document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.DidCloseTextDocumentParams.TextDocument">
            <summary>
            Gets or sets the closed document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.DidChangeTextDocumentParams.TextDocument">
            <summary>
            Gets or sets the changed document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.DidChangeTextDocumentParams.ContentChanges">
            <summary>
            Gets or sets the list of changes to the document content.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.VersionedTextDocumentIdentifier">
            <summary>
            Define a specific version of a text document
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.VersionedTextDocumentIdentifier.Version">
            <summary>
            Gets or sets the Version of the changed text document 
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentChangeEvent.Range">
            <summary>
            Gets or sets the Range where the document was changed.  Will
            be null if the server's TextDocumentSyncKind is Full.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentChangeEvent.RangeLength">
            <summary>
            Gets or sets the length of the Range being replaced in the
            document.  Will be null if the server's TextDocumentSyncKind is 
            Full.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.TextDocumentChangeEvent.Text">
            <summary>
            Gets or sets the new text of the document.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Position.Line">
            <summary>
            Gets or sets the zero-based line number.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Position.Character">
            <summary>
            Gets or sets the zero-based column number.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Position.Equals(System.Object)">
            <summary>
            Overrides the base equality method
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Position.GetHashCode">
            <summary>
            Overrides the base GetHashCode method
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Range.Start">
            <summary>
            Gets or sets the starting position of the range.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Range.End">
            <summary>
            Gets or sets the ending position of the range.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Range.Equals(System.Object)">
            <summary>
            Overrides the base equality method
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Range.GetHashCode">
            <summary>
            Overrides the base GetHashCode method
            </summary>
            <returns></returns>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Location.Uri">
            <summary>
            Gets or sets the URI indicating the file in which the location refers.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Location.Range">
            <summary>
            Gets or sets the Range indicating the range in which location refers.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Location.Equals(System.Object)">
            <summary>
            Overrides the base equality method
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Location.GetHashCode">
            <summary>
            Overrides the base GetHashCode method
            </summary>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Contracts.DocumentSymbolParams">
            <summary>
            Defines a set of parameters to send document symbol request
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.Workspace">
            <summary>
            Manages a "workspace" of script files that are open for a particular
            editing session.  Also helps to navigate references between ScriptFiles.
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.WorkspacePath">
            <summary>
            Gets or sets the root path of the workspace.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.#ctor">
            <summary>
            Creates a new instance of the Workspace class.
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.ContainsFile(System.String)">
            <summary>
            Checks if a given URI is contained in a workspace 
            </summary>
            <param name="filePath"></param>
            <returns>Flag indicating if the file is tracked in workspace</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.GetFile(System.String)">
            <summary>
            Gets an open file in the workspace.  If the file isn't open but
            exists on the filesystem, load and return it. Virtual method to
            allow for mocking
            </summary>
            <param name="filePath">The file path at which the script resides.</param>
            <exception cref="T:System.IO.FileNotFoundException">
            <paramref name="filePath"/> is not found.
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="filePath"/> contains a null or empty string.
            </exception>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.ResolveFilePath(System.String)">
            <summary>
            Resolves a URI identifier into an actual file on disk if it exists. 
            </summary>
            <param name="clientUri">The URI identifying the file</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.UnescapePath(System.String)">
            <summary>
            Unescapes any escaped [, ] or space characters. Typically use this before calling a
            .NET API that doesn't understand PowerShell escaped chars.
            </summary>
            <param name="path">The path to unescape.</param>
            <returns>The path with the ` character before [, ] and spaces removed.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.GetFileBuffer(System.String,System.String)">
            <summary>
            Gets a new ScriptFile instance which is identified by the given file
            path and initially contains the given buffer contents.
            </summary>
            <param name="filePath"></param>
            <param name="initialBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.GetOpenedFiles">
            <summary>
            Gets an array of all opened ScriptFiles in the workspace.
            </summary>
            <returns>An array of all opened ScriptFiles in the workspace.</returns>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.CloseFile(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.ScriptFile)">
            <summary>
            Closes a currently open script file with the given file path.
            </summary>
            <param name="scriptFile">The file path at which the script resides.</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.Workspace.Dispose">
            <summary>
            Disposes of any Runspaces that were created for the
            services used in this session.
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1">
            <summary>
            Class for handling requests/events that deal with the state of the workspace, including the
            opening and closing of files, the changing of configuration, etc.
            </summary>
            <typeparam name="TConfig">
            The type of the class used for serializing and deserializing the configuration. Must be the
            actual type of the instance otherwise deserialization will be incomplete.
            </typeparam>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.#ctor">
            <summary>
            Default, parameterless constructor.
            TODO: Figure out how to make this truely singleton even with dependency injection for tests
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.Workspace">
            <summary>
            Workspace object for the service. Virtual to allow for mocking
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.CurrentSettings">
            <summary>
            Current settings for the workspace
            </summary>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.ConfigChangeCallback">
            <summary>
            Delegate for callbacks that occur when the configuration for the workspace changes
            </summary>
            <param name="newSettings">The settings that were just set</param>
            <param name="oldSettings">The settings before they were changed</param>
            <param name="eventContext">Context of the event that triggered the callback</param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.TextDocChangeCallback">
            <summary>
            Delegate for callbacks that occur when the current text document changes
            </summary>
            <param name="changedFiles">Array of files that changed</param>
            <param name="eventContext">Context of the event raised for the changed files</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.TextDocOpenCallback">
            <summary>
            Delegate for callbacks that occur when a text document is opened
            </summary>
            <param name="uri">Request uri</param>
            <param name="openFile">File that was opened</param>
            <param name="eventContext">Context of the event raised for the changed files</param>
        </member>
        <member name="T:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.TextDocCloseCallback">
            <summary>
            Delegate for callbacks that occur when a text document is closed
            </summary>
            <param name="uri">Request uri</param>
            <param name="closedFile">File that was closed</param>
            <param name="eventContext">Context of the event raised for changed files</param>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.ConfigChangeCallbacks">
            <summary>
            List of callbacks to call when the configuration of the workspace changes
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.TextDocChangeCallbacks">
            <summary>
            List of callbacks to call when the current text document changes
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.TextDocOpenCallbacks">
            <summary>
            List of callbacks to call when a text document is opened
            </summary>
        </member>
        <member name="P:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.TextDocCloseCallbacks">
            <summary>
            List of callbacks to call when a text document is closed
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.RegisterConfigChangeCallback(Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService{`0}.ConfigChangeCallback)">
            <summary>
            Adds a new task to be called when the configuration has been changed. Use this to
            handle changing configuration and changing the current configuration.
            </summary>
            <param name="task">Task to handle the request</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.RegisterTextDocChangeCallback(Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService{`0}.TextDocChangeCallback)">
            <summary>
            Adds a new task to be called when the text of a document changes.
            </summary>
            <param name="task">Delegate to call when the document changes</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.RegisterTextDocCloseCallback(Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService{`0}.TextDocCloseCallback)">
            <summary>
            Adds a new task to be called when a text document closes.
            </summary>
            <param name="task">Delegate to call when the document closes</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.RegisterTextDocOpenCallback(Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService{`0}.TextDocOpenCallback)">
            <summary>
            Adds a new task to be called when a file is opened
            </summary>
            <param name="task">Delegate to call when a document is opened</param>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.HandleDidChangeTextDocumentNotification(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.DidChangeTextDocumentParams,Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Handles text document change events
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.HandleDidChangeConfigurationNotification(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.DidChangeConfigurationParams{`0},Microsoft.SqlTools.Hosting.Protocol.EventContext)">
            <summary>
            Handles the configuration change event
            </summary>
        </member>
        <member name="M:Microsoft.Kusto.ServiceLayer.Workspace.WorkspaceService`1.GetFileChangeDetails(Microsoft.Kusto.ServiceLayer.Workspace.Contracts.Range,System.String)">
            <summary>
            Switch from 0-based offsets to 1 based offsets
            </summary>
            <param name="changeRange"></param>
            <param name="insertString"></param>       
        </member>
    </members>
</doc>
